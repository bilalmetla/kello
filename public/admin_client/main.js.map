{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/activation/activation-edit/activation-edit.component.html","webpack:///./src/app/activation/activation-edit/activation-edit.component.ts","webpack:///./src/app/activation/activation-filter.ts","webpack:///./src/app/activation/activation-list/activation-list.component.html","webpack:///./src/app/activation/activation-list/activation-list.component.ts","webpack:///./src/app/activation/activation.module.ts","webpack:///./src/app/activation/activation.routes.ts","webpack:///./src/app/activation/activation.service.ts","webpack:///./src/app/activation/activation.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/customer/customer-edit/customer-edit.component.html","webpack:///./src/app/customer/customer-edit/customer-edit.component.ts","webpack:///./src/app/customer/customer-filter.ts","webpack:///./src/app/customer/customer-list/customer-list.component.html","webpack:///./src/app/customer/customer-list/customer-list.component.ts","webpack:///./src/app/customer/customer.module.ts","webpack:///./src/app/customer/customer.routes.ts","webpack:///./src/app/customer/customer.service.ts","webpack:///./src/app/customer/customer.ts","webpack:///./src/app/flights/flight-edit/flight-edit.component.html","webpack:///./src/app/flights/flight-edit/flight-edit.component.ts","webpack:///./src/app/flights/flight-filter.ts","webpack:///./src/app/flights/flight-list/flight-list.component.html","webpack:///./src/app/flights/flight-list/flight-list.component.ts","webpack:///./src/app/flights/flight.module.ts","webpack:///./src/app/flights/flight.routes.ts","webpack:///./src/app/flights/flight.service.ts","webpack:///./src/app/flights/flight.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/hotel/hotel-edit/hotel-edit.component.html","webpack:///./src/app/hotel/hotel-edit/hotel-edit.component.ts","webpack:///./src/app/hotel/hotel-filter.ts","webpack:///./src/app/hotel/hotel-list/hotel-list.component.html","webpack:///./src/app/hotel/hotel-list/hotel-list.component.ts","webpack:///./src/app/hotel/hotel.module.ts","webpack:///./src/app/hotel/hotel.routes.ts","webpack:///./src/app/hotel/hotel.service.ts","webpack:///./src/app/hotel/hotel.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/offer/offer-edit/offer-edit.component.html","webpack:///./src/app/offer/offer-edit/offer-edit.component.ts","webpack:///./src/app/offer/offer-filter.ts","webpack:///./src/app/offer/offer-list/offer-list.component.html","webpack:///./src/app/offer/offer-list/offer-list.component.ts","webpack:///./src/app/offer/offer-partners/offer-partners.component.html","webpack:///./src/app/offer/offer-partners/offer-partners.component.ts","webpack:///./src/app/offer/offer-products/offer-products.component.html","webpack:///./src/app/offer/offer-products/offer-products.component.ts","webpack:///./src/app/offer/offer.module.ts","webpack:///./src/app/offer/offer.routes.ts","webpack:///./src/app/offer/offer.service.ts","webpack:///./src/app/offer/offer.ts","webpack:///./src/app/partner/partner-edit/partner-edit.component.html","webpack:///./src/app/partner/partner-edit/partner-edit.component.ts","webpack:///./src/app/partner/partner-filter.ts","webpack:///./src/app/partner/partner-list/partner-list.component.html","webpack:///./src/app/partner/partner-list/partner-list.component.ts","webpack:///./src/app/partner/partner.module.ts","webpack:///./src/app/partner/partner.routes.ts","webpack:///./src/app/partner/partner.service.ts","webpack:///./src/app/partner/partner.ts","webpack:///./src/app/product/product-edit/product-edit.component.html","webpack:///./src/app/product/product-edit/product-edit.component.ts","webpack:///./src/app/product/product-filter.ts","webpack:///./src/app/product/product-list/product-list.component.html","webpack:///./src/app/product/product-list/product-list.component.ts","webpack:///./src/app/product/product.module.ts","webpack:///./src/app/product/product.routes.ts","webpack:///./src/app/product/product.service.ts","webpack:///./src/app/product/product.ts","webpack:///./src/app/rateplan/rateplan-edit/rateplan-edit.component.html","webpack:///./src/app/rateplan/rateplan-edit/rateplan-edit.component.ts","webpack:///./src/app/rateplan/rateplan-filter.ts","webpack:///./src/app/rateplan/rateplan-list/rateplan-list.component.html","webpack:///./src/app/rateplan/rateplan-list/rateplan-list.component.ts","webpack:///./src/app/rateplan/rateplan.module.ts","webpack:///./src/app/rateplan/rateplan.routes.ts","webpack:///./src/app/rateplan/rateplan.service.ts","webpack:///./src/app/rateplan/rateplan.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/supply/supply-edit/supply-edit.component.html","webpack:///./src/app/supply/supply-edit/supply-edit.component.ts","webpack:///./src/app/supply/supply-filter.ts","webpack:///./src/app/supply/supply-list/supply-list.component.html","webpack:///./src/app/supply/supply-list/supply-list.component.ts","webpack:///./src/app/supply/supply.module.ts","webpack:///./src/app/supply/supply.routes.ts","webpack:///./src/app/supply/supply.service.ts","webpack:///./src/app/supply/supply.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Activations</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Activations Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <form #activationForm=\\\"ngForm\\\" *ngIf=\\\"activation\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{activation.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">\\n                                    Phone\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{activation.phone || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"smsCode\\\">\\n                                    Sms Code\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{activation.smsCode || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"emailCode\\\">\\n                                    Email Code\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{activation.emailCode || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"expiry\\\">\\n                                    Expiry\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{activation.expiry || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"activationForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivationService } from '../activation.service';\nimport { Activation } from '../activation';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'activation-edit',\n  templateUrl: './activation-edit.component.html'\n})\nexport class ActivationEditComponent implements OnInit {\n\n    id: string;\n    activation: Activation;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private activationService: ActivationService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Activation());\n                    return this.activationService.findById(id)\n                })\n            )\n            .subscribe(\n                activation => { \n                    this.activation = activation; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.activationService.save(this.activation).subscribe(\n            activation => { \n                this.activation = activation; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/activation']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/activation']);\n    }    \n}","export class ActivationFilter {\n    phone: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Activations</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Activations List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Phone:</label>\\n        <input [(ngModel)]=\\\"filter.phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../activation','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../activation', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"activationList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sms Code</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Email Code</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Expiry</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of activationList\\\" [class.active]=\\\"item === selectedActivation\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.phone}}</td>\\n            <td>{{item.smsCode}}</td>\\n            <td>{{item.emailCode}}</td>\\n            <td>{{item.expiry}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../activation', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ActivationFilter } from '../activation-filter';\nimport { ActivationService } from '../activation.service';\nimport { Activation } from '../activation';\n\n@Component({\n    selector: 'activation',\n    templateUrl: 'activation-list.component.html'\n})\nexport class ActivationListComponent {\n\n    filter = new ActivationFilter();\n    selectedActivation: Activation;\n    errors = '';\n\n    get activationList(): Activation[] {\n        return this.activationService.activationList;\n    }\n\n    constructor(private activationService: ActivationService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.activationService.load(this.filter);\n    }\n\n    select(selected: Activation): void {\n        this.selectedActivation = selected;\n    }\n\n    delete(activation: Activation): void {\n        if (confirm(\"Are you sure?\")) {\n            this.activationService.delete(activation).subscribe(\n                activation => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ActivationListComponent } from './activation-list/activation-list.component';\nimport { ActivationEditComponent } from './activation-edit/activation-edit.component';\nimport { ActivationService } from './activation.service';\nimport { ACTIVATION_ROUTES } from './activation.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(ACTIVATION_ROUTES)\n  ],\n  declarations: [\n    ActivationListComponent,\n    ActivationEditComponent\n  ],\n  providers: [\n    ActivationService\n  ],\n  exports: [\n  ]\n})\nexport class ActivationModule { }\n","import { Routes } from '@angular/router';\nimport { ActivationListComponent } from './activation-list/activation-list.component';\nimport { ActivationEditComponent } from './activation-edit/activation-edit.component';\n\nexport const ACTIVATION_ROUTES: Routes = [\n  {\n    path: 'activation',\n    component: ActivationListComponent\n  },\n  {\n    path: 'activation/:id',\n    component: ActivationEditComponent\n  }\n]\n","import { Activation } from './activation';\nimport { ActivationFilter } from './activation-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class ActivationService {\n    \n    baseUrl = `http://127.0.0.1:3000/activations`;\n    constructor(private http: HttpClient) {\n    }\n\n    activationList: Activation[] = [];\n  \n    findById(id: string): Observable<Activation> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Activation>(url, {params, headers});\n    }\n    \n    load(filter: ActivationFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.activationList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: ActivationFilter): Observable<Activation[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"phone\": filter.phone,\n        };\n\n        return this.http.get<Activation[]>(url, {params, headers});\n    }\n\n    save(entity: Activation): Observable<Activation> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Activation>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Activation>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Activation): Observable<Activation> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Activation>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Activation {\n    id: string;\n    phone: string;\n    smsCode: number;\n    emailCode: number;\n    expiry: Date;    \n}","module.exports = \".loading-indicator {\\n  position: fixed;\\n  left: 0px;\\n  top: 0px;\\n  width: 100%;\\n  height: 100%;\\n  background-color: black;\\n  opacity: 0.3;\\n}\\n\\n.spinner {\\n  width: 40px;\\n  height: 40px;\\n\\n  position: relative;\\n  margin: 100px auto;\\n}\\n\\n.double-bounce1, .double-bounce2 {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background-color: #FFF;\\n  opacity: 0.6;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n\\n  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\\n  animation: sk-bounce 2.0s infinite ease-in-out;\\n}\\n\\n.double-bounce2 {\\n  -webkit-animation-delay: -1.0s;\\n  animation-delay: -1.0s;\\n}\\n\\n@-webkit-keyframes sk-bounce {\\n  0%, 100% {\\n    -webkit-transform: scale(0.0)\\n  }\\n  50% {\\n    -webkit-transform: scale(1.0)\\n  }\\n}\\n\\n@keyframes sk-bounce {\\n  0%, 100% {\\n    transform: scale(0.0);\\n    -webkit-transform: scale(0.0);\\n  }\\n  50% {\\n    transform: scale(1.0);\\n    -webkit-transform: scale(1.0);\\n  }\\n}\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"sidebar\\\" data-background-color=\\\"white\\\" data-active-color=\\\"danger\\\">\\n    <sidebar-cmp></sidebar-cmp>\\n  </div>\\n  <div class=\\\"main-panel\\\">\\n    <navbar-cmp></navbar-cmp>\\n    <div class=\\\"content\\\">\\n\\n      <router-outlet></router-outlet>\\n\\n      <router-outlet name=\\\"aux\\\"></router-outlet>\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'flight-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n}\n\n","import { FlightModule } from './flights/flight.module';\nimport { HotelModule } from './hotel/hotel.module';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouterModule} from '@angular/router';\n\nimport {AppComponent} from './app.component';\nimport {APP_EXTRA_OPTIONS, APP_ROUTES} from './app.routes';\nimport {HomeComponent} from './home/home.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {SidebarComponent} from './sidebar/sidebar.component';\nimport { CustomerModule } from './customer/customer.module';\nimport { PartnerModule } from './partner/partner.module';\nimport { ProductModule } from './product/product.module';\nimport { ActivationModule } from './activation/activation.module';\nimport { RateplanModule } from './rateplan/rateplan.module';\nimport { OfferModule } from './offer/offer.module';\nimport { SupplyModule } from './supply/supply.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FlightModule,\n\n    HotelModule,\n\n    RouterModule.forRoot([...APP_ROUTES], {...APP_EXTRA_OPTIONS}),\n\n    CustomerModule,\n\n    PartnerModule,\n\n    ProductModule,\n\n    ActivationModule,\n\n    RateplanModule,\n\n    OfferModule,\n\n    SupplyModule,\n  ],\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    NavbarComponent,\n    HomeComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ExtraOptions, Routes, PreloadAllModules} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'home'\n  }\n]\n\nexport const APP_EXTRA_OPTIONS: ExtraOptions = {\n  preloadingStrategy: PreloadAllModules\n}\n","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Customers</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Customers Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <form #customerForm=\\\"ngForm\\\" *ngIf=\\\"customer\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{customer.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">\\n                            Name <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">\\n                            Phone <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"tel\\\" required [(ngModel)]=\\\"customer.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"accessToken\\\">\\n                                    AccessToken\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{customer.accessToken || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isActivated\\\">\\n                                    Is Activated\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{customer.isActivated || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"customerForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'customer-edit',\n  templateUrl: './customer-edit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n    id: string;\n    customer: Customer;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private customerService: CustomerService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Customer());\n                    return this.customerService.findById(id)\n                })\n            )\n            .subscribe(\n                customer => { \n                    this.customer = customer; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.customerService.save(this.customer).subscribe(\n            customer => { \n                this.customer = customer; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/customer']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/customer']);\n    }    \n}","export class CustomerFilter {\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Customers</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Customers List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../customer','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../customer', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"customerList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">AccessToken</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Activated</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of customerList\\\" [class.active]=\\\"item === selectedCustomer\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.name}}</td>\\n            <td>{{item.phone}}</td>\\n            <td>{{item.accessToken}}</td>\\n            <td>{{item.isActivated}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../customer', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { CustomerFilter } from '../customer-filter';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\n\n@Component({\n    selector: 'customer',\n    templateUrl: 'customer-list.component.html'\n})\nexport class CustomerListComponent {\n\n    filter = new CustomerFilter();\n    selectedCustomer: Customer;\n    errors = '';\n\n    get customerList(): Customer[] {\n        return this.customerService.customerList;\n    }\n\n    constructor(private customerService: CustomerService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.customerService.load(this.filter);\n    }\n\n    select(selected: Customer): void {\n        this.selectedCustomer = selected;\n    }\n\n    delete(customer: Customer): void {\n        if (confirm(\"Are you sure?\")) {\n            this.customerService.delete(customer).subscribe(\n                customer => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\nimport { CustomerService } from './customer.service';\nimport { CUSTOMER_ROUTES } from './customer.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(CUSTOMER_ROUTES)\n  ],\n  declarations: [\n    CustomerListComponent,\n    CustomerEditComponent\n  ],\n  providers: [\n    CustomerService\n  ],\n  exports: [\n  ]\n})\nexport class CustomerModule { }\n","import { Routes } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\n\nexport const CUSTOMER_ROUTES: Routes = [\n  {\n    path: 'customer',\n    component: CustomerListComponent\n  },\n  {\n    path: 'customer/:id',\n    component: CustomerEditComponent\n  }\n]\n","import { Customer } from './customer';\nimport { CustomerFilter } from './customer-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class CustomerService {\n    \n    baseUrl = `http://127.0.0.1:3000/customers`;\n    constructor(private http: HttpClient) {\n    }\n\n    customerList: Customer[] = [];\n  \n    findById(id: string): Observable<Customer> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Customer>(url, {params, headers});\n    }\n    \n    load(filter: CustomerFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.customerList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: CustomerFilter): Observable<Customer[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n        };\n\n        return this.http.get<Customer[]>(url, {params, headers});\n    }\n\n    save(entity: Customer): Observable<Customer> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n\n        url = `${this.baseUrl}/authenticate`;\n        return this.http.post<Customer>(url, entity, {headers, params});\n\n        // if(entity.id) {\n        //     url = `${this.baseUrl}/${entity.id.toString()}`;\n        //     params = new HttpParams().set('ID', entity.id.toString());  \n        //     return this.http.put<Customer>(url, entity, {headers, params});\n        // }\n        // else {\n        //     url = `${this.baseUrl}/authenticate`;\n        //     return this.http.post<Customer>(url, entity, {headers, params});\n        // }        \n    }\n\n\n    delete(entity: Customer): Observable<Customer> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Customer>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Customer {\n    id: string;\n    name: string;\n    phone: string;\n    accessToken: string;\n    isActivated: string;    \n}","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n        <h1 class=\\\"title\\\">Flight Detail</h1>\\n    </div>\\n    <div class=\\\"content\\\">\\n    \\n        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    \\n        <form *ngIf=\\\"flight\\\">\\n                \\n            <div class=\\\"form-group\\\">\\n                <label>Id:</label>\\n                <input [(ngModel)]=\\\"flight.id\\\" name=\\\"id\\\" class=\\\"form-control\\\">\\n            </div>\\n                \\n            <div class=\\\"form-group\\\">\\n                <label>From:</label>\\n                <input [(ngModel)]=\\\"flight.from\\\" name=\\\"from\\\" class=\\\"form-control\\\">\\n            </div>\\n                \\n            <div class=\\\"form-group\\\">\\n                <label>To:</label>\\n                <input [(ngModel)]=\\\"flight.to\\\" name=\\\"to\\\" class=\\\"form-control\\\">\\n            </div>\\n                \\n            <div class=\\\"form-group\\\">\\n                <label>Date:</label>\\n                <input [(ngModel)]=\\\"flight.date\\\" name=\\\"date\\\" class=\\\"form-control\\\">\\n            </div>\\n        \\n            <div class=\\\"form-group\\\">\\n                <button\\n                (click)=\\\"save()\\\"\\n                class=\\\"btn btn-default\\\">Save</button>\\n            </div>\\n\\n        </form>\\n    \\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../flight';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'flight-edit',\n  templateUrl: './flight-edit.component.html'\n})\nexport class FlightEditComponent implements OnInit {\n\n    id: string;\n    flight: Flight;\n    errors: string;\n\n    constructor(\n        private route: ActivatedRoute,\n        private flightService: FlightService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Flight());\n                    return this.flightService.findById(id)\n                })\n            )\n            .subscribe(\n                flight => { \n                    this.flight = flight; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = 'Error loading'; \n                }\n            );\n    }\n\n    save() {\n        this.flightService.save(this.flight).subscribe(\n            flight => { \n                this.flight = flight; \n                this.errors = 'Save was successful!'; \n            },\n            err => { \n                this.errors = 'Error saving'; \n            }\n        );\n    }\n}","export class FlightFilter {\n    from: string = '';\n    to: string = '';\n}","module.exports = \"<div class=\\\"card\\\">\\n    \\n      <div class=\\\"header\\\">\\n        <h2 class=\\\"title\\\">Flight</h2>\\n      </div>\\n      <div class=\\\"content\\\">\\n    \\n        <form #f=\\\"ngForm\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label>From:</label>\\n            <input [(ngModel)]=\\\"filter.from\\\" name=\\\"from\\\" class=\\\"form-control\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>To:</label>\\n            <input [(ngModel)]=\\\"filter.to\\\" name=\\\"to\\\" class=\\\"form-control\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n              Search\\n            </button>\\n            <a [routerLink]=\\\"['../flight','new']\\\" class=\\\"btn btn-default\\\">\\n                New\\n            </a>\\n  \\n          </div>\\n          \\n        </form>\\n    \\n      </div>\\n    </div>\\n    \\n    <div class=\\\"card\\\" *ngIf=\\\"flightList.length > 0\\\">\\n    \\n      <table class=\\\"table table-contensed\\\" >\\n        <thead>\\n        <tr>            \\n            <th>Id</th>            \\n            <th>From</th>            \\n            <th>To</th>            \\n            <th>Date</th>\\n        </tr>\\n        </thead>\\n        <tr *ngFor=\\\"let item of flightList\\\" [class.active]=\\\"item === selectedFlight\\\">\\n            <td>{{item.id}}</td>\\n            <td>{{item.from}}</td>\\n            <td>{{item.to}}</td>\\n            <td>{{item.date | date}}</td>\\n            <td>\\n                \\n                <a [routerLink]=\\\"['../flight', item.id ]\\\">Details</a> |           \\n                <a (click)=\\\"select(item)\\\">Select</a>\\n            </td>\\n        </tr>\\n      </table>\\n    \\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { FlightFilter } from '../flight-filter';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../flight';\n\n@Component({\n    selector: 'flight',\n    templateUrl: 'flight-list.component.html'\n})\nexport class FlightListComponent {\n\n    filter = new FlightFilter();\n    selectedFlight: Flight;\n\n    get flightList(): Flight[] {\n        return this.flightService.flightList;\n    }\n\n    constructor(private flightService: FlightService) {\n    }\n\n    ngOnInit() {\n    }\n\n    search(): void {\n        this.flightService.load(this.filter);\n    }\n\n    select(selected: Flight): void {\n        this.selectedFlight = selected;\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FlightListComponent } from './flight-list/flight-list.component';\nimport { FlightEditComponent } from './flight-edit/flight-edit.component';\nimport { FlightService } from './flight.service';\nimport { FLIGHT_ROUTES } from './flight.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(FLIGHT_ROUTES)\n  ],\n  declarations: [\n    FlightListComponent,\n    FlightEditComponent\n  ],\n  providers: [\n    FlightService\n  ],\n  exports: [\n  ]\n})\nexport class FlightModule { }\n","import { Routes } from '@angular/router';\nimport { FlightListComponent } from './flight-list/flight-list.component';\nimport { FlightEditComponent } from './flight-edit/flight-edit.component';\n\nexport const FLIGHT_ROUTES: Routes = [\n  {\n    path: 'flight',\n    component: FlightListComponent\n  },\n  {\n    path: 'flight/:id',\n    component: FlightEditComponent\n  }\n]\n","import { Flight } from './flight';\nimport { FlightFilter } from './flight-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class FlightService {\n    \n    constructor(private http: HttpClient) {\n    }\n\n    flightList: Flight[] = [];\n  \n    findById(id: string): Observable<Flight> {\n        let url = 'http://www.angular.at/api/flight'; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Flight>(url, {params, headers});\n    }\n    \n    load(filter: FlightFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.flightList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: FlightFilter): Observable<Flight[]> {\n        let url = 'http://www.angular.at/api/flight';\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"from\": filter.from,\n            \"to\": filter.to,\n        };\n\n        return this.http.get<Flight[]>(url, {params, headers});\n    }\n\n    save(entity: Flight): Observable<Flight> {\n        let url = 'http://www.angular.at/api/flight';\n        let headers = new HttpHeaders()\n            .set('Accept', 'application/json');\n        return this.http.post<Flight>(url, entity, {headers});\n    }\n}\n\n","export class Flight {\n    id: number;\n    from: string;\n    to: string;\n    date: string;    \n}","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h1 class=\\\"title\\\">Welcome {{userName}}</h1>\\n  </div>\\n  <div class=\\\"content\\\">\\n\\n    <div *ngIf=\\\"needsLogin\\\" class=\\\"alert alert-warning\\\">\\n      You have been redirected to this page because you don't have the necessary\\n      rights for the reqeusted action. Login with a respective user account!\\n    </div>\\n\\n    <button (click)=\\\"login()\\\" class=\\\"btn btn-default\\\">Login</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-default\\\">Logout</button>\\n\\n    <!--\\n    <tabbed-pane [activeId]=\\\"0\\\">\\n        <tab title=\\\"Booked\\\" [id]=\\\"0\\\">\\n            This page could display all booked passengers ...\\n        </tab>\\n        <tab title=\\\"Checked in\\\" [id]=\\\"1\\\">\\n            This page could display all checked in passengers ...\\n        </tab>\\n\\n        <tab title=\\\"Boarded\\\" [id]=\\\"2\\\">\\n            This page could display all boarded passengers ...\\n        </tab>\\n    </tabbed-pane>\\n    -->\\n  </div>\\n\\n</div>\\n\\n\\n\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute) {\n  }\n\n  needsLogin: boolean;\n  _userName: string = '';\n\n  ngOnInit() {\n    this.needsLogin = !!this.route.snapshot.params['needsLogin'];\n  }\n\n  get userName(): string {\n    return this._userName;\n  }\n\n  login(): void {\n    this._userName = 'Max';\n  }\n\n  logout(): void {\n    this._userName = '';\n  }\n\n\n}\n","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Hotel</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Hotel Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <form #hotelForm=\\\"ngForm\\\" *ngIf=\\\"hotel\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{hotel.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">\\n                            Name <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"hotel.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"city\\\">\\n                            City <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"hotel.city\\\" name=\\\"city\\\" #city=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"stars\\\">\\n                            Stars <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"hotel.stars\\\" name=\\\"stars\\\" #stars=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"createdDate\\\">\\n                                    Created Date\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"hotel.createdDate\\\" name=\\\"createdDate\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isActivationRequired\\\">\\n                                    Created Date\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"hotel.isActivationRequired\\\" name=\\\"isActivationRequired\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"testing\\\">\\n                            Testing <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"hotel.testing\\\" name=\\\"testing\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of testing_list\\\" value=\\\"c.id\\\">{{ c.title }}</option>\\n                                     </select>  \\n                            \\n\\n                            \\n                                     \\n                                            \\n                            </div>\\n\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"hotelForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HotelService } from '../hotel.service';\nimport { Hotel } from '../hotel';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'hotel-edit',\n  templateUrl: './hotel-edit.component.html'\n})\nexport class HotelEditComponent implements OnInit {\n\n    id: string;\n    hotel: Hotel;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private hotelService: HotelService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Hotel());\n                    return this.hotelService.findById(id)\n                })\n            )\n            .subscribe(\n                hotel => { \n                    this.hotel = hotel; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = 'Error loading'; \n                }\n            );\n    }\n\n    save() {\n        this.hotelService.save(this.hotel).subscribe(\n            hotel => { \n                this.hotel = hotel; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/hotel']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = 'Error saving'; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/hotel']);\n    }    \n}","export class HotelFilter {\n    city: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Hotel</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Hotel List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>City:</label>\\n        <input [(ngModel)]=\\\"filter.city\\\" name=\\\"city\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../hotel','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../hotel', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"hotelList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">City</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Stars</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Created Date</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Created Date</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Testing</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of hotelList\\\" [class.active]=\\\"item === selectedHotel\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.name}}</td>\\n            <td>{{item.city}}</td>\\n            <td>{{item.stars}}</td>\\n            <td>{{item.createdDate | date}}</td>\\n            <td>{{item.isActivationRequired}}</td>\\n            <td>{{item.testing}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../hotel', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { HotelFilter } from '../hotel-filter';\nimport { HotelService } from '../hotel.service';\nimport { Hotel } from '../hotel';\n\n@Component({\n    selector: 'hotel',\n    templateUrl: 'hotel-list.component.html'\n})\nexport class HotelListComponent {\n\n    filter = new HotelFilter();\n    selectedHotel: Hotel;\n    errors = '';\n\n    get hotelList(): Hotel[] {\n        return this.hotelService.hotelList;\n    }\n\n    constructor(private hotelService: HotelService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.hotelService.load(this.filter);\n    }\n\n    select(selected: Hotel): void {\n        this.selectedHotel = selected;\n    }\n\n    delete(hotel: Hotel): void {\n        if (confirm(\"Are you sure?\")) {\n            this.hotelService.delete(hotel).subscribe(\n                hotel => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = 'Error deleting.';\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HotelListComponent } from './hotel-list/hotel-list.component';\nimport { HotelEditComponent } from './hotel-edit/hotel-edit.component';\nimport { HotelService } from './hotel.service';\nimport { HOTEL_ROUTES } from './hotel.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(HOTEL_ROUTES)\n  ],\n  declarations: [\n    HotelListComponent,\n    HotelEditComponent\n  ],\n  providers: [\n    HotelService\n  ],\n  exports: [\n  ]\n})\nexport class HotelModule { }\n","import { Routes } from '@angular/router';\nimport { HotelListComponent } from './hotel-list/hotel-list.component';\nimport { HotelEditComponent } from './hotel-edit/hotel-edit.component';\n\nexport const HOTEL_ROUTES: Routes = [\n  {\n    path: 'hotel',\n    component: HotelListComponent\n  },\n  {\n    path: 'hotel/:id',\n    component: HotelEditComponent\n  }\n]\n","import { Hotel } from './hotel';\nimport { HotelFilter } from './hotel-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class HotelService {\n    \n    baseUrl = `http://www.angular.at/api/hotel`;\n    constructor(private http: HttpClient) {\n    }\n\n    hotelList: Hotel[] = [];\n  \n    findById(id: string): Observable<Hotel> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Hotel>(url, {params, headers});\n    }\n    \n    load(filter: HotelFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.hotelList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: HotelFilter): Observable<Hotel[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"city\": filter.city,\n        };\n\n        return this.http.get<Hotel[]>(url, {params, headers});\n    }\n\n    save(entity: Hotel): Observable<Hotel> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Hotel>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Hotel>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Hotel): Observable<Hotel> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Hotel>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Hotel {\n    id: number;\n    name: string;\n    city: string;\n    stars: number;\n    createdDate: Date;\n    isActivationRequired: boolean;\n    testing: string;    \n}","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar bar1\\\"></span>\\n        <span class=\\\"icon-bar bar2\\\"></span>\\n        <span class=\\\"icon-bar bar3\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Kello</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-panel\\\"></i>\\n            <p>Stats</p>\\n          </a>\\n        </li>\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-bell\\\"></i>\\n            <p class=\\\"notification\\\">5</p>\\n            <p>Notifications</p>\\n            <b class=\\\"caret\\\"></b>\\n          </a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">Notification 1</a></li>\\n            <li><a href=\\\"#\\\">Notification 2</a></li>\\n            <li><a href=\\\"#\\\">Notification 3</a></li>\\n            <li><a href=\\\"#\\\">Notification 4</a></li>\\n            <li><a href=\\\"#\\\">Another notification</a></li>\\n          </ul>\\n        </li>\\n        <li>\\n          <a href=\\\"#\\\">\\n            <i class=\\\"ti-settings\\\"></i>\\n            <p>Settings</p>\\n          </a>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n</nav>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'navbar-cmp',\n  templateUrl: 'navbar.component.html'\n})\nexport class NavbarComponent {\n\n  private sidebarVisible: boolean = false;\n\n  constructor() {\n  }\n\n  sidebarToggle() {\n    var body = document.getElementsByTagName('body')[0];\n\n    if (this.sidebarVisible == false) {\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    } else {\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n  }\n}\n","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Offers</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Offers Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <a *ngIf=\\\"offer.id\\\" [routerLink]=\\\"['offerproducts']\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n                Offer Products\\n            </a>\\n            <a *ngIf=\\\"offer.id\\\" [routerLink]=\\\"['offerpartners']\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n                Offer Partners\\n            </a>\\n            <a *ngIf=\\\"offer.id\\\" href=\\\"javascript:;\\\" (click)=\\\"applyRates(offer.id, offer.rateplansId)\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n                Apply Rates\\n            </a>\\n            <form #offerForm=\\\"ngForm\\\" *ngIf=\\\"offer\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{offer.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"offerName\\\">\\n                            Offer Name <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"offer.offerName\\\" name=\\\"offerName\\\" #offerName=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"createdDate\\\">\\n                                    Created Date\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"offer.createdDate\\\" name=\\\"createdDate\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <!-- <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"productsId\\\">\\n                            productsId <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"offer.productsId\\\" name=\\\"productsId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of productsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.eng_title }}</option>\\n                                     </select>  \\n                            \\n\\n                            \\n                                     \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"partnersId\\\">\\n                            partnersId <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"offer.partnersId\\\" name=\\\"partnersId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of partnersId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.name }}</option>\\n                                     </select>  \\n                            \\n\\n                            \\n                                     \\n                                            \\n                            </div>\\n\\n                    </div>\\n                    -->\\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"rateplansId\\\">\\n                            Rate Plan <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"offer.rateplansId\\\" name=\\\"rateplansId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of rateplansId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.ratePlanTitle }}</option>\\n                                     </select>  \\n                            \\n\\n                            \\n                                     \\n                                            \\n                            </div>\\n\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"offerForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { OfferService } from '../offer.service';\nimport { Offer } from '../offer';\nimport { Rateplan } from '../../rateplan/rateplan';\nimport { RateplanService } from '../../rateplan/rateplan.service';\nimport { RateplanFilter } from '../../rateplan/rateplan-filter';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'offer-edit',\n  templateUrl: './offer-edit.component.html'\n})\nexport class OfferEditComponent implements OnInit {\n\n    id: string;\n    offer: Offer;\n    errors: string;\n    ratePlanFilter = new RateplanFilter();\n \n    get rateplansId_list(): Rateplan[] {\n        return this.rateplanService.rateplanList;\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private offerService: OfferService,\n        private rateplanService: RateplanService,\n        ) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Offer());\n                    return this.offerService.findById(id)\n                })\n            )\n            .subscribe(\n                offer => { \n                    this.offer = offer; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n\n            this.rateplanService.load(this.ratePlanFilter);\n    }\n\n    save() {\n        this.offerService.save(this.offer).subscribe(\n            offer => { \n                this.offer = offer; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/offer']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/offer']);\n    } \n    \n    applyRates (offerId: string, ratePlanId: string) {\n        this.offerService.applyRates(offerId, ratePlanId)\n        .subscribe(\n            offer=>{\n                this.errors = 'Rates Applied successful!'; \n            },\n            err=>{\n                this.errors = err; \n            }\n        )\n    }\n}","export class OfferFilter {\n    offerName: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Offers</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Offers List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Offer Name:</label>\\n        <input [(ngModel)]=\\\"filter.offerName\\\" name=\\\"offerName\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../offer','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../offer', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"offerList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Offer Name</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Created Date</th>\\n              \\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Rate Plan</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of offerList\\\" [class.active]=\\\"item === selectedOffer\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.offerName}}</td>\\n            <td>{{item.createdDate | date}}</td>\\n           \\n            <td>{{item.rateplansId}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../offer', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { OfferFilter } from '../offer-filter';\nimport { OfferService } from '../offer.service';\nimport { Offer } from '../offer';\n\n@Component({\n    selector: 'offer',\n    templateUrl: 'offer-list.component.html'\n})\nexport class OfferListComponent {\n\n    filter = new OfferFilter();\n    selectedOffer: Offer;\n    errors = '';\n\n    get offerList(): Offer[] {\n        return this.offerService.offerList;\n    }\n\n    constructor(private offerService: OfferService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.offerService.load(this.filter);\n    }\n\n    select(selected: Offer): void {\n        this.selectedOffer = selected;\n    }\n\n    delete(offer: Offer): void {\n        if (confirm(\"Are you sure?\")) {\n            this.offerService.delete(offer).subscribe(\n                offer => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Offers</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Offer Partners</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Partner Name:</label>\\n        <input [(ngModel)]=\\\"filter.eng_title\\\" name=\\\"partnerName\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n       \\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../offer', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"partnerList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n                <th class=\\\"border-top-0\\\" scope=\\\"col\\\"><input type=\\\"checkbox\\\" [checked]=\\\"isAllSelected\\\"  (change)=\\\"selectAllProducts($event)\\\" ></th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Partner Name</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of partnerList; let idx = index\\\" [class.active]=\\\"item === selectedOffer\\\">\\n            <td style=\\\"white-space: nowrap\\\">\\n              <input type=\\\"checkbox\\\" (click)=\\\"addToOffer(item, idx, $event)\\\" [checked]=\\\" (-1 != offersPartner.indexOf(item.id) ? true : false )\\\" />\\n            </td>\\n            <td>{{item.id}}</td>\\n            <td>{{item.name}} </td>\\n            <td>{{item.phone}} </td>\\n            \\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n\\n    <!-- <div class=\\\"row\\\">\\n      \\n      <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n              (click)=\\\"createOfferProducts()\\\">Submit</button></div>\\n  </div> -->\\n\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Partner } from '../../partner/partner';\nimport { PartnerService } from '../../partner/partner.service';\nimport { PartnerFilter } from '../../partner/partner-filter';\nimport { OfferService } from '../offer.service';\n\n@Component({\n    selector: 'offer-products',\n    templateUrl: 'offer-partners.component.html'\n})\nexport class OfferPartnersComponent  {\n\n    filter = new PartnerFilter();\n    selectedOffer: Partner;\n    errors = '';\n    productChecked: boolean;\n    isSelected: boolean;\n    isAllSelected: boolean;\n    selectedProductList: any;\n    offerId: string;\n    partnerList: Partner[];\n    offersPartner: any;\n    \n\n    // get partnerList(): Partner[] {\n    //     return this.partnerService.partnerList;\n    // }\n\n    constructor(\n        private route: ActivatedRoute,\n        private offerService: OfferService,\n        private partnerService: PartnerService,\n        ) {\n    }\n\n    ngOnInit() {\n\n        this\n        .route\n        .params\n        .subscribe(params => {\n            this.offerId = params.id\n        })\n        \n        //   this\n        //     .route\n        //     .params\n        //     .pipe(\n        //         map(p => p['id'] ),\n        //         switchMap(id => {\n        //             this.offerId = id;\n        //            return id;\n        //         })\n        //     )\n            \n        this.isSelected = false;\n        this.isAllSelected = false;\n        this.selectedProductList = [];\n        //this.search();\n        this.offerService\n        .getOfferPartners(this.offerId)\n        .subscribe(\n            result => {\n                this.offersPartner = result.map(p=> p.partnersId)\n                this.partnerService\n                .find(this.filter)\n                .subscribe(\n                    partners=>{\n                        this.partnerList = partners;\n                    },\n            err=>{\n                this.errors = err;\n            }\n                )\n            },\n            err=>{\n                this.errors = err;\n            }\n        )\n    }\n\n    search(): void {\n        this.partnerService.load(this.filter);\n    }\n\n    select(selected: Partner): void {\n        this.selectedOffer = selected;\n    }\n\n    addToOffer(p: Partner, index: number,  e: any): void {\n        \n        if(e.target.checked){\n           // this.selectedProductList.push({productsId: product.id });\n            this.createOfferPartner(p);\n        }else{\n\n            this.deleteOfferPartner(p.id);\n            // this.selectedProductList.filter( (pid, idx)=> {\n            //     if(pid.productsId == product.id){\n            //         this.selectedProductList.splice(idx, 1);\n            //     }\n            // } )\n            \n        }\n\n    }\n    \n    selectAllProducts(e: any): void{\n            \n        return\n        // this.isSelected = e.target.checked;\n        // this.isAllSelected = e.target.checked;\n        // if(this.isAllSelected){\n        //     this.selectedProductList = this.productList.map( (p) => { return {productsId:p.id} });\n                                    \n        // }else{\n        //     this.selectedProductList = [];\n        // }\n        // console.log(this.selectedProductList);\n        \n    }\n\n    createOfferPartner(p): void {\n       \n        this.offerService.createOfferPartner(this.offerId, {partnersId: p.id, offersId: this.offerId})\n        .subscribe(\n            offerProducts => {\n                this.errors = 'Added was successful!';\n                                 \n            },\n            err => {\n                this.errors = err;\n            }\n        );        \n        \n    }\n\n    deleteOfferPartner(partnersId: string): void {\n       \n        this.offerService.deleteOfferPartner(this.offerId, partnersId)\n        .subscribe(\n            offerProducts => {\n                this.errors = 'Delete was successful!';\n                                 \n            },\n            err => {\n                this.errors = err;\n            }\n        );        \n        \n    }\n\n\n}\n","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Offers</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Offer Products</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Product Name:</label>\\n        <input [(ngModel)]=\\\"filter.eng_title\\\" name=\\\"offerName\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n       \\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../offer', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"productList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n                <th class=\\\"border-top-0\\\" scope=\\\"col\\\"><input type=\\\"checkbox\\\" [checked]=\\\"isAllSelected\\\"  (change)=\\\"selectAllProducts($event)\\\" ></th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product Name</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of productList; let idx = index\\\" [class.active]=\\\"item === selectedOffer\\\">\\n            <td style=\\\"white-space: nowrap\\\">\\n              <input type=\\\"checkbox\\\" (click)=\\\"addToOffer(item, idx, $event)\\\" [checked]=\\\" (-1 != offerProducts.indexOf(item.id) ? true : false )\\\"  />\\n            </td>\\n            <td>{{item.id}}</td>\\n            <td>{{item.eng_title}} {{item.urdu_title}}</td>\\n            \\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n\\n    <!-- <div class=\\\"row\\\">\\n      \\n      <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n              (click)=\\\"createOfferProducts()\\\">Submit</button></div>\\n  </div> -->\\n\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Product } from '../../product/product';\nimport { ProductService } from '../../product/product.service';\nimport { ProductFilter } from '../../product/product-filter';\nimport { OfferService } from '../offer.service';\n\n@Component({\n    selector: 'offer-products',\n    templateUrl: 'offer-products.component.html'\n})\nexport class OfferProductsComponent  {\n\n    filter = new ProductFilter();\n    selectedOffer: Product;\n    errors = '';\n    productChecked: boolean;\n    isSelected: boolean;\n    isAllSelected: boolean;\n    selectedProductList: any;\n    offerId: string;\n    productList: Product[];\n    offerProducts: any;\n    // get productList(): Product[] {\n    //     return this.productService.productList;\n    // }\n\n    constructor(\n        private route: ActivatedRoute,\n        private offerService: OfferService,\n        private productService: ProductService,\n        ) {\n    }\n\n    ngOnInit() {\n\n        this\n        .route\n        .params\n        .subscribe(params => {\n            this.offerId = params.id\n        })\n        \n        //   this\n        //     .route\n        //     .params\n        //     .pipe(\n        //         map(p => p['id'] ),\n        //         switchMap(id => {\n        //             this.offerId = id;\n        //            return id;\n        //         })\n        //     )\n            \n        this.isSelected = false;\n        this.isAllSelected = false;\n        this.selectedProductList = [];\n        \n        this.offerService\n        .getOfferProducts(this.offerId)\n        .subscribe(\n            offerProducts =>{\n                this.offerProducts = offerProducts.map(p=> p.productsId);\n                console.log(this.offerProducts)\n\n                this.productService\n                .find(this.filter)\n                .subscribe(\n                    products =>{\n                        this.productList = products;\n                        \n                    },\n                    err=>{\n                        this.errors = err;\n                    }\n                )\n                \n            },\n            err=>{\n                this.errors = err;\n            }\n        )\n        \n    }\n\n    search(): void {\n        this.productService.load(this.filter);\n    }\n\n    select(selected: Product): void {\n        this.selectedOffer = selected;\n    }\n\n    addToOffer(product: Product, index: number,  e: any): void {\n        \n        if(e.target.checked){\n           // this.selectedProductList.push({productsId: product.id });\n            this.createOfferProducts(product);\n        }else{\n\n            this.deleteOfferProducts(product.id);\n            // this.selectedProductList.filter( (pid, idx)=> {\n            //     if(pid.productsId == product.id){\n            //         this.selectedProductList.splice(idx, 1);\n            //     }\n            // } )\n            \n        }\n\n    }\n    \n    selectAllProducts(e: any): void{\n            \n        return\n        // this.isSelected = e.target.checked;\n        // this.isAllSelected = e.target.checked;\n        // if(this.isAllSelected){\n        //     this.selectedProductList = this.productList.map( (p) => { return {productsId:p.id} });\n                                    \n        // }else{\n        //     this.selectedProductList = [];\n        // }\n        // console.log(this.selectedProductList);\n        \n    }\n\n    createOfferProducts(product): void {\n       \n        this.offerService.createOfferProducts(this.offerId, {productsId: product.id, offersId: this.offerId})\n        .subscribe(\n            offerProducts => {\n                this.errors = 'Added was successful!';\n                                 \n            },\n            err => {\n                this.errors = err;\n            }\n        );        \n        \n    }\n\n    deleteOfferProducts(productId: string): void {\n       \n        this.offerService.deleteOfferProducts(this.offerId, productId)\n        .subscribe(\n            offerProducts => {\n                this.errors = 'Delete was successful!';\n                                 \n            },\n            err => {\n                this.errors = err;\n            }\n        );        \n        \n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { OfferListComponent } from './offer-list/offer-list.component';\nimport { OfferEditComponent } from './offer-edit/offer-edit.component';\nimport { OfferProductsComponent } from './offer-products/offer-products.component';\nimport { OfferPartnersComponent } from './offer-partners/offer-partners.component';\nimport { OfferService } from './offer.service';\nimport { OFFER_ROUTES } from './offer.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(OFFER_ROUTES)\n  ],\n  declarations: [\n    OfferListComponent,\n    OfferEditComponent,\n    OfferProductsComponent,\n    OfferPartnersComponent,\n  ],\n  providers: [\n    OfferService\n  ],\n  exports: [\n  ]\n})\nexport class OfferModule { }\n","import { Routes } from '@angular/router';\nimport { OfferListComponent } from './offer-list/offer-list.component';\nimport { OfferEditComponent } from './offer-edit/offer-edit.component';\nimport { OfferProductsComponent } from './offer-products/offer-products.component';\nimport { OfferPartnersComponent } from './offer-partners/offer-partners.component';\n\nexport const OFFER_ROUTES: Routes = [\n  {\n    path: 'offer',\n    component: OfferListComponent\n  },\n  {\n    path: 'offer/:id',\n    component: OfferEditComponent\n  },\n  {\n    path: 'offer/:id/offerproducts',\n    component: OfferProductsComponent\n  },\n  {\n    path: 'offer/:id/offerpartners',\n    component: OfferPartnersComponent\n  }\n]\n","import { Offer } from './offer';\nimport { OfferFilter } from './offer-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class OfferService {\n    \n    baseUrl = `http://127.0.0.1:3000/offers`;\n    constructor(private http: HttpClient) {\n    }\n\n    offerList: Offer[] = [];\n  \n    findById(id: string): Observable<Offer> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Offer>(url, {params, headers});\n    }\n    \n    load(filter: OfferFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.offerList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: OfferFilter): Observable<Offer[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"offerName\": filter.offerName,\n        };\n\n        return this.http.get<Offer[]>(url, {params, headers});\n    }\n\n    save(entity: Offer): Observable<Offer> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Offer>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Offer>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Offer): Observable<Offer> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Offer>(url, {headers, params});\n        }\n\n        return null;\n    }\n    \n    createOfferProducts(id: string, productsList: any): Observable<any> {        \n        var params = new HttpParams();\n        var url = \"\"; \n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        url = `${this.baseUrl}/${id.toString()}/offerproducts`;\n        return this.http.post<any>(url, productsList, {headers, params});     \n    }\n\n    deleteOfferProducts(offerId: string, productId: string): Observable<any> {        \n        var params = new HttpParams();\n        var url = \"\"; \n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        url = `${this.baseUrl}/${offerId.toString()}/product/${productId}`;\n        return this.http.delete<any>(url, {headers, params});     \n    }\n\n    createOfferPartner(id: string, productsList: any): Observable<any> {        \n        var params = new HttpParams();\n        var url = \"\"; \n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        url = `${this.baseUrl}/${id.toString()}/offerpartners`;\n        return this.http.post<any>(url, productsList, {headers, params});     \n    }\n\n    deleteOfferPartner(offerId: string, partnersId: string): Observable<any> {        \n        var params = new HttpParams();\n        var url = \"\"; \n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        url = `${this.baseUrl}/${offerId.toString()}/partner/${partnersId}`;\n        return this.http.delete<any>(url, {headers, params});     \n    }\n\n    getOfferProducts(id: string): Observable<any> {\n        let url = `${this.baseUrl}/${id}/offerproducts`; \n        \n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<any>(url, {headers});\n    }\n\n    getOfferPartners(id: string): Observable<any> {\n        let url = `${this.baseUrl}/${id}/offerpartners`; \n        \n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<any>(url, {headers});\n    }\n\n    applyRates(offerId: string, ratePlanId: string): Observable<any> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        \n            url = `${this.baseUrl}/${offerId}/ratePlans/${ratePlanId}`;\n            return this.http.post<Offer>(url, {}, {headers, params});\n        \n    }\n\n}\n\n","export class Offer {\n    id: string;\n    offerName: string;\n    createdDate: Date;\n    productsId: string;\n    partnersId: string;\n    rateplansId: string;    \n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Partners</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Partners Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <form #partnerForm=\\\"ngForm\\\" *ngIf=\\\"partner\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{partner.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">\\n                            Name <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"partner.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">\\n                            Phone <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"tel\\\" required [(ngModel)]=\\\"partner.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"accessToken\\\">\\n                                    AccessToken\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{partner.accessToken || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isActivated\\\">\\n                                    Is Activated\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{partner.isActivated || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"pin\\\">\\n                                    Pin\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"partner.pin\\\" name=\\\"pin\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"lastActive\\\">\\n                                    Last Active\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"Date\\\" [(ngModel)]=\\\"partner.lastActive\\\" name=\\\"lastActive\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"creationDate\\\">\\n                                    CreationDate\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"Date\\\" [(ngModel)]=\\\"partner.creationDate\\\" name=\\\"creationDate\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"partnertypesId\\\">\\n                            Partner Type <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"partner.partnertypesId\\\" name=\\\"partnertypesId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of partnertypesId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.typeName }}</option>\\n                                     </select>  \\n                            \\n\\n                            \\n                                     \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"offersId\\\">\\n                                    Offer\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <select [(ngModel)]=\\\"partner.offersId\\\" name=\\\"offersId\\\"  class=\\\"form-control\\\" >\\n                                                <option *ngFor=\\\"let c of offersId_list\\\" value=\\\"{{ c.id }} \\\">{{ c.offerName }}</option>\\n                                             </select>  \\n\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"partnerForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { PartnerService } from '../partner.service';\nimport { Partner } from '../partner';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'partner-edit',\n  templateUrl: './partner-edit.component.html'\n})\nexport class PartnerEditComponent implements OnInit {\n\n    id: string;\n    partner: Partner;\n    errors: string;\n    partnertypesId_list: any;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private partnerService: PartnerService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Partner());\n                    return this.partnerService.findById(id)\n                })\n            )\n            .subscribe(\n                partner => { \n                    this.partner = partner; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n\n            this.partnertypesId_list = [{id: 1, typeName: \"Hawker\"}];\n    }\n\n    save() {\n        this.partnerService.save(this.partner).subscribe(\n            partner => { \n                this.partner = partner; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/partner']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/partner']);\n    }    \n}","export class PartnerFilter {\n    phone: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Partners</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Partners List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Phone:</label>\\n        <input [(ngModel)]=\\\"filter.phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../partner','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../partner', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"partnerList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">AccessToken</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Activated</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Pin</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Last Active</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">CreationDate</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Partner Type</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Offer</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of partnerList\\\" [class.active]=\\\"item === selectedPartner\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.name}}</td>\\n            <td>{{item.phone}}</td>\\n            <td>{{item.accessToken}}</td>\\n            <td>{{item.isActivated}}</td>\\n            <td>{{item.pin}}</td>\\n            <td>{{item.lastActive}}</td>\\n            <td>{{item.creationDate}}</td>\\n            <td>{{item.partnertypesId}}</td>\\n            <td>{{item.offersId}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../partner', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { PartnerFilter } from '../partner-filter';\nimport { PartnerService } from '../partner.service';\nimport { Partner } from '../partner';\n\n@Component({\n    selector: 'partner',\n    templateUrl: 'partner-list.component.html'\n})\nexport class PartnerListComponent {\n\n    filter = new PartnerFilter();\n    selectedPartner: Partner;\n    errors = '';\n\n    get partnerList(): Partner[] {\n        return this.partnerService.partnerList;\n    }\n\n    constructor(private partnerService: PartnerService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.partnerService.load(this.filter);\n    }\n\n    select(selected: Partner): void {\n        this.selectedPartner = selected;\n    }\n\n    delete(partner: Partner): void {\n        if (confirm(\"Are you sure?\")) {\n            this.partnerService.delete(partner).subscribe(\n                partner => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PartnerListComponent } from './partner-list/partner-list.component';\nimport { PartnerEditComponent } from './partner-edit/partner-edit.component';\nimport { PartnerService } from './partner.service';\nimport { PARTNER_ROUTES } from './partner.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(PARTNER_ROUTES)\n  ],\n  declarations: [\n    PartnerListComponent,\n    PartnerEditComponent\n  ],\n  providers: [\n    PartnerService\n  ],\n  exports: [\n  ]\n})\nexport class PartnerModule { }\n","import { Routes } from '@angular/router';\nimport { PartnerListComponent } from './partner-list/partner-list.component';\nimport { PartnerEditComponent } from './partner-edit/partner-edit.component';\n\nexport const PARTNER_ROUTES: Routes = [\n  {\n    path: 'partner',\n    component: PartnerListComponent\n  },\n  {\n    path: 'partner/:id',\n    component: PartnerEditComponent\n  }\n]\n","import { Partner } from './partner';\nimport { PartnerFilter } from './partner-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class PartnerService {\n    \n    baseUrl = `http://127.0.0.1:3000/partners`;\n    constructor(private http: HttpClient) {\n    }\n\n    partnerList: Partner[] = [];\n  \n    findById(id: string): Observable<Partner> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Partner>(url, {params, headers});\n    }\n    \n    load(filter: PartnerFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.partnerList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: PartnerFilter): Observable<Partner[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"phone\": filter.phone,\n        };\n\n        return this.http.get<Partner[]>(url, {params, headers});\n    }\n\n    save(entity: Partner): Observable<Partner> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Partner>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}/authenticate`;\n            return this.http.post<Partner>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Partner): Observable<Partner> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Partner>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Partner {\n    id: string;\n    name: string;\n    phone: string;\n    accessToken: string;\n    isActivated: boolean;\n    pin: number;\n    lastActive: string;\n    creationDate: string;\n    partnertypesId: string;\n    offersId: string;    \n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Products</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Products Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <form #productForm=\\\"ngForm\\\" *ngIf=\\\"product\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{product.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"eng_title\\\">\\n                            Eng Title <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"product.eng_title\\\" name=\\\"eng_title\\\" #eng_title=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"urdu_title\\\">\\n                            Urdu Title <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"product.urdu_title\\\" name=\\\"urdu_title\\\" #urdu_title=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentityOnHand\\\">\\n                            Quentity On Hand \\n                        </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" readonly [(ngModel)]=\\\"product.quentityOnHand\\\" name=\\\"quentityOnHand\\\" #quentityOnHand=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                            </div>\\n                    </div>\\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">\\n                            Buying Price Unit \\n                        </label>\\n    \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select  [(ngModel)]=\\\"product.buyingPriceUnitsId\\\" name=\\\"buyingPriceUnitsId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                     </select>       \\n                                            \\n                            </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"buyingPrice\\\">\\n                            Buying Price \\n                        </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"product.buyingPrice\\\" name=\\\"buyingPrice\\\" #buyingPrice=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                                            \\n                            </div>\\n                    </div>\\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">\\n                            Sale Price Unit \\n                        </label>\\n    \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select [(ngModel)]=\\\"product.salePriceUnitsId\\\" name=\\\"salePriceUnitsId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                     </select>       \\n                                            \\n                            </div>\\n                    </div>\\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"salePrice\\\">\\n                            Sale Price \\n                        </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"product.salePrice\\\" name=\\\"buyingPrice\\\" #salePrice=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                                            \\n                            </div>\\n                    </div>\\n                    \\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">\\n                            Retail Price Unit \\n                        </label>\\n    \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select  [(ngModel)]=\\\"product.retailPiceUnitsId\\\" name=\\\"retailPiceUnitsId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                     </select>       \\n                                            \\n                            </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"retailPrice\\\">\\n                            Retail Price \\n                        </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"product.retailPrice\\\" name=\\\"buyingPrice\\\" #retailPrice=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                                            \\n                            </div>\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"producttypesId\\\">\\n                            Product Type <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"product.producttypesId\\\" name=\\\"producttypesId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of producttypesId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.typeName }}</option>\\n                                     </select>                                              \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">\\n                            Image <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                            <input type=\\\"file\\\" required accept=\\\"image/*\\\" (change)=\\\"changeImageListener($event)\\\">                                                    \\n                                  \\n                            <img [src]=\\\"product.image\\\" style=\\\"width:100px; height:100px\\\" />\\n                                            \\n                            </div>\\n\\n                    </div>\\n\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"productForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ProductService } from '../product.service';\n//import { ProductService } from '../../';\nimport { Product } from '../product';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'product-edit',\n  templateUrl: './product-edit.component.html'\n})\nexport class ProductEditComponent implements OnInit {\n\n    id: string;\n    product: Product;\n    errors: string;\n    producttypesId_list: any;\n    unitsId_list: any;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private productService: ProductService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Product());\n                    return this.productService.findById(id)\n                })\n            )\n            .subscribe(\n                product => { \n                    this.product = product; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n\n            this.producttypesId_list = [{id:1, typeName: \"Vegitables\" }, {id:2, typeName: \"Fruites\" }]\n            this.unitsId_list = [{id:1, unitDisplayName: \"kg\" }]\n    }\n\n    save() {\n        this.product.displayName = this.product.eng_title + \" \"+ this.product.urdu_title;\n        if(!this.product.quentityOnHand){\n            this.product.quentityOnHand = 0;\n        }\n        this.productService.save(this.product).subscribe(\n            product => { \n                this.product = product; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/product']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/product']);\n    }    \n\n\n    changeImageListener($event) : void {\n        this.readImage($event.target);\n      }\n      \n      readImage(inputValue: any): void {\n        var file:File = inputValue.files[0];\n        var myReader:FileReader = new FileReader();\n      \n        myReader.onloadend = (e) => {\n            this.product.image = myReader.result.toString();\n        }\n            myReader.readAsDataURL(file)\n      }\n\n}","export class ProductFilter {\n    eng_title: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Products</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Products List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Eng Title:</label>\\n        <input [(ngModel)]=\\\"filter.eng_title\\\" name=\\\"eng_title\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../product','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../product', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"productList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Eng Title</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Urdu Title</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product Type</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity On Hand</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Buying Price</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sale Price</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Retail Price</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Image</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of productList\\\" [class.active]=\\\"item === selectedProduct\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.eng_title}}</td>\\n            <td>{{item.urdu_title}}</td>\\n            <td>{{item.producttypesId}}</td>\\n            <td>{{item.quentityOnHand}}</td>\\n            <td>{{item.buyingPrice}}</td>\\n            <td>{{item.salePrice}}</td>\\n            <td>{{item.retailPrice}}</td>\\n            <td><img [src]=\\\"item.image\\\" required style=\\\"width:50px; height:50px\\\" /></td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../product', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ProductFilter } from '../product-filter';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\n\n@Component({\n    selector: 'product',\n    templateUrl: 'product-list.component.html'\n})\nexport class ProductListComponent {\n\n    filter = new ProductFilter();\n    selectedProduct: Product;\n    errors = '';\n\n    get productList(): Product[] {\n        return this.productService.productList;\n    }\n\n    constructor(private productService: ProductService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.productService.load(this.filter);\n    }\n\n    select(selected: Product): void {\n        this.selectedProduct = selected;\n    }\n\n    delete(product: Product): void {\n        if (confirm(\"Are you sure?\")) {\n            this.productService.delete(product).subscribe(\n                product => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nimport { ProductService } from './product.service';\nimport { PRODUCT_ROUTES } from './product.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(PRODUCT_ROUTES)\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductEditComponent\n  ],\n  providers: [\n    ProductService\n  ],\n  exports: [\n  ]\n})\nexport class ProductModule { }\n","import { Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\n\nexport const PRODUCT_ROUTES: Routes = [\n  {\n    path: 'product',\n    component: ProductListComponent\n  },\n  {\n    path: 'product/:id',\n    component: ProductEditComponent\n  }\n]\n","import { Product } from './product';\nimport { ProductFilter } from './product-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class ProductService {\n    \n    baseUrl = `http://127.0.0.1:3000/products`;\n    constructor(private http: HttpClient) {\n    }\n\n    productList: Product[] = [];\n  \n    findById(id: string): Observable<Product> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Product>(url, {params, headers});\n    }\n    \n    load(filter: ProductFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.productList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: ProductFilter): Observable<Product[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"eng_title\": filter.eng_title,\n        };\n\n        return this.http.get<Product[]>(url, {params, headers});\n    }\n\n    save(entity: Product): Observable<Product> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Product>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Product>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Product): Observable<Product> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Product>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Product {\n    id: string;\n    eng_title: string;\n    urdu_title: string;\n    displayName: string;\n    producttypesId: string;\n    unitsId: string;    \n    image: string;    \n    quentityOnHand: number;    \n    buyingPrice: number;    \n    salePrice: number;    \n    retailPrice: number;    \n    buyingPriceUnitsId: string;    \n    salePriceUnitsId: string;    \n    retailPiceUnitsId: string;    \n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Rateplans</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Rateplans Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            <form #rateplanForm=\\\"ngForm\\\" *ngIf=\\\"rateplan\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{rateplan.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"ratePlanTitle\\\">\\n                            Rate Plan Title <span style=\\\"color:red\\\">*</span>\\n                        </label>                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"rateplan.ratePlanTitle\\\" name=\\\"ratePlanTitle\\\" #ratePlanTitle=\\\"ngModel\\\"  class=\\\"form-control\\\">                        \\n                            </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"saleMarkup\\\">\\n                            Sale Markup <span style=\\\"color:red\\\">*</span>\\n                        </label>                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"rateplan.saleMarkup\\\" name=\\\"saleMarkup\\\" #saleMarkup=\\\"ngModel\\\"  class=\\\"form-control\\\">                        \\n                            </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"retailMarkup\\\">\\n                            Retail Markup <span style=\\\"color:red\\\">*</span>\\n                        </label>                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"rateplan.retailMarkup\\\" name=\\\"retailMarkup\\\" #retailMarkup=\\\"ngModel\\\"  class=\\\"form-control\\\">                        \\n                            </div>\\n\\n                    </div>\\n\\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"createdDate\\\">\\n                                    Created Date\\n                                </label>\\n                                                       \\n                        <div class=\\\"col-sm-10\\\">                            \\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"rateplan.createdDate\\\" name=\\\"createdDate\\\"  class=\\\"form-control\\\">                                            \\n                            </div>\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"rateplanForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { RateplanService } from '../rateplan.service';\nimport { Rateplan } from '../rateplan';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'rateplan-edit',\n  templateUrl: './rateplan-edit.component.html'\n})\nexport class RateplanEditComponent implements OnInit {\n\n    id: string;\n    rateplan: Rateplan;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private rateplanService: RateplanService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Rateplan());\n                    return this.rateplanService.findById(id)\n                })\n            )\n            .subscribe(\n                rateplan => { \n                    this.rateplan = rateplan; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.rateplanService.save(this.rateplan).subscribe(\n            rateplan => { \n                this.rateplan = rateplan; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/rateplan']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = 'Error saving'; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/rateplan']);\n    }    \n}","export class RateplanFilter {\n    ratePlanTitle: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Rateplans</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Rateplans List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Rate Plan Title:</label>\\n        <input [(ngModel)]=\\\"filter.ratePlanTitle\\\" name=\\\"ratePlanTitle\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../rateplan','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../rateplan', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"rateplanList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Rate Plan Title</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Created Date</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sale Markup</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Retail Markup</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of rateplanList\\\" [class.active]=\\\"item === selectedRateplan\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.ratePlanTitle}}</td>\\n            <td>{{item.createdDate | date}}</td>\\n            <td>{{item.saleMarkup}}</td>\\n            <td>{{item.retailMarkup}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../rateplan', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { RateplanFilter } from '../rateplan-filter';\nimport { RateplanService } from '../rateplan.service';\nimport { Rateplan } from '../rateplan';\n\n@Component({\n    selector: 'rateplan',\n    templateUrl: 'rateplan-list.component.html'\n})\nexport class RateplanListComponent {\n\n    filter = new RateplanFilter();\n    selectedRateplan: Rateplan;\n    errors = '';\n\n    get rateplanList(): Rateplan[] {\n        return this.rateplanService.rateplanList;\n    }\n\n    constructor(private rateplanService: RateplanService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.rateplanService.load(this.filter);\n    }\n\n    select(selected: Rateplan): void {\n        this.selectedRateplan = selected;\n    }\n\n    delete(rateplan: Rateplan): void {\n        if (confirm(\"Are you sure?\")) {\n            this.rateplanService.delete(rateplan).subscribe(\n                rateplan => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { RateplanListComponent } from './rateplan-list/rateplan-list.component';\nimport { RateplanEditComponent } from './rateplan-edit/rateplan-edit.component';\nimport { RateplanService } from './rateplan.service';\nimport { RATEPLAN_ROUTES } from './rateplan.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(RATEPLAN_ROUTES)\n  ],\n  declarations: [\n    RateplanListComponent,\n    RateplanEditComponent\n  ],\n  providers: [\n    RateplanService\n  ],\n  exports: [\n  ]\n})\nexport class RateplanModule { }\n","import { Routes } from '@angular/router';\nimport { RateplanListComponent } from './rateplan-list/rateplan-list.component';\nimport { RateplanEditComponent } from './rateplan-edit/rateplan-edit.component';\n\nexport const RATEPLAN_ROUTES: Routes = [\n  {\n    path: 'rateplan',\n    component: RateplanListComponent\n  },\n  {\n    path: 'rateplan/:id',\n    component: RateplanEditComponent\n  }\n]\n","import { Rateplan } from './rateplan';\nimport { RateplanFilter } from './rateplan-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class RateplanService {\n    \n    baseUrl = `http://127.0.0.1:3000/rateplans`;\n    constructor(private http: HttpClient) {\n    }\n\n    rateplanList: Rateplan[] = [];\n  \n    findById(id: string): Observable<Rateplan> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Rateplan>(url, {params, headers});\n    }\n    \n    load(filter: RateplanFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.rateplanList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: RateplanFilter): Observable<Rateplan[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"ratePlanTitle\": filter.ratePlanTitle,\n        };\n\n        return this.http.get<Rateplan[]>(url, {params, headers});\n    }\n\n    save(entity: Rateplan): Observable<Rateplan> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Rateplan>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Rateplan>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Rateplan): Observable<Rateplan> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Rateplan>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Rateplan {\n    id: string;\n    ratePlanTitle: string;\n    createdDate: Date;    \n    saleMarkup: number;    \n    retailMarkup: number;    \n}","module.exports = \"<div class=\\\"sidebar-wrapper\\\">\\n  <div class=\\\"logo\\\">\\n    <a class=\\\"simple-text\\\">\\n      <div class=\\\"logo-img\\\">\\n        <img src=\\\"../../assets/img/Kello_title_logo.png\\\" alt=\\\"\\\">\\n      </div>\\n      Kello\\n    </a>\\n  </div>\\n  <ul class=\\\"nav\\\">\\n    <li>\\n      <a routerLink=\\\"home\\\">\\n        <i class=\\\"ti-home\\\"></i>\\n        <p>Dashboard</p>\\n      </a>\\n    </li>\\n\\n    <!-- <li>\\n      <a routerLink=\\\"flight\\\">\\n        <i class=\\\"ti-arrow-top-right\\\"></i>\\n        <p>Flights</p>\\n      </a>\\n    </li> -->\\n\\n<li>\\n  <a routerLink=\\\"customer\\\">\\n    <i class=\\\"ti-user\\\"></i>\\n    <p>Customers</p>\\n  </a>\\n</li>\\n\\n<li>\\n  <a routerLink=\\\"partner\\\">\\n    <i class=\\\"ti-wheelchair\\\"></i>\\n    <p>Partners</p>\\n  </a>\\n</li>\\n\\n<li>\\n  <a routerLink=\\\"product\\\">\\n    <i class=\\\"ti-apple\\\"></i>\\n    <p>Products</p>\\n  </a>\\n</li>\\n\\n<li>\\n  <a routerLink=\\\"activation\\\">\\n    <i class=\\\"ti-lock\\\"></i>\\n    <p>Activations</p>\\n  </a>\\n</li>\\n\\n<li>\\n  <a routerLink=\\\"rateplan\\\">\\n    <i class=\\\"ti-money\\\"></i>\\n    <p>Rate plans</p>\\n  </a>\\n</li>\\n\\n<li>\\n  <a routerLink=\\\"offer\\\">\\n    <i class=\\\"ti-panel\\\"></i>\\n    <p>Offers</p>\\n  </a>\\n</li>\\n\\n<li>\\n  <a routerLink=\\\"supply\\\">\\n    <i class=\\\"ti-car\\\"></i>\\n    <p>Supplies</p>\\n  </a>\\n</li>\\n\\n\\n    <!--\\n    <li>\\n        <a routerLink=\\\"passenger-search\\\">\\n            <i class=\\\"ti-user\\\"></i>\\n            <p>Passengers</p>\\n        </a>\\n    </li>\\n-->\\n\\n\\n    <!--\\n        <li routerLinkActive=\\\"active\\\">\\n        <a>\\n            <i class=\\\"ti-close\\\"></i>\\n            <p>Hide Basket</p>\\n        </a>\\n        </li>\\n    -->\\n\\n  </ul>\\n</div>\\n\"","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'sidebar-cmp',\n  templateUrl: 'sidebar.component.html',\n})\n\nexport class SidebarComponent {\n}\n","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n    <ol class=\\\"breadcrumb float-right\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n        <li class=\\\"breadcrumb-item active\\\">Supplies</li>\\n    </ol>\\n    <h4 class=\\\"page-title\\\">Supplies Detail</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <div class=\\\"card-box\\\">\\n            <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n            \\n            <a *ngIf=\\\"supply.id && supply.isArrived == false \\\" href=\\\"javascript:;\\\" (click)=\\\"supplyArrived(supply.id)\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">\\n                Supply Arrived\\n            </a>\\n\\n            <form #supplyForm=\\\"ngForm\\\" *ngIf=\\\"supply\\\" class=\\\"form-horizontal\\\">\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">\\n                                    Id\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{supply.id || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"supplierId\\\">\\n                            Supplier <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"supply.supplierId\\\" name=\\\"supplierId\\\" (change)=\\\"selectedSupplier($event)\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of supplierId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.name }}</option>\\n                                     </select>              \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"productsId\\\">\\n                            Product <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"supply.productsId\\\" name=\\\"productsId\\\" (change)=\\\"selectedProduct($event)\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of productsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.displayName }}</option>\\n                                     </select>  \\n                            \\n\\n                            \\n                                     \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"referenceNo\\\">\\n                            Reference No <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"string\\\" required [(ngModel)]=\\\"supply.referenceNo\\\" name=\\\"referenceNo\\\" #referenceNo=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentity\\\">\\n                            Quentity <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.quentity\\\" name=\\\"quentity\\\" #quentity=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentityUnitsId\\\">\\n                            Quentity Unit <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"supply.quentityUnitsId\\\" name=\\\"quentityUnitsId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of quentityUnitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                     </select>  \\n                                  \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"supplyDate\\\">\\n                                    Supply Date\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"supply.supplyDate\\\" name=\\\"supplyDate\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"arrivedAt\\\">\\n                                    Arrived At\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"supply.arrivedAt\\\" name=\\\"arrivedAt\\\"  class=\\\"form-control\\\">\\n                                        \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isArrived\\\">\\n                                    Is Arrived\\n                                </label>\\n                                \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            {{supply.isArrived || 'n/a'}}\\n                                \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"purchasingCost\\\">\\n                            Purchasing Cost <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.purchasingCost\\\" name=\\\"purchasingCost\\\" #purchasingCost=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"buyingPriceUnitId\\\">\\n                            Purchasing Price Unit <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                <select required [(ngModel)]=\\\"supply.buyingPriceUnitId\\\" name=\\\"buyingPriceUnitId\\\"  class=\\\"form-control\\\" >\\n                                        <option *ngFor=\\\"let c of buyingPriceUnitId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                     </select>  \\n                                  \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"travlingCost\\\">\\n                            Travling Cost <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.travlingCost\\\" name=\\\"travlingCost\\\" #travlingCost=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"labourCost\\\">\\n                            Labour Cost <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.labourCost\\\" name=\\\"labourCost\\\" #labourCost=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                   \\n                    \\n                    <div class=\\\"form-group row\\\">\\n                            \\n                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"otherCost\\\">\\n                            Other Cost <span style=\\\"color:red\\\">*</span>\\n                        </label>\\n                        \\n                        \\n                       \\n                        <div class=\\\"col-sm-10\\\">\\n                            \\n                                    <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.otherCost\\\" name=\\\"otherCost\\\" #otherCost=\\\"ngModel\\\"  class=\\\"form-control\\\">\\n                                    \\n                                            \\n                            </div>\\n\\n                    </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6 text-left\\\"><button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"\\n                            (click)=\\\"save()\\\" [disabled]=\\\"supplyForm.invalid\\\" >Save</button></div>\\n                    <div class=\\\"col-sm-6 text-right\\\"><button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"\\n                            (click)=\\\"cancel()\\\">Cancel</button></div>\\n                </div>\\n            </form>\\n        </div><!-- end card-->\\n    </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { SupplyService } from '../supply.service';\nimport { Supply } from '../supply';\nimport { PartnerService } from '../../partner/partner.service';\nimport { Partner } from '../../partner/partner';\nimport { PartnerFilter } from '../../partner/partner-filter';\nimport { ProductService } from '../../product/product.service';\nimport { Product } from '../../product/product';\nimport { ProductFilter } from '../../product/product-filter';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'supply-edit',\n  templateUrl: './supply-edit.component.html'\n})\nexport class SupplyEditComponent implements OnInit {\n\n    id: string;\n    supply: Supply;\n    errors: string;\n    buyingPriceUnitId_list: any;\n    quentityUnitsId_list: any;\n\n    partnerFilter = new PartnerFilter();\n    \n \n    get supplierId_list(): Partner[] {\n        return this.partnerService.partnerList;\n    }\n    \n    productFilter = new ProductFilter();\n \n    get productsId_list(): Product[] {\n        return this.productService.productList;\n    }\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private supplyService: SupplyService,\n        private partnerService: PartnerService,\n        private productService: ProductService,\n        ) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Supply());\n                    return this.supplyService.findById(id)\n                })\n            )\n            .subscribe(\n                supply => { \n                    this.supply = supply; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = 'Error loading'; \n                }\n            );\n\n            this.buyingPriceUnitId_list = [{id:1, unitDisplayName: \"kg\" }];\n            this.quentityUnitsId_list = [{id:1, unitDisplayName: \"kg\" }];\n            this.partnerService.load(this.partnerFilter);\n            this.productService.load(this.productFilter);\n    }\n\n    save() {\n        this.supplyService.save(this.supply).subscribe(\n            supply => { \n                this.supply = supply; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/supply']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = 'Error saving'; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/supply']);\n    } \n    \n    selectedProduct($event) {\n        let seletectProduct = this.productsId_list.filter( p => p.id == this.supply.productsId);\n        console.log(seletectProduct);\n        if(seletectProduct.length > 0){\n            this.supply.quentityOnHand = seletectProduct[0].quentityOnHand;\n            this.supply.productTitle = seletectProduct[0].displayName;\n        }\n    }\n    \n    selectedSupplier($event) {\n        let selectedSupplier = this.supplierId_list.filter( s => s.id == this.supply.supplierId);\n        console.log(selectedSupplier);\n        if(selectedSupplier.length > 0){\n            this.supply.supplierName = selectedSupplier[0].name;\n            \n        }\n    }\n    \n    supplyArrived(supplyId : string) {\n        \n        this.supplyService.supplyArrived(supplyId)\n        .subscribe(\n            sp=>{\n                this.errors = \"Supply Arrived Successfully!\"\n            },\n            err=>{\n                this.errors = JSON.stringify(err)\n            }\n        );\n    }\n\n\n}","export class SupplyFilter {\n    referenceNo: string = '';\n}","module.exports = \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n  <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a href=\\\"javascript:void(0);\\\">Project</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Supplies</li>\\n  </ol>\\n  <h4 class=\\\"page-title\\\">Supplies List</h4>\\n</div><!-- End page title box -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-12\\\">\\n    <form #f=\\\"ngForm\\\" class=\\\"card-box\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label>Reference No:</label>\\n        <input [(ngModel)]=\\\"filter.referenceNo\\\" name=\\\"referenceNo\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-default\\\">\\n          Search\\n        </button>\\n        <a [routerLink]=\\\"['../supply','new']\\\" class=\\\"btn btn-default\\\">\\n          New\\n      </a>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"col-xl-12\\\">\\n    <!-- <a [routerLink]=\\\"['../supply', 'new' ]\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-success\\\"><i\\n          class=\\\"mdi mdi-asterisk\\\" title=\\\"New\\\"></i></button></a> -->\\n    <div class=\\\"card-box\\\" *ngIf=\\\"supplyList.length > 0\\\">\\n      <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Supplier</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Reference No</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity Unit</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity On Hand</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Supply Date</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Arrived At</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Arrived</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Purchasing Cost</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Purchasing Price Unit</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Travling Cost</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Labour Cost</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Other Cost</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n            </tr>\\n          </thead>\\n          <tr *ngFor=\\\"let item of supplyList\\\" [class.active]=\\\"item === selectedSupply\\\">\\n            \\n            <td>{{item.id}}</td>\\n            <td>{{item.supplierName}}</td>\\n            <td>{{item.productTitle}}</td>\\n            <td>{{item.referenceNo}}</td>\\n            <td>{{item.quentityUnitsId}}</td>\\n            <td>{{item.quentity}}</td>\\n            <td>{{item.quentityOnHand}}</td>\\n            <td>{{item.supplyDate | date}}</td>\\n            <td>{{item.arrivedAt | date}}</td>\\n            <td>{{item.isArrived}}</td>\\n            <td>{{item.purchasingCost}}</td>\\n            <td>{{item.buyingPriceUnitId}}</td>\\n            <td>{{item.travlingCost}}</td>\\n            <td>{{item.labourCost}}</td>\\n            <td>{{item.otherCost}}</td>\\n            <td style=\\\"white-space: nowrap\\\"><a\\n                [routerLink]=\\\"['../supply', item.id ]\\\"><button type=\\\"button\\\"\\n                  class=\\\"btn btn-icon btn-secondary\\\"><i class=\\\"mdi mdi-grease-pencil\\\"\\n                    title=\\\"Edit\\\"></i></button></a>&nbsp;\\n              <a (click)=\\\"delete(item)\\\"><button type=\\\"button\\\" class=\\\"btn btn-icon btn-danger\\\"><i class=\\\"mdi mdi-delete\\\"\\n                    title=\\\"Delete\\\"></i></button></a></td>\\n          </tr>\\n        </table>\\n      </div><!-- end table-responsive -->\\n    </div><!-- end card-->\\n  </div><!-- end col -->\\n</div><!-- end row -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { SupplyFilter } from '../supply-filter';\nimport { SupplyService } from '../supply.service';\nimport { Supply } from '../supply';\n\n@Component({\n    selector: 'supply',\n    templateUrl: 'supply-list.component.html'\n})\nexport class SupplyListComponent {\n\n    filter = new SupplyFilter();\n    selectedSupply: Supply;\n    errors = '';\n\n    get supplyList(): Supply[] {\n        return this.supplyService.supplyList;\n    }\n\n    constructor(private supplyService: SupplyService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.supplyService.load(this.filter);\n    }\n\n    select(selected: Supply): void {\n        this.selectedSupply = selected;\n    }\n\n    delete(supply: Supply): void {\n        if (confirm(\"Are you sure?\")) {\n            this.supplyService.delete(supply).subscribe(\n                supply => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = 'Error deleting.';\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SupplyListComponent } from './supply-list/supply-list.component';\nimport { SupplyEditComponent } from './supply-edit/supply-edit.component';\nimport { SupplyService } from './supply.service';\nimport { SUPPLY_ROUTES } from './supply.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(SUPPLY_ROUTES)\n  ],\n  declarations: [\n    SupplyListComponent,\n    SupplyEditComponent\n  ],\n  providers: [\n    SupplyService\n  ],\n  exports: [\n  ]\n})\nexport class SupplyModule { }\n","import { Routes } from '@angular/router';\nimport { SupplyListComponent } from './supply-list/supply-list.component';\nimport { SupplyEditComponent } from './supply-edit/supply-edit.component';\n\nexport const SUPPLY_ROUTES: Routes = [\n  {\n    path: 'supply',\n    component: SupplyListComponent\n  },\n  {\n    path: 'supply/:id',\n    component: SupplyEditComponent\n  }\n]\n","import { Supply } from './supply';\nimport { SupplyFilter } from './supply-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class SupplyService {\n    \n    baseUrl = `http://127.0.0.1:3000/supplies`;\n    constructor(private http: HttpClient) {\n    }\n\n    supplyList: Supply[] = [];\n  \n    findById(id: string): Observable<Supply> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Supply>(url, {params, headers});\n    }\n    \n    load(filter: SupplyFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.supplyList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: SupplyFilter): Observable<Supply[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"referenceNo\": filter.referenceNo,\n        };\n\n        return this.http.get<Supply[]>(url, {params, headers});\n    }\n\n    save(entity: Supply): Observable<Supply> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Supply>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Supply>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Supply): Observable<Supply> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Supply>(url, {headers, params});\n        }\n\n        return null;\n    }\n    \n    supplyArrived(supplyId: string): Observable<Supply> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n       \n            url = `${this.baseUrl}/${supplyId}/arrived`;\n            return this.http.patch<Supply>(url, {}, {headers, params});\n       \n    }\n\n\n}\n\n","export class Supply {\n    id: string;\n    supplierId: string;\n    productsId: string;\n    referenceNo: string;\n    quentityOnHand: number;\n    quentity: number;\n    quentityUnitsId: string;\n    supplyDate: Date;\n    arrivedAt: Date;\n    isArrived: boolean;\n    purchasingCost: number;\n    buyingPriceUnitId: string;\n    travlingCost: number;\n    labourCost: number;\n    otherCost: number;    \n    productTitle: string;    \n    supplierName: string;    \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}