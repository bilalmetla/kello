{"version":3,"sources":["./src/app/activation/activation-edit/activation-edit.component.html","./src/app/activation/activation-list/activation-list.component.html","./src/app/app.component.html","./src/app/customer/customer-edit/customer-edit.component.html","./src/app/customer/customer-list/customer-list.component.html","./src/app/flight/flight-edit/flight-edit.component.html","./src/app/flight/flight-list/flight-list.component.html","./src/app/home/home.component.html","./src/app/hotel/hotel-edit/hotel-edit.component.html","./src/app/hotel/hotel-list/hotel-list.component.html","./src/app/navbar/navbar.component.html","./src/app/orders/orders-edit/orders-edit.component.html","./src/app/orders/orders-list/orders-list.component.html","./src/app/partner/partner-edit/partner-edit.component.html","./src/app/partner/partner-list/partner-list.component.html","./src/app/product/product-edit/product-edit.component.html","./src/app/product/product-list/product-list.component.html","./src/app/rateplan/rateplan-edit/rateplan-edit.component.html","./src/app/rateplan/rateplan-list/rateplan-list.component.html","./src/app/sidebar/sidebar.component.html","./src/app/supply/supply-edit/supply-edit.component.html","./src/app/supply/supply-list/supply-list.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/activation/activation-edit/activation-edit.component.ts","./src/app/activation/activation-filter.ts","./src/app/activation/activation-list/activation-list.component.ts","./src/app/activation/activation.module.ts","./src/app/activation/activation.routes.ts","./src/app/activation/activation.service.ts","./src/app/activation/activation.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/customer/customer-edit/customer-edit.component.ts","./src/app/customer/customer-filter.ts","./src/app/customer/customer-list/customer-list.component.ts","./src/app/customer/customer.module.ts","./src/app/customer/customer.routes.ts","./src/app/customer/customer.service.ts","./src/app/customer/customer.ts","./src/app/flight/flight-edit/flight-edit.component.ts","./src/app/flight/flight-filter.ts","./src/app/flight/flight-list/flight-list.component.ts","./src/app/flight/flight.module.ts","./src/app/flight/flight.routes.ts","./src/app/flight/flight.service.ts","./src/app/flight/flight.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/hotel/hotel-edit/hotel-edit.component.ts","./src/app/hotel/hotel-filter.ts","./src/app/hotel/hotel-list/hotel-list.component.ts","./src/app/hotel/hotel.module.ts","./src/app/hotel/hotel.routes.ts","./src/app/hotel/hotel.service.ts","./src/app/hotel/hotel.ts","./src/app/navbar/navbar.component.ts","./src/app/orders/orders-edit/orders-edit.component.ts","./src/app/orders/orders-filter.ts","./src/app/orders/orders-list/orders-list.component.ts","./src/app/orders/orders.module.ts","./src/app/orders/orders.routes.ts","./src/app/orders/orders.service.ts","./src/app/orders/orders.ts","./src/app/partner/partner-edit/partner-edit.component.ts","./src/app/partner/partner-filter.ts","./src/app/partner/partner-list/partner-list.component.ts","./src/app/partner/partner.module.ts","./src/app/partner/partner.routes.ts","./src/app/partner/partner.service.ts","./src/app/partner/partner.ts","./src/app/product/product-edit/product-edit.component.ts","./src/app/product/product-filter.ts","./src/app/product/product-list/product-list.component.ts","./src/app/product/product.module.ts","./src/app/product/product.routes.ts","./src/app/product/product.service.ts","./src/app/product/product.ts","./src/app/rateplan/rateplan-edit/rateplan-edit.component.ts","./src/app/rateplan/rateplan-filter.ts","./src/app/rateplan/rateplan-list/rateplan-list.component.ts","./src/app/rateplan/rateplan.module.ts","./src/app/rateplan/rateplan.routes.ts","./src/app/rateplan/rateplan.service.ts","./src/app/rateplan/rateplan.ts","./src/app/sidebar/sidebar.component.ts","./src/app/supply/supply-edit/supply-edit.component.ts","./src/app/supply/supply-filter.ts","./src/app/supply/supply-list/supply-list.component.ts","./src/app/supply/supply.module.ts","./src/app/supply/supply.routes.ts","./src/app/supply/supply.service.ts","./src/app/supply/supply.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Activations</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Activations Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                        \\n            <form #activationForm=\\\"ngForm\\\" *ngIf=\\\"activation\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{activation.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">                                    Phone                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{activation.phone || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"smsCode\\\">                                    Sms Code                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{activation.smsCode || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"emailCode\\\">                                    Email Code                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{activation.emailCode || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"expiry\\\">                                    Expiry                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{activation.expiry || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"activationForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Activations</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Activations List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Phone:</label>\\n          <input [(ngModel)]=\\\"filter.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../activation', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"activationList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sms Code</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Email Code</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Expiry</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of activationList\\\" [class.active]=\\\"item === selectedActivation\\\">\\n          \\n            <td>{{item.id}}</td>\\n            <td>{{item.phone}}</td>\\n            <td>{{item.smsCode}}</td>\\n            <td>{{item.emailCode}}</td>\\n            <td>{{item.expiry}}</td>\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../activation', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  \"","export default \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"sidebar\\\" data-background-color=\\\"white\\\" data-active-color=\\\"danger\\\">\\n    <sidebar-cmp></sidebar-cmp>\\n  </div>\\n  <div class=\\\"main-panel\\\">\\n    <navbar-cmp></navbar-cmp>\\n    <div class=\\\"content\\\">\\n\\n      <router-outlet></router-outlet>\\n\\n      <router-outlet name=\\\"aux\\\"></router-outlet>\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\\n\"","export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Customers</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Customers Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                        \\n            <form #customerForm=\\\"ngForm\\\" *ngIf=\\\"customer\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{customer.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">\\n                                                    Name <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">\\n                                                    Phone <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"tel\\\" required [(ngModel)]=\\\"customer.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"accessToken\\\">                                    AccessToken                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{customer.accessToken || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isActivated\\\">                                    Is Activated                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{customer.isActivated || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"customerForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Customers</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Customers List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <!-- <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Phone:</label>\\n          <input [(ngModel)]=\\\"filter.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n        </div> -->\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../customer', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"customerList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">AccessToken</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Activated</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of customerList\\\" [class.active]=\\\"item === selectedCustomer\\\">\\n          \\n            <td>{{item.id}}</td>\\n                                    <td>{{item.name}}</td>\\n                                    <td>{{item.phone}}</td>\\n                                    <td>{{item.accessToken}}</td>\\n                                    <td>{{item.isActivated}}</td>\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../customer', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  \"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Flight</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Flight Detail</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n    <form *ngIf=\\\"flight\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"id\\\">Id</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"flight.id\\\" id=\\\"id\\\" name=\\\"id\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"from\\\">From</label>\\n        <input [(ngModel)]=\\\"flight.from\\\" id=\\\"from\\\" name=\\\"from\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"to\\\">To</label>\\n        <input [(ngModel)]=\\\"flight.to\\\" id=\\\"to\\\" name=\\\"to\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date\\\">Date</label>\\n        <input type=\\\"date\\\" [(ngModel)]=\\\"flight.date\\\" id=\\\"date\\\" name=\\\"date\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Flight</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Flight List</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <form #f=\\\"ngForm\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"from\\\">From:</label>\\n        <input [(ngModel)]=\\\"filter.from\\\" id=\\\"from\\\" name=\\\"from\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"to\\\">To:</label>\\n        <input [(ngModel)]=\\\"filter.to\\\" id=\\\"to\\\" name=\\\"to\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n      <a [routerLink]=\\\"['../flights', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"flightList.length > 0\\\">\\n  <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">From</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">To</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Date</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of flightList\\\" [class.active]=\\\"item === selectedFlight\\\">\\n        \\n          <td>{{item.id}}</td>\\n          <td>{{item.from}}</td>\\n          <td>{{item.to}}</td>\\n          <td>{{item.date | date}}</td>\\n          <td style=\\\"white-space: nowrap\\\">\\n            <a [routerLink]=\\\"['../flights', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n            <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h1 class=\\\"title\\\">Welcome {{userName}}</h1>\\n  </div>\\n  <div class=\\\"content\\\">\\n\\n    <div *ngIf=\\\"needsLogin\\\" class=\\\"alert alert-warning\\\">\\n      You have been redirected to this page because you don't have the necessary\\n      rights for the reqeusted action. Login with a respective user account!\\n    </div>\\n\\n    <button (click)=\\\"login()\\\" class=\\\"btn btn-default\\\">Login</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-default\\\">Logout</button>\\n\\n    <!--\\n    <tabbed-pane [activeId]=\\\"0\\\">\\n        <tab title=\\\"Booked\\\" [id]=\\\"0\\\">\\n            This page could display all booked passengers ...\\n        </tab>\\n        <tab title=\\\"Checked in\\\" [id]=\\\"1\\\">\\n            This page could display all checked in passengers ...\\n        </tab>\\n\\n        <tab title=\\\"Boarded\\\" [id]=\\\"2\\\">\\n            This page could display all boarded passengers ...\\n        </tab>\\n    </tabbed-pane>\\n    -->\\n  </div>\\n\\n</div>\\n\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Hotel</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Hotel Detail</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n    <form *ngIf=\\\"hotel\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Id</label>\\n        {{hotel.id || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input [(ngModel)]=\\\"hotel.name\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"city\\\">City</label>\\n        <input [(ngModel)]=\\\"hotel.city\\\" id=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"stars\\\">Stars</label>\\n        <input [(ngModel)]=\\\"hotel.stars\\\" id=\\\"stars\\\" name=\\\"stars\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Hotel</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Hotel List</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <form #f=\\\"ngForm\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"city\\\">City:</label>\\n        <input [(ngModel)]=\\\"filter.city\\\" id=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n      <a [routerLink]=\\\"['../hotels', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"hotelList.length > 0\\\">\\n  <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">City</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Stars</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of hotelList\\\" [class.active]=\\\"item === selectedHotel\\\">\\n        \\n          <td>{{item.id}}</td>\\n          <td>{{item.name}}</td>\\n          <td>{{item.city}}</td>\\n          <td>{{item.stars}}</td>\\n          <td style=\\\"white-space: nowrap\\\">\\n            <a [routerLink]=\\\"['../hotels', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n            <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar bar1\\\"></span>\\n        <span class=\\\"icon-bar bar2\\\"></span>\\n        <span class=\\\"icon-bar bar3\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Kello</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-panel\\\"></i>\\n            <p>Stats</p>\\n          </a>\\n        </li>\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-bell\\\"></i>\\n            <p class=\\\"notification\\\">5</p>\\n            <p>Notifications</p>\\n            <b class=\\\"caret\\\"></b>\\n          </a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">Notification 1</a></li>\\n            <li><a href=\\\"#\\\">Notification 2</a></li>\\n            <li><a href=\\\"#\\\">Notification 3</a></li>\\n            <li><a href=\\\"#\\\">Notification 4</a></li>\\n            <li><a href=\\\"#\\\">Another notification</a></li>\\n          </ul>\\n        </li>\\n        <li>\\n          <a href=\\\"#\\\">\\n            <i class=\\\"ti-settings\\\"></i>\\n            <p>Settings</p>\\n          </a>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n</nav>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Orders</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Orders Detail</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n    <form *ngIf=\\\"orders\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Id</label>\\n        {{orders.id || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Order Time</label>\\n        {{orders.orderTime || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Order Status</label>\\n        {{orders.orderStatus || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Total Bill Amount</label>\\n        {{orders.totalBillAmount || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Is Delivered</label>\\n        {{orders.isDelivered || false}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Ordered By</label>\\n        {{orders.orderCategory || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Customer Id</label>\\n        {{orders.customersId || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Partner Id</label>\\n        {{orders.partnersId || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n          <thead>\\n            <tr>\\n              \\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product Title</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity</th>\\n              <th class=\\\"border-top-0\\\" scope=\\\"col\\\">QuentityUnit</th>\\n              \\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let product of orders.items\\\" [class.active]=\\\"product === selectedOrders\\\">\\n            \\n              <td>{{product.productTitle}}</td>\\n              <td>{{product.quantity}}</td>\\n              <td>{{product.quentityUnit}}</td>\\n              \\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Save</button> -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Orders</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Orders List</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <form #f=\\\"ngForm\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"orderStatus\\\">Order Status:</label>\\n        <input [(ngModel)]=\\\"filter.orderStatus\\\" id=\\\"orderStatus\\\" name=\\\"orderStatus\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n      <!-- <a [routerLink]=\\\"['../orderses', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a> -->\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"card\\\" *ngIf=\\\"ordersList.length > 0\\\">\\n  <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Order Time</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Order Status</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Delivered</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Total Bill Amount</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Ordered By</th>\\n          \\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of ordersList\\\" [class.active]=\\\"item === selectedOrders\\\">\\n        \\n          <td>{{item.id}}</td>\\n          <td>{{item.orderTime}}</td>\\n          <td>{{item.orderStatus}}</td>\\n          <td>{{item.isDelivered}}</td>\\n          <td>{{item.totalBillAmount}}</td>\\n          <td>{{item.orderCategory}}</td>\\n          \\n          <td style=\\\"white-space: nowrap\\\">\\n            <a [routerLink]=\\\"['../orderses', item.id ]\\\" class=\\\"btn btn-secondary\\\">View</a>&nbsp;\\n            <!-- <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button> -->\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Partners</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Partners Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                        \\n            <form #partnerForm=\\\"ngForm\\\" *ngIf=\\\"partner\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{partner.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">\\n                                                    Name <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"partner.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">\\n                                                    Phone <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"tel\\\" required [(ngModel)]=\\\"partner.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"accessToken\\\">                                    AccessToken                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{partner.accessToken || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isActivated\\\">                                    Is Activated                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{partner.isActivated || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"pin\\\">                                    Pin                                </label>\\n                                                                                                                           \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                            <input type=\\\"number\\\" [(ngModel)]=\\\"partner.pin\\\" name=\\\"pin\\\" class=\\\"form-control\\\">                                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"lastActive\\\">                                    Last Active                                </label>\\n                                                                                                                           \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                            <input type=\\\"Date\\\" [(ngModel)]=\\\"partner.lastActive\\\" name=\\\"lastActive\\\" class=\\\"form-control\\\">                                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"creationDate\\\">                                    CreationDate                                </label>\\n                                                                                                                           \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                            <input type=\\\"Date\\\" [(ngModel)]=\\\"partner.creationDate\\\" name=\\\"creationDate\\\" class=\\\"form-control\\\">                                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"partnertypesId\\\">\\n                                                    Partner Type <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select required [(ngModel)]=\\\"partner.partnertypesId\\\" name=\\\"partnertypesId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of partnertypesId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.typeName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                                                                                                                             \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"offersId\\\">                                    Offer                                </label>\\n                                                                                                                           \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                            \\n                        <select [(ngModel)]=\\\"partner.offersId\\\" name=\\\"offersId\\\" class=\\\"form-control\\\">\\n                                                                            <option *ngFor=\\\"let c of offersId_list\\\" value=\\\"{{ c.id }} \\\">{{ c.offerName }}</option>\\n                                                                         \\n                        </select>\\n                                                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"partnerForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Partners</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Partners List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Phone:</label>\\n          <input [(ngModel)]=\\\"filter.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../partner', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"partnerList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">AccessToken</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Activated</th>\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Pin</th> -->\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Last Active</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">CreationDate</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Partner Type</th>\\n                                          \\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of partnerList\\\" [class.active]=\\\"item === selectedPartner\\\">\\n          \\n            <td>{{item.id}}</td>\\n                                    <td>{{item.name}}</td>\\n                                    <td>{{item.phone}}</td>\\n                                    <td>{{item.accessToken}}</td>\\n                                    <td>{{item.isActivated}}</td>\\n                                    <!-- <td>{{item.pin}}</td>\\n                                    <td>{{item.lastActive}}</td> -->\\n                                    <td>{{item.creationDate}}</td>\\n                                    <td>{{item.partnertypesId}}</td>\\n                                    \\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../partner', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  \"","export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Products</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Products Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                        \\n            <form #productForm=\\\"ngForm\\\" *ngIf=\\\"product\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{product.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"eng_title\\\">\\n                                                    Eng Title <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"product.eng_title\\\" name=\\\"eng_title\\\" #eng_title=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"urdu_title\\\">\\n                                                    Urdu Title <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"product.urdu_title\\\" name=\\\"urdu_title\\\" #urdu_title=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                        \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentityOnHand\\\">                            Quentity On Hand                         </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" readonly [(ngModel)]=\\\"product.quentityOnHand\\\" name=\\\"quentityOnHand\\\" #quentityOnHand=\\\"ngModel\\\" class=\\\"form-control\\\">                            \\n                    </div>\\n                                        \\n                </div>\\n                                                        \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">                            Buying Price Unit                         </label>\\n                                                \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select [(ngModel)]=\\\"product.buyingPriceUnitsId\\\" name=\\\"buyingPriceUnitsId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                    \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"buyingPrice\\\">                            Buying Price                         </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" [(ngModel)]=\\\"product.buyingPrice\\\" name=\\\"buyingPrice\\\" #buyingPrice=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                        \\n                    </div>\\n                                        \\n                </div>\\n                                                        \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">                            Sale Price Unit                         </label>\\n                                                \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select [(ngModel)]=\\\"product.salePriceUnitsId\\\" name=\\\"salePriceUnitsId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                        \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"salePrice\\\">                            Sale Price                         </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" [(ngModel)]=\\\"product.salePrice\\\" name=\\\"buyingPrice\\\" #salePrice=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                        \\n                    </div>\\n                                        \\n                </div>\\n                                                        \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">                            Retail Price Unit                         </label>\\n                                                \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select [(ngModel)]=\\\"product.retailPiceUnitsId\\\" name=\\\"retailPiceUnitsId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                    \\n                <div class=\\\"form-group row\\\">\\n                                                                        <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"retailPrice\\\">                            Retail Price                         </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" [(ngModel)]=\\\"product.retailPrice\\\" name=\\\"buyingPrice\\\" #retailPrice=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                        \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"producttypesId\\\">\\n                                                    Product Type <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select required [(ngModel)]=\\\"product.producttypesId\\\" name=\\\"producttypesId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of producttypesId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.typeName }}</option>\\n                                                                 \\n                        </select>\\n                                                    \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">\\n                                                    Image <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                    \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                <input type=\\\"file\\\" required accept=\\\"image/*\\\" (change)=\\\"changeImageListener($event)\\\">\\n                                                                                      <img [src]=\\\"product.image\\\" style=\\\"width:100px; height:100px\\\"/>                                                                        \\n                    </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"productForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Products</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Products List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"eng_title\\\">Eng Title:</label>\\n          <input [(ngModel)]=\\\"filter.eng_title\\\" id=\\\"eng_title\\\" name=\\\"eng_title\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../product', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"productList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Eng Title</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Urdu Title</th>\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product Type</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity On Hand</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Buying Price</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sale Price</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Retail Price</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Image</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of productList\\\" [class.active]=\\\"item === selectedProduct\\\">\\n          \\n            <td>{{item.id}}</td>\\n                                    <td>{{item.eng_title}}</td>\\n                                    <td>{{item.urdu_title}}</td>\\n                                    <!-- <td>{{item.producttypesId}}</td> -->\\n                                    <td>{{item.quentityOnHand}}</td>\\n                                    <td>{{item.buyingPrice}}</td>\\n                                    <td>{{item.salePrice}}</td>\\n                                    <td>{{item.retailPrice}}</td>\\n                                    <td>\\n                                        <img [src]=\\\"item.image\\\" required style=\\\"width:50px; height:50px\\\"/>\\n                                    </td>\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../product', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  \"","export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Rateplans</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Rateplans Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                        \\n            <form #rateplanForm=\\\"ngForm\\\" *ngIf=\\\"rateplan\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{rateplan.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"ratePlanTitle\\\">\\n                                                    Rate Plan Title <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"rateplan.ratePlanTitle\\\" name=\\\"ratePlanTitle\\\" #ratePlanTitle=\\\"ngModel\\\" class=\\\"form-control\\\">                            \\n                    </div>\\n                                        \\n                </div>\\n                                    \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"saleMarkup\\\">\\n                                                    Sale Markup <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"rateplan.saleMarkup\\\" name=\\\"saleMarkup\\\" #saleMarkup=\\\"ngModel\\\" class=\\\"form-control\\\">                            \\n                    </div>\\n                                        \\n                </div>\\n                                    \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"retailMarkup\\\">\\n                                                    Retail Markup <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                            \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"rateplan.retailMarkup\\\" name=\\\"retailMarkup\\\" #retailMarkup=\\\"ngModel\\\" class=\\\"form-control\\\">                            \\n                    </div>\\n                                        \\n                </div>\\n                                                        \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"createdDate\\\">                                    Created Date                                </label>\\n                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                <input type=\\\"date\\\" [(ngModel)]=\\\"rateplan.createdDate\\\" name=\\\"createdDate\\\" class=\\\"form-control\\\">                            \\n                    </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"rateplanForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Rateplans</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Rateplans List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"ratePlanTitle\\\">Rate Plan Title:</label>\\n          <input [(ngModel)]=\\\"filter.ratePlanTitle\\\" id=\\\"ratePlanTitle\\\" name=\\\"ratePlanTitle\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../rateplan', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"rateplanList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Rate Plan Title</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Created Date</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sale Markup</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Retail Markup</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of rateplanList\\\" [class.active]=\\\"item === selectedRateplan\\\">\\n          \\n            <td>{{item.id}}</td>\\n            <td>{{item.ratePlanTitle}}</td>\\n            <td>{{item.createdDate | date}}</td>\\n            <td>{{item.saleMarkup}}</td>\\n            <td>{{item.retailMarkup}}</td>\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../rateplan', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  \"","export default \"\\n<div class=\\\"sidebar-wrapper\\\">\\n      \\n    <div class=\\\"logo\\\">\\n            \\n        <a class=\\\"simple-text\\\">\\n                  \\n            <div class=\\\"logo-img\\\">\\n                        <img src=\\\"../../assets/img/Kello_title_logo.png\\\" alt=\\\"\\\">      \\n            </div>\\n                  Kello    \\n        </a>\\n          \\n    </div>\\n      \\n    <ul class=\\\"nav\\\">\\n            \\n        <li>\\n                  \\n            <a routerLink=\\\"home\\\">\\n                        <i class=\\\"ti-home\\\"></i>\\n                        <p>Dashboard</p>\\n                      \\n            </a>\\n                \\n        </li>\\n            \\n        <!-- <li>      <a routerLink=\\\"flight\\\">        <i class=\\\"ti-arrow-top-right\\\"></i>        <p>Flights</p>      </a>    </li> -->\\n        \\n        <li>\\n              \\n          <a routerLink=\\\"activation\\\">\\n                  <i class=\\\"ti-lock\\\"></i>\\n                  <p>Activations</p>\\n                \\n          </a>\\n          \\n      </li>\\n\\n        <li>\\n              \\n            <a routerLink=\\\"customer\\\">\\n                    <i class=\\\"ti-user\\\"></i>\\n                    <p>Customers</p>\\n                  \\n            </a>\\n            \\n        </li>\\n        \\n        <li>\\n              \\n            <a routerLink=\\\"partner\\\">\\n                    <i class=\\\"ti-wheelchair\\\"></i>\\n                    <p>Partners</p>\\n                  \\n            </a>\\n            \\n        </li>\\n\\n        <li>\\n              \\n          <a routerLink=\\\"orderses\\\">\\n                  <i class=\\\"ti-receipt\\\"></i>\\n                  <p>Orders</p>\\n                \\n          </a>\\n          \\n      </li>\\n        \\n        <li>\\n              \\n            <a routerLink=\\\"product\\\">\\n                    <i class=\\\"ti-apple\\\"></i>\\n                    <p>Products</p>\\n                  \\n            </a>\\n            \\n        </li>\\n                        \\n        <!-- <li>\\n              \\n            <a routerLink=\\\"offer\\\">\\n                    <i class=\\\"ti-panel\\\"></i>\\n                    <p>Offers</p>\\n                  \\n            </a>\\n            \\n        </li> -->\\n        \\n        <li>\\n              \\n            <a routerLink=\\\"supply\\\">\\n                    <i class=\\\"ti-car\\\"></i>\\n                    <p>Supplies</p>\\n                  \\n            </a>\\n            \\n        </li>\\n\\n        <!-- <li>\\n              \\n          <a routerLink=\\\"rateplan\\\">\\n                  <i class=\\\"ti-money\\\"></i>\\n                  <p>Rate plans</p>  \\n          </a>\\n      </li> -->\\n            \\n        <!--    <li>        <a routerLink=\\\"passenger-search\\\">            <i class=\\\"ti-user\\\"></i>            <p>Passengers</p>        </a>    </li>-->\\n            \\n        <!--        <li routerLinkActive=\\\"active\\\">        <a>            <i class=\\\"ti-close\\\"></i>            <p>Hide Basket</p>        </a>        </li>    -->\\n          \\n    </ul>\\n    \\n</div>\\n\\n\"","export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Supplies</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Supplies Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                                    <a *ngIf=\\\"supply.id && supply.isArrived == false \\\" href=\\\"javascript:;\\\" (click)=\\\"supplyArrived(supply.id)\\\" class=\\\"btn btn-default\\\" style=\\\"float:right;\\\">                Supply Arrived            </a>\\n                        \\n            <form #supplyForm=\\\"ngForm\\\" *ngIf=\\\"supply\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{supply.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"supplierId\\\">\\n                                                    Supplier <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                    \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select required [(ngModel)]=\\\"supply.supplierId\\\" name=\\\"supplierId\\\" (change)=\\\"selectedSupplier($event)\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of supplierId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.name }}</option>\\n                                                                 \\n                        </select>\\n                                                    \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"productsId\\\">\\n                                                    Product <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select required [(ngModel)]=\\\"supply.productsId\\\" name=\\\"productsId\\\" (change)=\\\"selectedProduct($event)\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of productsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.displayName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                                                                                                                             \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"referenceNo\\\">\\n                                                    Reference No <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"supply.referenceNo\\\" name=\\\"referenceNo\\\" #referenceNo=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentity\\\">\\n                                                    Quentity <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                    \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.quentity\\\" name=\\\"quentity\\\" #quentity=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                    \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentityUnitsId\\\">\\n                                                    Quentity Unit <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                    \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select required [(ngModel)]=\\\"supply.quentityUnitsId\\\" name=\\\"quentityUnitsId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of quentityUnitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                      \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"supplyDate\\\">                                    Supply Date                                </label>\\n                                                                                                                           \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                            <input type=\\\"date\\\" [(ngModel)]=\\\"supply.supplyDate\\\" name=\\\"supplyDate\\\" class=\\\"form-control\\\">                                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"arrivedAt\\\">                                    Arrived At                                </label>\\n                                                                                                                           \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                            <input type=\\\"date\\\" [(ngModel)]=\\\"supply.arrivedAt\\\" name=\\\"arrivedAt\\\" class=\\\"form-control\\\">                                                                                                                \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isArrived\\\">                                    Is Arrived                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{supply.isArrived || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"purchasingCost\\\">\\n                                                    Purchasing Cost <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.purchasingCost\\\" name=\\\"purchasingCost\\\" #purchasingCost=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"buyingPriceUnitId\\\">\\n                                                    Purchasing Price Unit <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                    \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                    \\n                        <select required [(ngModel)]=\\\"supply.buyingPriceUnitId\\\" name=\\\"buyingPriceUnitId\\\" class=\\\"form-control\\\">\\n                                                                    <option *ngFor=\\\"let c of buyingPriceUnitId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                                                                 \\n                        </select>\\n                                                                                      \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"travlingCost\\\">\\n                                                    Travling Cost <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.travlingCost\\\" name=\\\"travlingCost\\\" #travlingCost=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"labourCost\\\">\\n                                                    Labour Cost <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.labourCost\\\" name=\\\"labourCost\\\" #labourCost=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"otherCost\\\">\\n                                                    Other Cost <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"number\\\" required [(ngModel)]=\\\"supply.otherCost\\\" name=\\\"otherCost\\\" #otherCost=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"supplyForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Supplies</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Supplies List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"referenceNo\\\">Reference No:</label>\\n          <input [(ngModel)]=\\\"filter.referenceNo\\\" id=\\\"referenceNo\\\" name=\\\"referenceNo\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../supply', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"supplyList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Supplier</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Reference No</th>\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity Unit</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity</th>\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity On Hand</th> -->\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Supply Date</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Arrived At</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Arrived</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Purchasing Cost</th>\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Purchasing Price Unit</th> -->\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Travling Cost</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Labour Cost</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Other Cost</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of supplyList\\\" [class.active]=\\\"item === selectedSupply\\\">\\n          \\n            <!-- <td>{{item.id}}</td> -->\\n                                    <td>{{item.supplierName}}</td>\\n                                    <td>{{item.productTitle}}</td>\\n                                    <td>{{item.referenceNo}}</td>\\n                                    <!-- <td>{{item.quentityUnitsId}}</td> -->\\n                                    <td>{{item.quentity}}</td>\\n                                    <!-- <td>{{item.quentityOnHand}}</td>\\n                                    <td>{{item.supplyDate | date}}</td>\\n                                    <td>{{item.arrivedAt | date}}</td>\\n                                    <td>{{item.isArrived}}</td> -->\\n                                    <td>{{item.purchasingCost}}</td>\\n                                    <!-- <td>{{item.buyingPriceUnitId}}</td> -->\\n                                    <!-- <td>{{item.travlingCost}}</td>\\n                                    <td>{{item.labourCost}}</td>\\n                                    <td>{{item.otherCost}}</td> -->\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../supply', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  \"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivationService } from '../activation.service';\nimport { Activation } from '../activation';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'activation-edit',\n  templateUrl: './activation-edit.component.html'\n})\nexport class ActivationEditComponent implements OnInit {\n\n    id: string;\n    activation: Activation;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private activationService: ActivationService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Activation());\n                    return this.activationService.findById(id)\n                })\n            )\n            .subscribe(\n                activation => { \n                    this.activation = activation; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.activationService.save(this.activation).subscribe(\n            activation => { \n                this.activation = activation; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/activation']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/activation']);\n    }    \n}","export class ActivationFilter {\n    phone: string = '';\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ActivationFilter } from '../activation-filter';\nimport { ActivationService } from '../activation.service';\nimport { Activation } from '../activation';\n\n@Component({\n    selector: 'activation',\n    templateUrl: 'activation-list.component.html'\n})\nexport class ActivationListComponent {\n\n    filter = new ActivationFilter();\n    selectedActivation: Activation;\n    errors = '';\n\n    get activationList(): Activation[] {\n        return this.activationService.activationList;\n    }\n\n    constructor(private activationService: ActivationService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.activationService.load(this.filter);\n    }\n\n    select(selected: Activation): void {\n        this.selectedActivation = selected;\n    }\n\n    delete(activation: Activation): void {\n        if (confirm(\"Are you sure?\")) {\n            this.activationService.delete(activation).subscribe(\n                activation => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ActivationListComponent } from './activation-list/activation-list.component';\nimport { ActivationEditComponent } from './activation-edit/activation-edit.component';\nimport { ActivationService } from './activation.service';\nimport { ACTIVATION_ROUTES } from './activation.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(ACTIVATION_ROUTES)\n  ],\n  declarations: [\n    ActivationListComponent,\n    ActivationEditComponent\n  ],\n  providers: [\n    ActivationService\n  ],\n  exports: [\n  ]\n})\nexport class ActivationModule { }\n","import { Routes } from '@angular/router';\nimport { ActivationListComponent } from './activation-list/activation-list.component';\nimport { ActivationEditComponent } from './activation-edit/activation-edit.component';\n\nexport const ACTIVATION_ROUTES: Routes = [\n  {\n    path: 'activation',\n    component: ActivationListComponent\n  },\n  {\n    path: 'activation/:id',\n    component: ActivationEditComponent\n  }\n]\n","import { Activation } from './activation';\nimport { ActivationFilter } from './activation-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class ActivationService {\n    \n    baseUrl = `/activations`;\n    constructor(private http: HttpClient) {\n    }\n\n    activationList: Activation[] = [];\n  \n    findById(id: string): Observable<Activation> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Activation>(url, {params, headers});\n    }\n    \n    load(filter: ActivationFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.activationList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: ActivationFilter): Observable<Activation[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"phone\": filter.phone,\n        };\n\n        return this.http.get<Activation[]>(url, {params, headers});\n    }\n\n    save(entity: Activation): Observable<Activation> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Activation>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Activation>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Activation): Observable<Activation> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Activation>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Activation {\n    id: string;\n    phone: string;\n    smsCode: number;\n    emailCode: number;\n    expiry: Date;    \n}","export default \".loading-indicator {\\n  position: fixed;\\n  left: 0px;\\n  top: 0px;\\n  width: 100%;\\n  height: 100%;\\n  background-color: black;\\n  opacity: 0.3;\\n}\\n\\n.spinner {\\n  width: 40px;\\n  height: 40px;\\n\\n  position: relative;\\n  margin: 100px auto;\\n}\\n\\n.double-bounce1, .double-bounce2 {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background-color: #FFF;\\n  opacity: 0.6;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n\\n  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\\n  animation: sk-bounce 2.0s infinite ease-in-out;\\n}\\n\\n.double-bounce2 {\\n  -webkit-animation-delay: -1.0s;\\n  animation-delay: -1.0s;\\n}\\n\\n@-webkit-keyframes sk-bounce {\\n  0%, 100% {\\n    -webkit-transform: scale(0.0)\\n  }\\n  50% {\\n    -webkit-transform: scale(1.0)\\n  }\\n}\\n\\n@keyframes sk-bounce {\\n  0%, 100% {\\n    transform: scale(0.0);\\n    -webkit-transform: scale(0.0);\\n  }\\n  50% {\\n    transform: scale(1.0);\\n    -webkit-transform: scale(1.0);\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsU0FBUztFQUNULFFBQVE7RUFDUixXQUFXO0VBQ1gsWUFBWTtFQUNaLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTs7RUFFWixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87O0VBRVAsc0RBQXNEO0VBQ3RELDhDQUE4QztBQUNoRDs7QUFFQTtFQUNFLDhCQUE4QjtFQUM5QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRTtJQUNFO0VBQ0Y7RUFDQTtJQUNFO0VBQ0Y7QUFDRjs7QUFFQTtFQUNFO0lBQ0UscUJBQXFCO0lBQ3JCLDZCQUE2QjtFQUMvQjtFQUNBO0lBQ0UscUJBQXFCO0lBQ3JCLDZCQUE2QjtFQUMvQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGluZy1pbmRpY2F0b3Ige1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDBweDtcbiAgdG9wOiAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBvcGFjaXR5OiAwLjM7XG59XG5cbi5zcGlubmVyIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcblxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMTAwcHggYXV0bztcbn1cblxuLmRvdWJsZS1ib3VuY2UxLCAuZG91YmxlLWJvdW5jZTIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XG4gIG9wYWNpdHk6IDAuNjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG5cbiAgLXdlYmtpdC1hbmltYXRpb246IHNrLWJvdW5jZSAyLjBzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb246IHNrLWJvdW5jZSAyLjBzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xufVxuXG4uZG91YmxlLWJvdW5jZTIge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTEuMHM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTEuMHM7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzay1ib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuMClcbiAgfVxuICA1MCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjApXG4gIH1cbn1cblxuQGtleWZyYW1lcyBzay1ib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xuICB9XG59XG4iXX0= */\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'flight-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n","import { FlightModule } from './flight/flight.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { APP_EXTRA_OPTIONS, APP_ROUTES } from './app.routes';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { OrdersModule } from './orders/orders.module';\nimport { HotelModule } from './hotel/hotel.module';\nimport { ActivationModule } from './activation/activation.module';\nimport { CustomerModule } from './customer/customer.module';\nimport { PartnerModule } from './partner/partner.module';\nimport { ProductModule } from './product/product.module';\nimport { RateplanModule } from './rateplan/rateplan.module';\nimport { SupplyModule } from './supply/supply.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FlightModule,\n    RouterModule.forRoot([...APP_ROUTES], {...APP_EXTRA_OPTIONS}),\n    OrdersModule,\n    HotelModule,\n    ActivationModule,\n    CustomerModule,\n    PartnerModule,\n    ProductModule,\n    RateplanModule,\n    SupplyModule,\n  ],\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    NavbarComponent,\n    HomeComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ExtraOptions, Routes, PreloadAllModules} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'home'\n  }\n]\n\nexport const APP_EXTRA_OPTIONS: ExtraOptions = {\n  preloadingStrategy: PreloadAllModules\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'customer-edit',\n  templateUrl: './customer-edit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n    id: string;\n    customer: Customer;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private customerService: CustomerService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Customer());\n                    return this.customerService.findById(id)\n                })\n            )\n            .subscribe(\n                customer => { \n                    this.customer = customer; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.customerService.save(this.customer).subscribe(\n            customer => { \n                this.customer = customer; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/customer']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/customer']);\n    }    \n}","export class CustomerFilter {\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { CustomerFilter } from '../customer-filter';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\n\n@Component({\n    selector: 'customer',\n    templateUrl: 'customer-list.component.html'\n})\nexport class CustomerListComponent {\n\n    filter = new CustomerFilter();\n    selectedCustomer: Customer;\n    errors = '';\n\n    get customerList(): Customer[] {\n        return this.customerService.customerList;\n    }\n\n    constructor(private customerService: CustomerService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.customerService.load(this.filter);\n    }\n\n    select(selected: Customer): void {\n        this.selectedCustomer = selected;\n    }\n\n    delete(customer: Customer): void {\n        if (confirm(\"Are you sure?\")) {\n            this.customerService.delete(customer).subscribe(\n                customer => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\nimport { CustomerService } from './customer.service';\nimport { CUSTOMER_ROUTES } from './customer.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(CUSTOMER_ROUTES)\n  ],\n  declarations: [\n    CustomerListComponent,\n    CustomerEditComponent\n  ],\n  providers: [\n    CustomerService\n  ],\n  exports: [\n  ]\n})\nexport class CustomerModule { }\n","import { Routes } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\n\nexport const CUSTOMER_ROUTES: Routes = [\n  {\n    path: 'customer',\n    component: CustomerListComponent\n  },\n  {\n    path: 'customer/:id',\n    component: CustomerEditComponent\n  }\n]\n","import { Customer } from './customer';\nimport { CustomerFilter } from './customer-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class CustomerService {\n    \n    baseUrl = `/customers`;\n    constructor(private http: HttpClient) {\n    }\n\n    customerList: Customer[] = [];\n  \n    findById(id: string): Observable<Customer> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Customer>(url, {params, headers});\n    }\n    \n    load(filter: CustomerFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.customerList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: CustomerFilter): Observable<Customer[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n        };\n\n        return this.http.get<Customer[]>(url, {params, headers});\n    }\n\n    save(entity: Customer): Observable<Customer> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n\n        url = `${this.baseUrl}/authenticate`;\n        return this.http.post<Customer>(url, entity, {headers, params});\n\n        // if(entity.id) {\n        //     url = `${this.baseUrl}/${entity.id.toString()}`;\n        //     params = new HttpParams().set('ID', entity.id.toString());  \n        //     return this.http.put<Customer>(url, entity, {headers, params});\n        // }\n        // else {\n        //     url = `${this.baseUrl}/authenticate`;\n        //     return this.http.post<Customer>(url, entity, {headers, params});\n        // }        \n    }\n\n\n    delete(entity: Customer): Observable<Customer> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Customer>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Customer {\n    id: string;\n    name: string;\n    phone: string;\n    accessToken: string;\n    isActivated: string;    \n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../flight';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-flight-edit',\n  templateUrl: './flight-edit.component.html'\n})\nexport class FlightEditComponent implements OnInit {\n\n  id: string;\n  flight: Flight;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private flightService: FlightService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Flight()); }\n          return this.flightService.findById(id);\n        })\n      )\n      .subscribe(flight => {\n          this.flight = flight;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error loading'};\n        }\n      );\n  }\n\n  save() {\n    this.flightService.save(this.flight).subscribe(\n      flight => {\n        this.flight = flight;\n        this.feedback = {type: 'success', message: 'Save was successful!'};\n        setTimeout(() => {\n          this.router.navigate(['/flights']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: 'Error saving'};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/flights']);\n  }\n}\n","export class FlightFilter {\n    from = '';\n    to = '';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FlightFilter } from '../flight-filter';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../flight';\n\n@Component({\n  selector: 'app-flight',\n  templateUrl: 'flight-list.component.html'\n})\nexport class FlightListComponent implements OnInit {\n\n  filter = new FlightFilter();\n  selectedFlight: Flight;\n  feedback: any = {};\n\n  get flightList(): Flight[] {\n    return this.flightService.flightList;\n  }\n\n  constructor(private flightService: FlightService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.flightService.load(this.filter);\n  }\n\n  select(selected: Flight): void {\n    this.selectedFlight = selected;\n  }\n\n  delete(flight: Flight): void {\n    if (confirm('Are you sure?')) {\n      this.flightService.delete(flight).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Delete was successful!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error deleting.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FlightListComponent } from './flight-list/flight-list.component';\nimport { FlightEditComponent } from './flight-edit/flight-edit.component';\nimport { FlightService } from './flight.service';\nimport { FLIGHT_ROUTES } from './flight.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(FLIGHT_ROUTES)\n  ],\n  declarations: [\n    FlightListComponent,\n    FlightEditComponent\n  ],\n  providers: [FlightService],\n  exports: []\n})\nexport class FlightModule { }\n","import { Routes } from '@angular/router';\nimport { FlightListComponent } from './flight-list/flight-list.component';\nimport { FlightEditComponent } from './flight-edit/flight-edit.component';\n\nexport const FLIGHT_ROUTES: Routes = [\n  {\n    path: 'flights',\n    component: FlightListComponent\n  },\n  {\n    path: 'flights/:id',\n    component: FlightEditComponent\n  }\n];\n","import { Flight } from './flight';\nimport { FlightFilter } from './flight-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class FlightService {\n  flightList: Flight[] = [];\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Flight> {\n    const url = `http://www.angular.at/api/flight/${id}`;\n    const params = { 'id': id };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get<Flight>(url, {params, headers});\n  }\n\n  load(filter: FlightFilter): void {\n    this.find(filter).subscribe(result => {\n        this.flightList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: FlightFilter): Observable<Flight[]> {\n    const url = `http://www.angular.at/api/flight`;\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n\n    const params = {\n      'from': filter.from,\n      'to': filter.to,\n    };\n\n    return this.http.get<Flight[]>(url, {params, headers});\n  }\n\n  save(entity: Flight): Observable<Flight> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Flight>(url, entity, {headers, params});\n    } else {\n      url = `http://www.angular.at/api/flight`;\n      return this.http.post<Flight>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Flight): Observable<Flight> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Flight>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Flight {\n  id: number;\n  from: string;\n  to: string;\n  date: Date;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute) {\n  }\n\n  needsLogin: boolean;\n  _userName: string = '';\n\n  ngOnInit() {\n    this.needsLogin = !!this.route.snapshot.params['needsLogin'];\n  }\n\n  get userName(): string {\n    return this._userName;\n  }\n\n  login(): void {\n    this._userName = 'Max';\n  }\n\n  logout(): void {\n    this._userName = '';\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HotelService } from '../hotel.service';\nimport { Hotel } from '../hotel';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-hotel-edit',\n  templateUrl: './hotel-edit.component.html'\n})\nexport class HotelEditComponent implements OnInit {\n\n  id: string;\n  hotel: Hotel;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private hotelService: HotelService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Hotel()); }\n          return this.hotelService.findById(id);\n        })\n      )\n      .subscribe(hotel => {\n          this.hotel = hotel;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error loading'};\n        }\n      );\n  }\n\n  save() {\n    this.hotelService.save(this.hotel).subscribe(\n      hotel => {\n        this.hotel = hotel;\n        this.feedback = {type: 'success', message: 'Save was successful!'};\n        setTimeout(() => {\n          this.router.navigate(['/hotels']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: 'Error saving'};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/hotels']);\n  }\n}\n","export class HotelFilter {\n    city = '';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HotelFilter } from '../hotel-filter';\nimport { HotelService } from '../hotel.service';\nimport { Hotel } from '../hotel';\n\n@Component({\n  selector: 'app-hotel',\n  templateUrl: 'hotel-list.component.html'\n})\nexport class HotelListComponent implements OnInit {\n\n  filter = new HotelFilter();\n  selectedHotel: Hotel;\n  feedback: any = {};\n\n  get hotelList(): Hotel[] {\n    return this.hotelService.hotelList;\n  }\n\n  constructor(private hotelService: HotelService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.hotelService.load(this.filter);\n  }\n\n  select(selected: Hotel): void {\n    this.selectedHotel = selected;\n  }\n\n  delete(hotel: Hotel): void {\n    if (confirm('Are you sure?')) {\n      this.hotelService.delete(hotel).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Delete was successful!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error deleting.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HotelListComponent } from './hotel-list/hotel-list.component';\nimport { HotelEditComponent } from './hotel-edit/hotel-edit.component';\nimport { HotelService } from './hotel.service';\nimport { HOTEL_ROUTES } from './hotel.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(HOTEL_ROUTES)\n  ],\n  declarations: [\n    HotelListComponent,\n    HotelEditComponent\n  ],\n  providers: [HotelService],\n  exports: []\n})\nexport class HotelModule { }\n","import { Routes } from '@angular/router';\nimport { HotelListComponent } from './hotel-list/hotel-list.component';\nimport { HotelEditComponent } from './hotel-edit/hotel-edit.component';\n\nexport const HOTEL_ROUTES: Routes = [\n  {\n    path: 'hotels',\n    component: HotelListComponent\n  },\n  {\n    path: 'hotels/:id',\n    component: HotelEditComponent\n  }\n];\n","import { Hotel } from './hotel';\nimport { HotelFilter } from './hotel-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class HotelService {\n  hotelList: Hotel[] = [];\n  api = 'http://www.angular.at/api/hotel';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Hotel> {\n    const url = `${this.api}/${id}`;\n    const params = { id: id };\n    return this.http.get<Hotel>(url, {params, headers});\n  }\n\n  load(filter: HotelFilter): void {\n    this.find(filter).subscribe(result => {\n        this.hotelList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: HotelFilter): Observable<Hotel[]> {\n    const params = {\n      'city': filter.city,\n    };\n\n    return this.http.get<Hotel[]>(this.api, {params, headers});\n  }\n\n  save(entity: Hotel): Observable<Hotel> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Hotel>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Hotel>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Hotel): Observable<Hotel> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Hotel>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Hotel {\n  id: number;\n  name: string;\n  city: string;\n  stars: string;\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'navbar-cmp',\n  templateUrl: 'navbar.component.html'\n})\nexport class NavbarComponent {\n\n  private sidebarVisible: boolean = false;\n\n  constructor() {\n  }\n\n  sidebarToggle() {\n    var body = document.getElementsByTagName('body')[0];\n\n    if (this.sidebarVisible == false) {\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    } else {\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { OrdersService } from '../orders.service';\nimport { Orders } from '../orders';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-orders-edit',\n  templateUrl: './orders-edit.component.html'\n})\nexport class OrdersEditComponent implements OnInit {\n\n  id: string;\n  orders: Orders;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private ordersService: OrdersService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Orders()); }\n          return this.ordersService.findById(id);\n        })\n      )\n      .subscribe(orders => {\n          this.orders = orders;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error loading'};\n        }\n      );\n  }\n\n  save() {\n    this.ordersService.save(this.orders).subscribe(\n      orders => {\n        this.orders = orders;\n        this.feedback = {type: 'success', message: 'Save was successful!'};\n        setTimeout(() => {\n          this.router.navigate(['/orderses']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: 'Error saving'};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/orderses']);\n  }\n}\n","export class OrdersFilter {\n    orderStatus = '';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OrdersFilter } from '../orders-filter';\nimport { OrdersService } from '../orders.service';\nimport { Orders } from '../orders';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: 'orders-list.component.html'\n})\nexport class OrdersListComponent implements OnInit {\n\n  filter = new OrdersFilter();\n  selectedOrders: Orders;\n  feedback: any = {};\n\n  get ordersList(): Orders[] {\n    return this.ordersService.ordersList;\n  }\n\n  constructor(private ordersService: OrdersService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.ordersService.load(this.filter);\n  }\n\n  select(selected: Orders): void {\n    this.selectedOrders = selected;\n  }\n\n  delete(orders: Orders): void {\n    if (confirm('Are you sure?')) {\n      this.ordersService.delete(orders).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Delete was successful!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error deleting.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { OrdersListComponent } from './orders-list/orders-list.component';\nimport { OrdersEditComponent } from './orders-edit/orders-edit.component';\nimport { OrdersService } from './orders.service';\nimport { ORDERS_ROUTES } from './orders.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(ORDERS_ROUTES)\n  ],\n  declarations: [\n    OrdersListComponent,\n    OrdersEditComponent\n  ],\n  providers: [OrdersService],\n  exports: []\n})\nexport class OrdersModule { }\n","import { Routes } from '@angular/router';\nimport { OrdersListComponent } from './orders-list/orders-list.component';\nimport { OrdersEditComponent } from './orders-edit/orders-edit.component';\n\nexport const ORDERS_ROUTES: Routes = [\n  {\n    path: 'orderses',\n    component: OrdersListComponent\n  },\n  {\n    path: 'orderses/:id',\n    component: OrdersEditComponent\n  }\n];\n","import { Orders } from './orders';\nimport { OrdersFilter } from './orders-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class OrdersService {\n  ordersList: Orders[] = [];\n  api = '/orders';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Orders> {\n    const url = `${this.api}/${id}`;\n    const params = { id: id };\n    return this.http.get<Orders>(url, {params, headers});\n  }\n\n  load(filter: OrdersFilter): void {\n    this.find(filter).subscribe(result => {\n        this.ordersList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: OrdersFilter): Observable<Orders[]> {\n    const params = {\n      'orderStatus': filter.orderStatus,\n    };\n\n    return this.http.get<Orders[]>(this.api, {params, headers});\n  }\n\n  save(entity: Orders): Observable<Orders> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Orders>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Orders>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Orders): Observable<Orders> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Orders>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Orders {\n  id: string;\n  orderTime: string;\n  orderStatus: string;\n  totalBillAmount: number;\n  isDelivered: boolean;\n  orderCategory: string;\n  customersId: string;\n  partnersId: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { PartnerService } from '../partner.service';\nimport { Partner } from '../partner';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'partner-edit',\n  templateUrl: './partner-edit.component.html'\n})\nexport class PartnerEditComponent implements OnInit {\n\n    id: string;\n    partner: Partner;\n    errors: string;\n    partnertypesId_list: any;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private partnerService: PartnerService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Partner());\n                    return this.partnerService.findById(id)\n                })\n            )\n            .subscribe(\n                partner => { \n                    this.partner = partner; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n\n            this.partnertypesId_list = [{id: 1, typeName: \"Hawker\"}];\n    }\n\n    save() {\n        this.partnerService.save(this.partner).subscribe(\n            partner => { \n                this.partner = partner; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/partner']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/partner']);\n    }    \n}","export class PartnerFilter {\n    phone: string = '';\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { PartnerFilter } from '../partner-filter';\nimport { PartnerService } from '../partner.service';\nimport { Partner } from '../partner';\n\n@Component({\n    selector: 'partner',\n    templateUrl: 'partner-list.component.html'\n})\nexport class PartnerListComponent {\n\n    filter = new PartnerFilter();\n    selectedPartner: Partner;\n    errors = '';\n\n    get partnerList(): Partner[] {\n        return this.partnerService.partnerList;\n    }\n\n    constructor(private partnerService: PartnerService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.partnerService.load(this.filter);\n    }\n\n    select(selected: Partner): void {\n        this.selectedPartner = selected;\n    }\n\n    delete(partner: Partner): void {\n        if (confirm(\"Are you sure?\")) {\n            this.partnerService.delete(partner).subscribe(\n                partner => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PartnerListComponent } from './partner-list/partner-list.component';\nimport { PartnerEditComponent } from './partner-edit/partner-edit.component';\nimport { PartnerService } from './partner.service';\nimport { PARTNER_ROUTES } from './partner.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(PARTNER_ROUTES)\n  ],\n  declarations: [\n    PartnerListComponent,\n    PartnerEditComponent\n  ],\n  providers: [\n    PartnerService\n  ],\n  exports: [\n  ]\n})\nexport class PartnerModule { }\n","import { Routes } from '@angular/router';\nimport { PartnerListComponent } from './partner-list/partner-list.component';\nimport { PartnerEditComponent } from './partner-edit/partner-edit.component';\n\nexport const PARTNER_ROUTES: Routes = [\n  {\n    path: 'partner',\n    component: PartnerListComponent\n  },\n  {\n    path: 'partner/:id',\n    component: PartnerEditComponent\n  }\n]\n","import { Partner } from './partner';\nimport { PartnerFilter } from './partner-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class PartnerService {\n    \n    baseUrl = `/partners`;\n    constructor(private http: HttpClient) {\n    }\n\n    partnerList: Partner[] = [];\n  \n    findById(id: string): Observable<Partner> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Partner>(url, {params, headers});\n    }\n    \n    load(filter: PartnerFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.partnerList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: PartnerFilter): Observable<Partner[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"phone\": filter.phone,\n        };\n\n        return this.http.get<Partner[]>(url, {params, headers});\n    }\n\n    save(entity: Partner): Observable<Partner> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Partner>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}/authenticate`;\n            return this.http.post<Partner>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Partner): Observable<Partner> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Partner>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Partner {\n    id: string;\n    name: string;\n    phone: string;\n    accessToken: string;\n    isActivated: boolean;\n    pin: number;\n    lastActive: string;\n    creationDate: string;\n    partnertypesId: string;\n    offersId: string;    \n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ProductService } from '../product.service';\n//import { ProductService } from '../../';\nimport { Product } from '../product';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'product-edit',\n  templateUrl: './product-edit.component.html'\n})\nexport class ProductEditComponent implements OnInit {\n\n    id: string;\n    product: Product;\n    errors: string;\n    producttypesId_list: any;\n    unitsId_list: any;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private productService: ProductService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Product());\n                    return this.productService.findById(id)\n                })\n            )\n            .subscribe(\n                product => { \n                    this.product = product; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n\n            this.producttypesId_list = [{id:1, typeName: \"Vegitables\" }, {id:2, typeName: \"Fruites\" }]\n            this.unitsId_list = [{id:1, unitDisplayName: \"kg\" }]\n    }\n\n    save() {\n        this.product.displayName = this.product.eng_title + \" \"+ this.product.urdu_title;\n        if(!this.product.quentityOnHand){\n            this.product.quentityOnHand = 0;\n        }\n        this.productService.save(this.product).subscribe(\n            product => { \n                this.product = product; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/product']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/product']);\n    }    \n\n\n    changeImageListener($event) : void {\n        this.readImage($event.target);\n      }\n      \n      readImage(inputValue: any): void {\n        var file:File = inputValue.files[0];\n        var myReader:FileReader = new FileReader();\n      \n        myReader.onloadend = (e) => {\n            this.product.image = myReader.result.toString();\n        }\n            myReader.readAsDataURL(file)\n      }\n\n}","export class ProductFilter {\n    eng_title: string = '';\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ProductFilter } from '../product-filter';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\n\n@Component({\n    selector: 'product',\n    templateUrl: 'product-list.component.html'\n})\nexport class ProductListComponent {\n\n    filter = new ProductFilter();\n    selectedProduct: Product;\n    errors = '';\n\n    get productList(): Product[] {\n        return this.productService.productList;\n    }\n\n    constructor(private productService: ProductService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.productService.load(this.filter);\n    }\n\n    select(selected: Product): void {\n        this.selectedProduct = selected;\n    }\n\n    delete(product: Product): void {\n        if (confirm(\"Are you sure?\")) {\n            this.productService.delete(product).subscribe(\n                product => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nimport { ProductService } from './product.service';\nimport { PRODUCT_ROUTES } from './product.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(PRODUCT_ROUTES)\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductEditComponent\n  ],\n  providers: [\n    ProductService\n  ],\n  exports: [\n  ]\n})\nexport class ProductModule { }\n","import { Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\n\nexport const PRODUCT_ROUTES: Routes = [\n  {\n    path: 'product',\n    component: ProductListComponent\n  },\n  {\n    path: 'product/:id',\n    component: ProductEditComponent\n  }\n]\n","import { Product } from './product';\nimport { ProductFilter } from './product-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class ProductService {\n    \n    baseUrl = `/products`;\n    constructor(private http: HttpClient) {\n    }\n\n    productList: Product[] = [];\n  \n    findById(id: string): Observable<Product> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Product>(url, {params, headers});\n    }\n    \n    load(filter: ProductFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.productList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: ProductFilter): Observable<Product[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"eng_title\": filter.eng_title,\n        };\n\n        return this.http.get<Product[]>(url, {params, headers});\n    }\n\n    save(entity: Product): Observable<Product> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Product>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Product>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Product): Observable<Product> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Product>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Product {\n    id: string;\n    eng_title: string;\n    urdu_title: string;\n    displayName: string;\n    producttypesId: string;\n    unitsId: string;    \n    image: string;    \n    quentityOnHand: number;    \n    buyingPrice: number;    \n    salePrice: number;    \n    retailPrice: number;    \n    buyingPriceUnitsId: string;    \n    salePriceUnitsId: string;    \n    retailPiceUnitsId: string;    \n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { RateplanService } from '../rateplan.service';\nimport { Rateplan } from '../rateplan';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'rateplan-edit',\n  templateUrl: './rateplan-edit.component.html'\n})\nexport class RateplanEditComponent implements OnInit {\n\n    id: string;\n    rateplan: Rateplan;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private rateplanService: RateplanService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Rateplan());\n                    return this.rateplanService.findById(id)\n                })\n            )\n            .subscribe(\n                rateplan => { \n                    this.rateplan = rateplan; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.rateplanService.save(this.rateplan).subscribe(\n            rateplan => { \n                this.rateplan = rateplan; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/rateplan']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = 'Error saving'; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/rateplan']);\n    }    \n}","export class RateplanFilter {\n    ratePlanTitle: string = '';\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { RateplanFilter } from '../rateplan-filter';\nimport { RateplanService } from '../rateplan.service';\nimport { Rateplan } from '../rateplan';\n\n@Component({\n    selector: 'rateplan',\n    templateUrl: 'rateplan-list.component.html'\n})\nexport class RateplanListComponent {\n\n    filter = new RateplanFilter();\n    selectedRateplan: Rateplan;\n    errors = '';\n\n    get rateplanList(): Rateplan[] {\n        return this.rateplanService.rateplanList;\n    }\n\n    constructor(private rateplanService: RateplanService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.rateplanService.load(this.filter);\n    }\n\n    select(selected: Rateplan): void {\n        this.selectedRateplan = selected;\n    }\n\n    delete(rateplan: Rateplan): void {\n        if (confirm(\"Are you sure?\")) {\n            this.rateplanService.delete(rateplan).subscribe(\n                rateplan => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { RateplanListComponent } from './rateplan-list/rateplan-list.component';\nimport { RateplanEditComponent } from './rateplan-edit/rateplan-edit.component';\nimport { RateplanService } from './rateplan.service';\nimport { RATEPLAN_ROUTES } from './rateplan.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(RATEPLAN_ROUTES)\n  ],\n  declarations: [\n    RateplanListComponent,\n    RateplanEditComponent\n  ],\n  providers: [\n    RateplanService\n  ],\n  exports: [\n  ]\n})\nexport class RateplanModule { }\n","import { Routes } from '@angular/router';\nimport { RateplanListComponent } from './rateplan-list/rateplan-list.component';\nimport { RateplanEditComponent } from './rateplan-edit/rateplan-edit.component';\n\nexport const RATEPLAN_ROUTES: Routes = [\n  {\n    path: 'rateplan',\n    component: RateplanListComponent\n  },\n  {\n    path: 'rateplan/:id',\n    component: RateplanEditComponent\n  }\n]\n","import { Rateplan } from './rateplan';\nimport { RateplanFilter } from './rateplan-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class RateplanService {\n    \n    baseUrl = `/rateplans`;\n    constructor(private http: HttpClient) {\n    }\n\n    rateplanList: Rateplan[] = [];\n  \n    findById(id: string): Observable<Rateplan> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Rateplan>(url, {params, headers});\n    }\n    \n    load(filter: RateplanFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.rateplanList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: RateplanFilter): Observable<Rateplan[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"ratePlanTitle\": filter.ratePlanTitle,\n        };\n\n        return this.http.get<Rateplan[]>(url, {params, headers});\n    }\n\n    save(entity: Rateplan): Observable<Rateplan> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Rateplan>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Rateplan>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Rateplan): Observable<Rateplan> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Rateplan>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Rateplan {\n    id: string;\n    ratePlanTitle: string;\n    createdDate: Date;    \n    saleMarkup: number;    \n    retailMarkup: number;    \n}","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'sidebar-cmp',\n  templateUrl: 'sidebar.component.html',\n})\n\nexport class SidebarComponent {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { SupplyService } from '../supply.service';\nimport { Supply } from '../supply';\nimport { PartnerService } from '../../partner/partner.service';\nimport { Partner } from '../../partner/partner';\nimport { PartnerFilter } from '../../partner/partner-filter';\nimport { ProductService } from '../../product/product.service';\nimport { Product } from '../../product/product';\nimport { ProductFilter } from '../../product/product-filter';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'supply-edit',\n  templateUrl: './supply-edit.component.html'\n})\nexport class SupplyEditComponent implements OnInit {\n\n    id: string;\n    supply: Supply;\n    errors: string;\n    buyingPriceUnitId_list: any;\n    quentityUnitsId_list: any;\n\n    partnerFilter = new PartnerFilter();\n    \n \n    get supplierId_list(): Partner[] {\n        return this.partnerService.partnerList;\n    }\n    \n    productFilter = new ProductFilter();\n \n    get productsId_list(): Product[] {\n        return this.productService.productList;\n    }\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private supplyService: SupplyService,\n        private partnerService: PartnerService,\n        private productService: ProductService,\n        ) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Supply());\n                    return this.supplyService.findById(id)\n                })\n            )\n            .subscribe(\n                supply => { \n                    this.supply = supply; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = 'Error loading'; \n                }\n            );\n\n            this.buyingPriceUnitId_list = [{id:1, unitDisplayName: \"kg\" }];\n            this.quentityUnitsId_list = [{id:1, unitDisplayName: \"kg\" }];\n            this.partnerService.load(this.partnerFilter);\n            this.productService.load(this.productFilter);\n    }\n\n    save() {\n        this.supplyService.save(this.supply).subscribe(\n            supply => { \n                this.supply = supply; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/supply']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = 'Error saving'; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/supply']);\n    } \n    \n    selectedProduct($event) {\n        let seletectProduct = this.productsId_list.filter( p => p.id == this.supply.productsId);\n        console.log(seletectProduct);\n        if(seletectProduct.length > 0){\n            this.supply.quentityOnHand = seletectProduct[0].quentityOnHand;\n            this.supply.productTitle = seletectProduct[0].displayName;\n        }\n    }\n    \n    selectedSupplier($event) {\n        let selectedSupplier = this.supplierId_list.filter( s => s.id == this.supply.supplierId);\n        console.log(selectedSupplier);\n        if(selectedSupplier.length > 0){\n            this.supply.supplierName = selectedSupplier[0].name;\n            \n        }\n    }\n    \n    supplyArrived(supplyId : string) {\n        \n        this.supplyService.supplyArrived(supplyId)\n        .subscribe(\n            sp=>{\n                this.errors = \"Supply Arrived Successfully!\"\n            },\n            err=>{\n                this.errors = JSON.stringify(err)\n            }\n        );\n    }\n\n\n}","export class SupplyFilter {\n    referenceNo: string = '';\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { SupplyFilter } from '../supply-filter';\nimport { SupplyService } from '../supply.service';\nimport { Supply } from '../supply';\n\n@Component({\n    selector: 'supply',\n    templateUrl: 'supply-list.component.html'\n})\nexport class SupplyListComponent {\n\n    filter = new SupplyFilter();\n    selectedSupply: Supply;\n    errors = '';\n\n    get supplyList(): Supply[] {\n        return this.supplyService.supplyList;\n    }\n\n    constructor(private supplyService: SupplyService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.supplyService.load(this.filter);\n    }\n\n    select(selected: Supply): void {\n        this.selectedSupply = selected;\n    }\n\n    delete(supply: Supply): void {\n        if (confirm(\"Are you sure?\")) {\n            this.supplyService.delete(supply).subscribe(\n                supply => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = 'Error deleting.';\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SupplyListComponent } from './supply-list/supply-list.component';\nimport { SupplyEditComponent } from './supply-edit/supply-edit.component';\nimport { SupplyService } from './supply.service';\nimport { SUPPLY_ROUTES } from './supply.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(SUPPLY_ROUTES)\n  ],\n  declarations: [\n    SupplyListComponent,\n    SupplyEditComponent\n  ],\n  providers: [\n    SupplyService\n  ],\n  exports: [\n  ]\n})\nexport class SupplyModule { }\n","import { Routes } from '@angular/router';\nimport { SupplyListComponent } from './supply-list/supply-list.component';\nimport { SupplyEditComponent } from './supply-edit/supply-edit.component';\n\nexport const SUPPLY_ROUTES: Routes = [\n  {\n    path: 'supply',\n    component: SupplyListComponent\n  },\n  {\n    path: 'supply/:id',\n    component: SupplyEditComponent\n  }\n]\n","import { Supply } from './supply';\nimport { SupplyFilter } from './supply-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class SupplyService {\n    \n    baseUrl = `/supplies`;\n    constructor(private http: HttpClient) {\n    }\n\n    supplyList: Supply[] = [];\n  \n    findById(id: string): Observable<Supply> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Supply>(url, {params, headers});\n    }\n    \n    load(filter: SupplyFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.supplyList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: SupplyFilter): Observable<Supply[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"referenceNo\": filter.referenceNo,\n        };\n\n        return this.http.get<Supply[]>(url, {params, headers});\n    }\n\n    save(entity: Supply): Observable<Supply> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Supply>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Supply>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Supply): Observable<Supply> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Supply>(url, {headers, params});\n        }\n\n        return null;\n    }\n    \n    supplyArrived(supplyId: string): Observable<Supply> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n       \n            url = `${this.baseUrl}/${supplyId}/arrived`;\n            return this.http.patch<Supply>(url, {}, {headers, params});\n       \n    }\n\n\n}\n\n","export class Supply {\n    id: string;\n    supplierId: string;\n    productsId: string;\n    referenceNo: string;\n    quentityOnHand: number;\n    quentity: number;\n    quentityUnitsId: string;\n    supplyDate: Date;\n    arrivedAt: Date;\n    isArrived: boolean;\n    purchasingCost: number;\n    buyingPriceUnitId: string;\n    travlingCost: number;\n    labourCost: number;\n    otherCost: number;    \n    productTitle: string;    \n    supplierName: string;    \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}