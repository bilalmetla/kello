{"version":3,"sources":["./src/app/app.component.html","./src/app/customer/customer-edit/customer-edit.component.html","./src/app/customer/customer-list/customer-list.component.html","./src/app/dashboard/dashboard-list/dashboard-list.component.html","./src/app/flight/flight-edit/flight-edit.component.html","./src/app/flight/flight-list/flight-list.component.html","./src/app/home/home.component.html","./src/app/hotel/hotel-edit/hotel-edit.component.html","./src/app/hotel/hotel-list/hotel-list.component.html","./src/app/login/login.component.html","./src/app/navbar/navbar.component.html","./src/app/product/product-edit/product-edit.component.html","./src/app/product/product-list/product-list.component.html","./src/app/shopping/shopping.component.html","./src/app/sidebar/sidebar.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/AuthInterceptor/AuthInterceptor.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/customer/customer-edit/customer-edit.component.ts","./src/app/customer/customer-filter.ts","./src/app/customer/customer-list/customer-list.component.ts","./src/app/customer/customer.module.ts","./src/app/customer/customer.routes.ts","./src/app/customer/customer.service.ts","./src/app/customer/customer.ts","./src/app/dashboard/dashboard-filter.ts","./src/app/dashboard/dashboard-list/dashboard-list.component.css","./src/app/dashboard/dashboard-list/dashboard-list.component.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard.routes.ts","./src/app/dashboard/dashboard.service.ts","./src/app/flight/flight-edit/flight-edit.component.ts","./src/app/flight/flight-filter.ts","./src/app/flight/flight-list/flight-list.component.ts","./src/app/flight/flight.module.ts","./src/app/flight/flight.routes.ts","./src/app/flight/flight.service.ts","./src/app/flight/flight.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/hotel/hotel-edit/hotel-edit.component.ts","./src/app/hotel/hotel-filter.ts","./src/app/hotel/hotel-list/hotel-list.component.ts","./src/app/hotel/hotel.module.ts","./src/app/hotel/hotel.routes.ts","./src/app/hotel/hotel.service.ts","./src/app/hotel/hotel.ts","./src/app/layouts/home-layout.component.ts","./src/app/layouts/login-layout.component.ts","./src/app/layouts/shopping-layout.component.ts","./src/app/login/login.component.ts","./src/app/login/login.module.ts","./src/app/login/login.routes.ts","./src/app/login/login.service.ts","./src/app/modals/confirm-dialog.component.ts","./src/app/modals/input-dialog.component.ts","./src/app/modals/message-dialog.component.ts","./src/app/modals/modal.service.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.ts","./src/app/product/product-edit/product-edit.component.ts","./src/app/product/product-filter.ts","./src/app/product/product-list/product-list.component.ts","./src/app/product/product.module.ts","./src/app/product/product.routes.ts","./src/app/product/product.service.ts","./src/app/product/product.ts","./src/app/shopping/shopping.component.ts","./src/app/shopping/shopping.module.ts","./src/app/shopping/shopping.routes.ts","./src/app/shopping/shopping.service.ts","./src/app/sidebar/sidebar.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,ue;;;;;;;;;;;;ACAf;AAAe,8TAA+P,kYAAkY,UAAU,ynBAAynB,sBAAsB,+rFAA+rF,+BAA+B,osBAAosB,+BAA+B,whC;;;;;;;;;;;;ACA1uJ;AAAe,s7BAAu3B,UAAU,yrBAAyrB,oEAAoE,iFAAiF,SAAS,iDAAiD,WAAW,iDAAiD,YAAY,sDAAsD,kBAAkB,qDAAqD,kBAAkB,2KAA2K,8T;;;;;;;;;;;;ACA1pE;AAAe,0jBAA2f,UAAU,saAAsa,+BAA+B,kUAAkU,4BAA4B,4TAA4T,2BAA2B,kN;;;;;;;;;;;;ACA9oD;AAAe,wZAAyV,eAAe,KAAK,oBAAoB,mkC;;;;;;;;;;;;ACAhZ;AAAe,8jCAA+/B,eAAe,KAAK,oBAAoB,8nBAA8nB,SAAS,uBAAuB,WAAW,uBAAuB,SAAS,uBAAuB,kBAAkB,wJAAwJ,0K;;;;;;;;;;;;ACAh8D;AAAe,kJAAmF,UAAU,g5B;;;;;;;;;;;;ACA5G;AAAe,sZAAuV,eAAe,KAAK,oBAAoB,4JAA4J,mBAAmB,8zB;;;;;;;;;;;;ACA7jB;AAAe,m4BAAo0B,eAAe,KAAK,oBAAoB,+nBAA+nB,SAAS,uBAAuB,WAAW,uBAAuB,WAAW,uBAAuB,YAAY,uJAAuJ,0K;;;;;;;;;;;;ACAjwD;AAAe,ibAAkX,eAAe,KAAK,oBAAoB,qyBAAqyB,iNAAiN,sCAAsC,0CAA0C,m6C;;;;;;;;;;;;ACA/+C;AAAe,sgF;;;;;;;;;;;;ACAf;AAAe,wRAAyN,0SAA0S,UAAU,gWAAgW,qBAAqB,mmEAAmmE,QAAQ,KAAK,qBAAqB,8/BAA8/B,QAAQ,KAAK,qBAAqB,0/BAA0/B,QAAQ,KAAK,qBAAqB,8hCAA8hC,QAAQ,KAAK,cAAc,2nDAA2nD,WAAW,KAAK,QAAQ,sfAAsf,ksB;;;;;;;;;;;;ACApxQ;AAAe,67BAA83B,UAAU,4uCAA4uC,mEAAmE,gFAAgF,SAAS,iDAAiD,gBAAgB,iDAAiD,iBAAiB,sDAAsD,qBAAqB,qDAAqD,qBAAqB,iDAAiD,kBAAkB,iDAAiD,gBAAgB,iDAAiD,kBAAkB,sGAAsG,eAAe,+BAA+B,gOAAgO,8S;;;;;;;;;;;;ACAlnG;AAAe,2fAA4b,qMAAqM,gtBAAgtB,UAAU,2lBAA2lB,mEAAmE,2GAA2G,eAAe,+BAA+B,kCAAkC,kBAAkB,0CAA0C,kBAAkB,oDAAoD,kBAAkB,KAAK,sCAAsC,sNAAsN,kT;;;;;;;;;;;;ACAxlF;AAAe,w4H;;;;;;;;;;;ACAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;GAGG;AACwC;AAEa;AACf;AACmB;AAE5D,0EAA0E;AACpB;AAItD;IAIE,yBAAoB,MAAc,EAAU,YAA0B;QAAlD,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAE,CAAC;IAEzE,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBA+BC;QA9BD,mGAAmG;QACjG,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAGpE,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;YAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;iBACtB,IAAI,CACH,0DAAG,CAAC,eAAK,IAAI,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,EACvC,iEAAU,CAAC,UAAC,GAAsB;gBAChC,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC;gBACzB,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC;gBACrB,OAAO,uDAAU,CAAE,GAAG,CAAC;YACzB,CAAC,CAAC,CACD;SAEJ;QAED,IAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;YACrB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,YAAU,WAAW,CAAC,YAAc,CAAC;SAChF,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;aACvB,IAAI,CACH,0DAAG,CAAC,eAAK,IAAI,YAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,EACtC,iEAAU,CAAC,UAAC,GAAsB;YACjC,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC;YACzB,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YACrB,OAAO,uDAAU,CAAK,GAAG,CAAC,OAAO,UAAK,GAAG,CAAC,IAAI,MAAG,CAAC;QACpD,CAAC,CAAC,CACD;IACL,CAAC;IAED,uCAAa,GAAb,UAAc,KAAU;QACtB,sCAAsC;QACtC,IAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAC;YAChC,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,kDAAkD;YAClD,IAAI,CAAC,eAAe,CAAC,EAAC,KAAK,SAAC,CAAC,CAAC;SAE/B;IAEH,CAAC;IAED,qCAAW,GAAX,UAAY,GAAG;QACb,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC5B,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;SACjC;QACD,OAAO,GAAG;IACZ,CAAC;IAED,yCAAe,GAAf,UAAgB,GAAQ;QACtB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,KAAK,GAAG,GAAG,CAAC;QAChB,IAAG,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAC;YACrC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;SACzB;aAAK,IAAG,GAAG,CAAC,KAAK,EAAC;YACjB,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;SACnB;QAED,OAAO,KAAK,CAAC,CAAG,GAAG,CAAC,OAAO,IAAI,EAAE,YAAK,GAAG,CAAC,IAAI,IAAI,EAAE,eAAQ,KAAK,CAAC,OAAO,IAAI,EAAE,YAAK,KAAK,CAAC,IAAI,IAAI,EAAE,QAAK,CAAC;IAG5G,CAAC;;gBAnE2B,sDAAM;gBAAwB,kEAAY;;IAJ3D,eAAe;QAD3B,gEAAU,EAAE;yCAKiB,sDAAM,EAAwB,kEAAY;OAJ3D,eAAe,CA2E3B;IAAD,sBAAC;CAAA;AA3E2B;;;;;;;;;;;;;AChB5B;AAAe,oFAAqB,oBAAoB,cAAc,aAAa,gBAAgB,iBAAiB,4BAA4B,iBAAiB,GAAG,cAAc,gBAAgB,iBAAiB,yBAAyB,uBAAuB,GAAG,sCAAsC,gBAAgB,iBAAiB,uBAAuB,2BAA2B,iBAAiB,uBAAuB,WAAW,YAAY,6DAA6D,mDAAmD,GAAG,qBAAqB,mCAAmC,2BAA2B,GAAG,kCAAkC,cAAc,wCAAwC,SAAS,wCAAwC,GAAG,0BAA0B,cAAc,4BAA4B,oCAAoC,KAAK,SAAS,4BAA4B,oCAAoC,KAAK,GAAG,+CAA+C,+/D;;;;;;;;;;;;;;;;;;;;;;;;ACAx9B;AAUxC;IAAA;IACA,CAAC;IADY,YAAY;QARxB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sCAAsC;YACtC,QAAQ,EAAE,uCAEX;;SAEA,CAAC;OACW,YAAY,CACxB;IAAD,mBAAC;CAAA;AADwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV6B;AACqB;AACV;AACb;AAEX;AACiB;AACX;AAEA;AACc;AACP;AACc;AACE;AACM;AAChB;AACG;AACZ;AAES;AAEH;AAIN;AACS;AACG;AAER;AACvD,yEAAyE;AACzE,2EAA2E;AAC3E,wEAAwE;AACE;AACvB;AAgDnD;IAAA;IACA,CAAC;IADY,SAAS;QA7CrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBAEP,uEAAa;gBACb,qEAAgB;gBAChB,iEAAkB,CAAC,OAAO,EAAE;gBAC5B,qEAAS,CAAC,OAAO,EAAE;gBACnB,mEAAmB;gBACnB,kEAAY;gBACZ,4DAAY,CAAC,OAAO,CAAK,sDAAU,uBAAO,6DAAiB,EAAE;gBAE7D,gEAAW;gBACX,yEAAc;gBACd,sEAAa;gBACb,gEAAW;gBACX,yEAAc;gBAEd,4EAAe;aAIhB;YACD,YAAY,EAAE;gBACZ,2DAAY;gBACZ,4EAAgB;gBAChB,yEAAe;gBACf,kEAAa;gBACb,qFAAoB;gBACpB,mFAAmB;gBACnB,2FAAuB;gBACvB,wFAAsB;aAEvB;YACD,eAAe,EAAE;gBACf,yBAAyB;gBACzB,uBAAuB;gBACvB,wFAAsB;aACvB;YACD,SAAS,EAAE;gBAET,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,gFAAe,EAAE,KAAK,EAAE,IAAI,EAAE;aACvE;YACD,0CAA0C;YAC1C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;;;;;;;;;;AClFkD;AAKI;AACZ;AAGzD,IAAM,UAAU,GAAW;IAChC,IAAI;IACJ,cAAc;IACd,yBAAyB;IACzB,sBAAsB;IACtB,KAAK;IACL,IAAI;IACJ,kBAAkB;IAClB,oCAAoC;IACpC,gBAAgB;IAChB,QAAQ;IACR,2BAA2B;IAC3B,0CAA0C;IAC1C,QAAQ;IACR,MAAM;IACN,KAAK;IACL,IAAI;IACJ,mBAAmB;IACnB,qCAAqC;IACrC,iCAAiC;IACjC,gBAAgB;IAChB,QAAQ;IACR,uBAAuB;IACvB,kCAAkC;IAClC,QAAQ;IACR,MAAM;IACN,KAAK;IACL;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0FAAuB;QAClC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8EAAiB;aAC7B;SACF;KACF;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,UAAU;KACvB;CACF;AAEM,IAAM,iBAAiB,GAAiB;IAC7C,kBAAkB,EAAE,iEAAiB;CACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDiD;AACD;AACR;AACa;AACf;AACS;AACtB;AAO1B;IAQI,+BACY,KAAqB,EACrB,MAAc,EACd,eAAgC;QAFhC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;IAC5C,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAoBC;QAnBG,IAAI;aACC,KAAK;aACL,MAAM;aACN,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,EAAP,CAAO,CAAC,EACjB,gEAAS,CAAC,YAAE;YACR,IAAI,EAAE,KAAK,KAAK;gBAAE,OAAO,+CAAE,CAAC,IAAI,kDAAQ,EAAE,CAAC,CAAC;YAC5C,OAAO,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC5C,CAAC,CAAC,CACL;aACA,SAAS,CACN,kBAAQ;YACJ,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,CAAC,EACD,aAAG;YACC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACtB,CAAC,CACJ,CAAC;IACV,CAAC;IAED,oCAAI,GAAJ;QAAA,iBAaC;QAZG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC9C,kBAAQ;YACJ,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;YACrC,UAAU,CAAC;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC7C,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,EACD,aAAG;YACC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACtB,CAAC,CACJ,CAAC;IACN,CAAC;IAED,sCAAM,GAAN;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC7C,CAAC;;gBA5CkB,8DAAc;gBACb,sDAAM;gBACG,iEAAe;;IAXnC,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,8MAA6C;SAC9C,CAAC;yCAUqB,8DAAc;YACb,sDAAM;YACG,iEAAe;OAXnC,qBAAqB,CAsDjC;IAAD,4BAAC;CAAA;AAtDiC;;;;;;;;;;;;;;;;;;ACblC;IAAA;IACA,CAAC;IAAD,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDiD;AAEE;AACE;AAOtD;IAaI,+BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAXpD,WAAM,GAAG,IAAI,+DAAc,EAAE,CAAC;QAE9B,WAAM,GAAG,EAAE,CAAC;QAUR,kBAAkB;QAClB,uBAAuB;QACvB,sBAAsB;QACtB,0CAA0C;QAC1C,OAAO;IACX,CAAC;IAVD,sBAAI,+CAAY;QAHhB,cAAc;aAGd;YACI,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;QAC7C,CAAC;;;OAAA;IAUD,wCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,sBAAsB;IACtB,uCAAuC;IACvC,MAAM;IAEN,sCAAM,GAAN;QACI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,sCAAM,GAAN,UAAO,QAAkB;QACrB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;IACrC,CAAC;IAED,sCAAM,GAAN,UAAO,QAAkB;QAAzB,iBAeC;QAdG,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3C,kBAAQ;gBACJ,KAAI,CAAC,MAAM,GAAG,wBAAwB,CAAC;gBACvC,UAAU,CAAC;oBACP,KAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,EAAC,IAAI,CAAC,CAAC;YACZ,CAAC,EACD,aAAG;gBACC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YACtB,CAAC,CACJ,CAAC;SACL;IAEL,CAAC;;gBAvCoC,iEAAe;;IAb3C,qBAAqB;QAJjC,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,8MAA2C;SAC9C,CAAC;yCAcuC,iEAAe;OAb3C,qBAAqB,CAsDjC;IAAD,4BAAC;CAAA;AAtDiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgD;AACnC;AACF;AACE;AACiC;AACA;AAC3B;AACD;AACD;AAuBnD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QArB1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,gEAAe,CAAC;gBACtC,kEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,4FAAqB;gBACrB,4FAAqB;aACtB;YACD,SAAS,EAAE;gBACT,iEAAe;aAChB;YACD,OAAO,EAAE,EACR;YACD,OAAO,EAAE;gBACP,oEAAsB;gBACtB,8DAAgB;aACjB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC9BqD;AACA;AACX;AAE9D,IAAM,eAAe,GAAW;IACrC;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kFAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,4FAAqB;aACjC;SACF;KACF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kFAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,4FAAqB;aACjC;SACF;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB0C;AAEgC;AAG3E;IAGI,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,iCAAiC,CAAC;QAI5C,iBAAY,GAAe,EAAE,CAAC;IAF9B,CAAC;IAID,kCAAQ,GAAR,UAAS,EAAU;QACf,IAAI,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,EAAI,CAAC;QAClC,IAAI,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC1B,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;aACV,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC3D,CAAC;IAED,8BAAI,GAAJ,UAAK,MAAsB;QAA3B,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACvB,gBAAM;YACF,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC/B,CAAC,EACD,aAAG;YACC,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC,CACJ;IACL,CAAC;IAED,8BAAI,GAAJ,UAAK,MAAsB;QACvB,IAAI,GAAG,GAAG,KAAG,IAAI,CAAC,OAAS,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;aACV,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEvD,IAAI,MAAM,GAAG,EACZ,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC7D,CAAC;IAED,8BAAI,GAAJ,UAAK,MAAgB;QACjB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAE1E,GAAG,GAAM,IAAI,CAAC,OAAO,kBAAe,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;QAEhE,kBAAkB;QAClB,uDAAuD;QACvD,mEAAmE;QACnE,sEAAsE;QACtE,IAAI;QACJ,SAAS;QACT,4CAA4C;QAC5C,uEAAuE;QACvE,YAAY;IAChB,CAAC;IAGD,gCAAM,GAAN,UAAO,MAAgB;QACnB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAG,MAAM,CAAC,EAAE,EAAE;YACV,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YAChD,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAW,GAAG,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAC7D;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;;gBAlEyB,+DAAU;;IAH3B,eAAe;QAD3B,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,eAAe,CAsE3B;IAAD,sBAAC;CAAA;AAtE2B;;;;;;;;;;;;;;;;;;ACP5B;IAAA;IAMA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACND;IAAA;QACI,UAAK,GAAW,EAAE,CAAC;IACvB,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACFD;AAAe,uGAAwC,uBAAuB,kBAAkB,KAAK,oBAAoB,gCAAgC,oBAAoB,uBAAuB,KAAK,wBAAwB,kBAAkB,kBAAkB,yBAAyB,kBAAkB,mBAAmB,wBAAwB,sBAAsB,KAAK,0BAA0B,kBAAkB,kBAAkB,wBAAwB,KAAK,6BAA6B,wBAAwB,4BAA4B,KAAK,4BAA4B,WAAW,uEAAuE,u9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnmB;AAEI;AACE;AASxD;IAUI,gCAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QARtD,WAAM,GAAG,IAAI,iEAAe,EAAE,CAAC;QAE/B,WAAM,GAAG,EAAE,CAAC;IAUZ,CAAC;IARD,sBAAI,iDAAa;aAAjB;YACI,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAC/C,CAAC;;;OAAA;IAQD,yCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,uCAAM,GAAN;QACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;;gBAZqC,mEAAgB;;IAV7C,sBAAsB;QALlC,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,kNAA4C;;SAE/C,CAAC;yCAWwC,mEAAgB;OAV7C,sBAAsB,CA0BlC;IAAD,6BAAC;CAAA;AA1BkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AACM;AACF;AACE;AACoC;AAE5B;AACD;AAkBtD;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAhB3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,kEAAgB,CAAC;aACxC;YACD,YAAY,EAAE;gBACZ,+FAAsB;aAEvB;YACD,SAAS,EAAE;gBACT,mEAAgB;aACjB;YACD,OAAO,EAAE,EACR;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACxBuD;AAEd;AAE9D,IAAM,gBAAgB,GAAW;IACtC;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kFAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,+FAAsB;aAClC;SACF;KACF;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACd0C;AAEgC;AAC3E,qDAAqD;AAGrD;IAGI,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,kCAAkC,CAAC;QAI7C,kBAAa,GAAgB,EAAE,CAAC;IAFhC,CAAC;IAID,mCAAQ,GAAR,UAAS,EAAU;QAEf,IAAI,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,EAAI,CAAC;QAClC,IAAI,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QACzB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;aACV,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC5D,CAAC;IAED,+BAAI,GAAJ,UAAK,MAAuB;QAA5B,iBAUC;QARG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACvB,gBAAM;YACF,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAChC,CAAC,EACD,aAAG;YACC,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC,CACJ;IACL,CAAC;IAED,+BAAI,GAAJ,UAAK,MAAuB;QACxB,IAAI,GAAG,GAAM,IAAI,CAAC,OAAO,WAAQ,CAAC;QAClC,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;aACV,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEvD,IAAI,MAAM,GAAG;QACX,0BAA0B;SAC3B,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC9D,CAAC;;gBArCyB,+DAAU;;IAH3B,gBAAgB;QAD5B,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACD;AACR;AACS;AACf;AACa;AACtB;AAM1B;IAME,6BACU,KAAqB,EACrB,MAAc,EACd,aAA4B;QAF5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QALtC,aAAQ,GAAQ,EAAE,CAAC;IAMnB,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI;aACD,KAAK;aACL,MAAM;aACN,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,EACd,gEAAS,CAAC,YAAE;YACV,IAAI,EAAE,KAAK,KAAK,EAAE;gBAAE,OAAO,+CAAE,CAAC,IAAI,8CAAM,EAAE,CAAC,CAAC;aAAE;YAC9C,OAAO,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CACH;aACA,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrB,CAAC,EACD,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAC,CAAC;QAC9D,CAAC,CACF,CAAC;IACN,CAAC;IAED,kCAAI,GAAJ;QAAA,iBAaC;QAZC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC5C,gBAAM;YACJ,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sBAAsB,EAAC,CAAC;YACnE,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACrC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAC,CAAC;QAC7D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;gBA3CgB,8DAAc;gBACb,sDAAM;gBACC,6DAAa;;IAT3B,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,sMAA2C;SAC5C,CAAC;yCAQiB,8DAAc;YACb,sDAAM;YACC,6DAAa;OAT3B,mBAAmB,CAmD/B;IAAD,0BAAC;CAAA;AAnD+B;;;;;;;;;;;;;;;;;;ACZhC;IAAA;QACI,SAAI,GAAG,EAAE,CAAC;QACV,OAAE,GAAG,EAAE,CAAC;IACZ,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHiD;AACF;AACE;AAOlD;IAUE,6BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QARhD,WAAM,GAAG,IAAI,2DAAY,EAAE,CAAC;QAE5B,aAAQ,GAAQ,EAAE,CAAC;IAOnB,CAAC;IALD,sBAAI,2CAAU;aAAd;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QACvC,CAAC;;;OAAA;IAKD,sCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,oCAAM,GAAN,UAAO,QAAgB;QACrB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IACjC,CAAC;IAED,oCAAM,GAAN,UAAO,MAAc;QAArB,iBAaC;QAZC,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;gBACxC,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAC,CAAC;gBACrE,UAAU,CAAC;oBACT,KAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAC,CAAC;YAChE,CAAC,CACF,CAAC;SACH;IACH,CAAC;;gBA5BkC,6DAAa;;IAVrC,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sMAAyC;SAC1C,CAAC;yCAWmC,6DAAa;OAVrC,mBAAmB,CAuC/B;IAAD,0BAAC;CAAA;AAvC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTS;AACM;AACF;AACE;AAC2B;AACA;AACzB;AACD;AAehD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAbxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,4DAAa,CAAC;aACrC;YACD,YAAY,EAAE;gBACZ,sFAAmB;gBACnB,sFAAmB;aACpB;YACD,SAAS,EAAE,CAAC,6DAAa,CAAC;YAC1B,OAAO,EAAE,EAAE;SACZ,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACrBiD;AACA;AAEnE,IAAM,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,sFAAmB;KAC/B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,sFAAmB;KAC/B;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXyC;AAEgC;AAG3E;IAGE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,eAAU,GAAa,EAAE,CAAC;IAG1B,CAAC;IAED,gCAAQ,GAAR,UAAS,EAAU;QACjB,IAAM,GAAG,GAAG,sCAAoC,EAAI,CAAC;QACrD,IAAM,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC5B,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IACvD,CAAC;IAED,4BAAI,GAAJ,UAAK,MAAoB;QAAzB,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC9B,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QAC3B,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4BAAI,GAAJ,UAAK,MAAoB;QACvB,IAAM,GAAG,GAAG,kCAAkC,CAAC;QAC/C,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEpE,IAAM,MAAM,GAAG;YACb,MAAM,EAAE,MAAM,CAAC,IAAI;YACnB,IAAI,EAAE,MAAM,CAAC,EAAE;SAChB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IACzD,CAAC;IAED,4BAAI,GAAJ,UAAK,MAAc;QACjB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,MAAM,CAAC,EAAE,EAAE;YACb,GAAG,GAAG,sCAAoC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YACjE,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAC9D;aAAM;YACL,GAAG,GAAG,kCAAkC,CAAC;YACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAC/D;IACH,CAAC;IAED,8BAAM,GAAN,UAAO,MAAc;QACnB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAI,MAAM,CAAC,EAAE,EAAE;YACb,GAAG,GAAG,sCAAoC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YACjE,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,GAAG,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SACzD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;gBAxDyB,+DAAU;;IAHzB,aAAa;QADzB,gEAAU,EAAE;yCAIe,+DAAU;OAHzB,aAAa,CA4DzB;IAAD,oBAAC;CAAA;AA5DyB;;;;;;;;;;;;;;;;;;ACP1B;IAAA;IAKA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAe,6GAA8C,uI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAM;AACZ;AACD;AAStD;IAEE,uBACU,KAAqB,EACrB,MAAc,EACd,YAA0B;QAEhC,sEAAsE;QACtE,mFAAmF;QACnF,sCAAsC;QACtC,IAAI;QAPE,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAepC,cAAS,GAAW,EAAE,CAAC;QARnB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,QAAQ,CAAC,CAAC;IAE3C,CAAC;IAKD,gCAAQ,GAAR;QACE,+DAA+D;IAEjE,CAAC;IAED,sBAAI,mCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,6BAAK,GAAL;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,8BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;;gBAlCgB,8DAAc;gBACb,sDAAM;gBACA,iEAAY;;IALzB,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0KAAoC;YAEpC,aAAa,EAAE,+DAAiB,CAAC,IAAI;;SACtC,CAAC;yCAIiB,8DAAc;YACb,sDAAM;YACA,iEAAY;OALzB,aAAa,CAwCzB;IAAD,oBAAC;CAAA;AAxCyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXwB;AACD;AACR;AACO;AACf;AACe;AACtB;AAM1B;IAME,4BACU,KAAqB,EACrB,MAAc,EACd,YAA0B;QAF1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QALpC,aAAQ,GAAQ,EAAE,CAAC;IAMnB,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI;aACD,KAAK;aACL,MAAM;aACN,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,EAAJ,CAAI,CAAC,EACd,gEAAS,CAAC,YAAE;YACV,IAAI,EAAE,KAAK,KAAK,EAAE;gBAAE,OAAO,+CAAE,CAAC,IAAI,4CAAK,EAAE,CAAC,CAAC;aAAE;YAC7C,OAAO,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CACH;aACA,SAAS,CAAC,eAAK;YACZ,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrB,CAAC,EACD,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAC,CAAC;QAC9D,CAAC,CACF,CAAC;IACN,CAAC;IAED,iCAAI,GAAJ;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,eAAK;YACH,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sBAAsB,EAAC,CAAC;YACnE,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACpC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EACD,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAC,CAAC;QAC7D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;;gBA3CgB,8DAAc;gBACb,sDAAM;gBACA,2DAAY;;IATzB,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kMAA0C;SAC3C,CAAC;yCAQiB,8DAAc;YACb,sDAAM;YACA,2DAAY;OATzB,kBAAkB,CAmD9B;IAAD,yBAAC;CAAA;AAnD8B;;;;;;;;;;;;;;;;;;ACZ/B;IAAA;QACI,SAAI,GAAG,EAAE,CAAC;IACd,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFiD;AACJ;AACE;AAOhD;IAUE,4BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAR9C,WAAM,GAAG,IAAI,yDAAW,EAAE,CAAC;QAE3B,aAAQ,GAAQ,EAAE,CAAC;IAOnB,CAAC;IALD,sBAAI,yCAAS;aAAb;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QACrC,CAAC;;;OAAA;IAKD,qCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAED,mCAAM,GAAN,UAAO,QAAe;QACpB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IAED,mCAAM,GAAN,UAAO,KAAY;QAAnB,iBAaC;QAZC,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;YAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACtC,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAC,CAAC;gBACrE,UAAU,CAAC;oBACT,KAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iBAAiB,EAAC,CAAC;YAChE,CAAC,CACF,CAAC;SACH;IACH,CAAC;;gBA5BiC,2DAAY;;IAVnC,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kMAAwC;SACzC,CAAC;yCAWkC,2DAAY;OAVnC,kBAAkB,CAuC9B;IAAD,yBAAC;CAAA;AAvC8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACM;AACF;AACE;AACwB;AACA;AACxB;AACD;AAe9C;IAAA;IAA2B,CAAC;IAAf,WAAW;QAbvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,0DAAY,CAAC;aACpC;YACD,YAAY,EAAE;gBACZ,mFAAkB;gBAClB,mFAAkB;aACnB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,OAAO,EAAE,EAAE;SACZ,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACrB+C;AACA;AAEhE,IAAM,YAAY,GAAW;IAClC;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,mFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,mFAAkB;KAC9B;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXyC;AAEgC;AAE3E,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AAGpE;IAIE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,cAAS,GAAY,EAAE,CAAC;QACxB,QAAG,GAAG,iCAAiC,CAAC;IAGxC,CAAC;IAED,+BAAQ,GAAR,UAAS,EAAU;QACjB,IAAM,GAAG,GAAM,IAAI,CAAC,GAAG,SAAI,EAAI,CAAC;QAChC,IAAM,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IACtD,CAAC;IAED,2BAAI,GAAJ,UAAK,MAAmB;QAAxB,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC9B,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,EACD,aAAG;YACD,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2BAAI,GAAJ,UAAK,MAAmB;QACtB,IAAM,MAAM,GAAG;YACb,MAAM,EAAE,MAAM,CAAC,IAAI;SACpB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC7D,CAAC;IAED,2BAAI,GAAJ,UAAK,MAAa;QAChB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,MAAM,CAAC,EAAE,EAAE;YACb,GAAG,GAAM,IAAI,CAAC,GAAG,SAAI,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YAC5C,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAC7D;aAAM;YACL,GAAG,GAAG,KAAG,IAAI,CAAC,GAAK,CAAC;YACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,6BAAM,GAAN,UAAO,MAAa;QAClB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,MAAM,CAAC,EAAE,EAAE;YACb,GAAG,GAAM,IAAI,CAAC,GAAG,SAAI,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YAC5C,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,GAAG,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SACxD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;gBAjDyB,+DAAU;;IAJzB,YAAY;QADxB,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,YAAY,CAsDxB;IAAD,mBAAC;CAAA;AAtDwB;;;;;;;;;;;;;;;;;;ACTzB;IAAA;IAKA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLyC;AACa;AACD;AAatD;IAEE,6BACU,KAAqB,EACrB,MAAc,EACd,YAA0B;QAEhC,sEAAsE;QACtE,mFAAmF;QACnF,sCAAsC;QACtC,IAAI;QAPE,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAOlC,yEAAyE;QAEzE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE/D,yEAAyE;QACzE,wCAAwC;QACxC,YAAY;QACZ,IAAI;QAEN,0BAA0B;QAC1B,sCAAsC;QACtC,aAAa;QACb,KAAK;QACL,wEAAwE;QACxE,kDAAkD;QAClD,cAAc;QACd,MAAM;IAEN,CAAC;;gBA7BgB,8DAAc;gBACb,sDAAM;gBACA,iEAAY;;IALzB,mBAAmB;QAT/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,cAAc;YACd,8BAA8B;YAC9B,oCAAoC;YACpC,KAAK;YACL,oKAAoC;SAErC,CAAC;yCAIiB,8DAAc;YACb,sDAAM;YACA,iEAAY;OALzB,mBAAmB,CAiC/B;IAAD,0BAAC;CAAA;AAjC+B;;;;;;;;;;;;;;;;;;;;;;;;;ACfkB;AASlD;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAPhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,2CAET;SAEF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AASlD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAPnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,2CAET;SAEF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACO;AAIV;AAC/C,0CAA0C;AAG1C;IAQI,wBAEY,KAAqB,EACrB,MAAc,EACd,YAA0B;QAF1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAVtC,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAU,EAAE,CAAC;QAClB,aAAQ,GAAQ,EAAE,CAAC;IAQb,CAAC;IAEP,iCAAQ,GAAR;QACG,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACpC,IAAG,GAAG,KAAK,QAAQ,EAAC;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;SACjC;aAAI;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAChC;QAEC,qBAAqB;QACrB,6BAA6B;QAE7B,yDAAyD;QAC1D,wEAAwE;IAC3E,CAAC;IAID,6BAAI,GAAJ;QAAA,iBAiBG;QAhBC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3C,cAAI;YACH,sBAAsB;YACrB,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,uBAAuB,EAAC,CAAC;YACpE,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;gBACV,kGAAkG;gBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC7D;YAClB,UAAU,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,EACD,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAC,CAAC;QAC5D,CAAC,CACF,CAAC;IACJ,CAAC;;gBAzCgB,8DAAc;gBACb,sDAAM;gBACA,2DAAY;;IAZ7B,cAAc;QAD1B,+DAAS,CAAC,EAAC,6KAAmC,EAAC,CAAC;yCAW1B,8DAAc;YACb,sDAAM;YACA,2DAAY;OAZ7B,cAAc,CAoD1B;IAAD,qBAAC;CAAA;AApD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACM;AACF;AACE;AACI;AACJ;AACD;AAc9C;IAAA;IAA2B,CAAC;IAAf,WAAW;QAZvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,0DAAY,CAAC;aACpC;YACD,YAAY,EAAE;gBACZ,+DAAc;aACf;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,OAAO,EAAE,EAAE;SACZ,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACnB2B;AAG5C,IAAM,YAAY,GAAW;IAClC;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTyC;AACgC;AAK3E,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AAGpE;IAIE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlC,cAAS,GAAY,EAAE,CAAC;QAC1B,QAAG,GAAG,mCAAmC,CAAC;IAG1C,CAAC;IAEC,iDAAiD;IACjD,oGAAoG;IACpG,8BAA8B;IAC9B,yEAAyE;IACzE,+CAA+C;IAC/C,qHAAqH;IACrH,6EAA6E;IAC7E,gBAAgB;IAEhB,2BAA2B;IAC3B,eAAe;IACf,IAAI;IAEJ,4BAAK,GAAL,UAAM,MAAa;QACf,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACX,GAAG,GAAG,KAAG,IAAI,CAAC,GAAK,CAAC;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;IAEjE,CAAC;IAEH,6BAAM,GAAN;QACI,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAc,GAAd;QACI,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAG,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAC;YAC9D,mCAAmC;YACnC,OAAO,QAAQ;SAChB;aAAK;YACJ,OAAO,EAAE;SACV;IAEL,CAAC;;gBAtCuB,+DAAU;;IAJzB,YAAY;QADxB,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,YAAY,CA2CxB;IAAD,mBAAC;CAAA;AA3CwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACqC;AAuB5D;IAIE,gCAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAC9C,CAAC;;gBAD+B,yEAAc;;IAJnC,sBAAsB;QArBlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,2eAgBL;YACL,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;yCAKgC,yEAAc;OAJnC,sBAAsB,CAMlC;IAAD,6BAAC;CAAA;AANkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBZ;AACkC;AACG;AA0B5D;IAQE,8BAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;QAF9C,UAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;IAGjD,CAAC;IAPD,sBAAI,8CAAY;aAAhB,UAAiB,KAAa;YAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;;;OAAA;;gBAI+B,yEAAc;;IARnC,oBAAoB;QAxBhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,qnBAmBL;YACL,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;yCASgC,yEAAc;OARnC,oBAAoB,CAUhC;IAAD,2BAAC;CAAA;AAVgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BV;AACqC;AAoB5D;IAIE,gCAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAC9C,CAAC;;gBAD+B,yEAAc;;IAJnC,sBAAsB;QAlBlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,uWAaL;YACL,eAAe,EAAE,qEAAuB,CAAC,MAAM;SAChD,CAAC;yCAKgC,yEAAc;OAJnC,sBAAsB,CAMlC;IAAD,6BAAC;CAAA;AANkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBM;AAIP;AACQ;AACA;AAEuB;AACH;AACI;AAKpE;IAEE,sBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,8BAAO,GAAP,UACE,MAAkB,EAAE,KAAiB;QAArC,2CAAkB;QAAE,yCAAiB;QAErC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC9B,gFAAsB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAElD,KAAK,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;QACxC,KAAK,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QAEtC,OAAO,iDAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,eAAK;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,4BAAK,GAAL,UACE,OAAe,EAAE,YAAoB,EAAE,KAAe;QAAf,uCAAe;QAEtD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC9B,4EAAoB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAEhD,KAAK,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,KAAK,CAAC,iBAAiB,CAAC,YAAY,GAAG,YAAY,CAAC;QACpD,KAAK,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QAEtC,OAAO,iDAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,eAAK;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,8BAAO,GAAP,UACE,OAAe,EAAE,KAAiB;QAAjB,yCAAiB;QAElC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC9B,gFAAsB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAElD,KAAK,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,KAAK,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QAEtC,OAAO,iDAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,eAAK;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN,UACE,OAAY,EACZ,MAAkC,EAClC,OAAyB;QAEzB,uCAAuC;QACvC,oDAAoD;QACpD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC9B,OAAO,aACL,QAAQ,EAAE,QAAQ,IAAK,OAAO,EACjC,CAAC;QAEF,qDAAqD;QACrD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QAE/C,OAAO,iDAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,eAAK;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;gBA3E6B,mEAAQ;;IAF3B,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG8B,mEAAQ;OAF3B,YAAY,CA8ExB;IAAD,mBAAC;CAAA;AA9EwB;;;;;;;;;;;;;ACfzB;AAAe,gFAAiB,kBAAkB,mBAAmB,mCAAmC,qBAAqB,kBAAkB,2BAA2B,KAAK,6CAA6C,mhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApL;AACC;AAQzC;IAME,yBACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHhB,mBAAc,GAAY,KAAK,CAAC;IAKxC,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;YAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACnC;IACH,CAAC;IAED,gDAAsB,GAAtB,UAAuB,KAAK;QAC1B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAG,KAAK,KAAK,QAAQ,EAAC;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,uCAAa,GAAb;QACE,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;;gBA3BiB,sDAAM;;IAPb,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,gLAAoC;;SAErC,CAAC;yCAQkB,sDAAM;OAPb,eAAe,CAmC3B;IAAD,sBAAC;CAAA;AAnC2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsB;AACD;AACR;AACW;AACpD,0CAA0C;AACL;AACW;AACtB;AAO1B;IAUI,8BACY,KAAqB,EACrB,MAAc,EACd,cAA8B;QAF9B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAElC,IAAI,CAAC,wBAAwB,GAAG,CAAC,EAAC,EAAE,EAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAC,EAAC,EAAC,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;IAChH,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAuBC;QAtBG,IAAI;aACC,KAAK;aACL,MAAM;aACN,IAAI,CACD,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,EAAP,CAAO,CAAC,EACjB,gEAAS,CAAC,YAAE;YACR,IAAI,EAAE,KAAK,KAAK;gBAAE,OAAO,+CAAE,CAAC,IAAI,gDAAO,EAAE,CAAC,CAAC;YAC3C,OAAO,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC3C,CAAC,CAAC,CACL;aACA,SAAS,CACN,iBAAO;YACH,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,CAAC,EACD,aAAG;YACC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACtB,CAAC,CACJ,CAAC;QAEF,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAC,EAAE,EAAC,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAC,EAAE,EAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;QAC1F,IAAI,CAAC,YAAY,GAAG,CAAC,EAAC,EAAE,EAAC,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,EAAC,EAAC,EAAE,EAAC,CAAC,EAAE,eAAe,EAAE,OAAO,EAAE,EAAC,EAAC,EAAE,EAAC,CAAC,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAC,EAAC,EAAE,EAAC,CAAC,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAE;IACrK,CAAC;IAED,mCAAI,GAAJ;QAAA,iBAkBC;QAjBG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,GAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACjF,IAAG,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC5C,iBAAO;YACH,0BAA0B;YAC3B,yCAAyC;YACxC,qBAAqB;YACrB,+CAA+C;YAC/C,+BAA+B;QACnC,CAAC,EACD,aAAG;YACC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACtB,CAAC,CACJ,CAAC;IACN,CAAC;IAED,qCAAM,GAAN;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGD,kDAAmB,GAAnB,UAAoB,MAAM;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,wCAAS,GAAT,UAAU,UAAe;QAAzB,iBAQC;QAPC,IAAI,IAAI,GAAQ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,QAAQ,GAAc,IAAI,UAAU,EAAE,CAAC;QAE3C,QAAQ,CAAC,SAAS,GAAG,UAAC,CAAC;YACnB,KAAI,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACpD,CAAC;QACG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC;IAClC,CAAC;;gBArEgB,8DAAc;gBACb,sDAAM;gBACE,+DAAc;;IAbjC,oBAAoB;QAJhC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,0MAA4C;SAC7C,CAAC;yCAYqB,8DAAc;YACb,sDAAM;YACE,+DAAc;OAbjC,oBAAoB,CAkFhC;IAAD,2BAAC;CAAA;AAlFgC;;;;;;;;;;;;;;;;;;ACdjC;IAAA;QACI,cAAS,GAAW,EAAE,CAAC;IAC3B,CAAC;IAAD,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFiD;AAEA;AACE;AAOpD;IAUI,8BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QARlD,WAAM,GAAG,IAAI,6DAAa,EAAE,CAAC;QAE7B,WAAM,GAAG,EAAE,CAAC;IAOZ,CAAC;IALD,sBAAI,6CAAW;aAAf;YACI,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;QAC3C,CAAC;;;OAAA;IAKD,uCAAQ,GAAR;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,qCAAM,GAAN;QACI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAM,GAAN,UAAO,QAAiB;QACpB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;IACpC,CAAC;IAED,qCAAM,GAAN,UAAO,OAAgB;QAAvB,iBAeC;QAdG,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;YAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CACzC,iBAAO;gBACH,KAAI,CAAC,MAAM,GAAG,wBAAwB,CAAC;gBACvC,UAAU,CAAC;oBACP,KAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,EAAC,IAAI,CAAC,CAAC;YACZ,CAAC,EACD,aAAG;gBACC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YACtB,CAAC,CACJ,CAAC;SACL;IAEL,CAAC;;gBA9BmC,+DAAc;;IAVzC,oBAAoB;QAJhC,+DAAS,CAAC;YACP,QAAQ,EAAE,SAAS;YACnB,0MAA0C;SAC7C,CAAC;yCAWsC,+DAAc;OAVzC,oBAAoB,CA0ChC;IAAD,2BAAC;CAAA;AA1CgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVQ;AACM;AACF;AACE;AAC8B;AACA;AAC1B;AACD;AACC;AAmBnD;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAjBzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,8DAAc,CAAC;gBACrC,kEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,yFAAoB;gBACpB,yFAAoB;aACrB;YACD,SAAS,EAAE;gBACT,+DAAc;aACf;YACD,OAAO,EAAE,EACR;SACF,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC1BmD;AACA;AACR;AAG9D,IAAM,cAAc,GAAW;IACpC;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kFAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,yFAAoB;aAChC;SACF;KACF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kFAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,yFAAoB;aAChC;SACF;KACF;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kFAAmB;KAO/B;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpC0C;AAEgC;AAG3E;IAGI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,gCAAgC,CAAC;QAI3C,gBAAW,GAAc,EAAE,CAAC;IAF5B,CAAC;IAID,iCAAQ,GAAR,UAAS,EAAU;QACf,IAAI,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,EAAI,CAAC;QAClC,IAAI,MAAM,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC1B,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;aACV,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC1D,CAAC;IAED,6BAAI,GAAJ,UAAK,MAAqB;QAA1B,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACvB,gBAAM;YACF,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC9B,CAAC,EACD,aAAG;YACC,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC,CACJ;IACL,CAAC;IAED,6BAAI,GAAJ,UAAK,MAAqB;QACtB,IAAI,GAAG,GAAG,KAAG,IAAI,CAAC,OAAS,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE;aACV,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAEvD,IAAI,MAAM,GAAG;YACT,WAAW,EAAE,MAAM,CAAC,SAAS;SAChC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAC5D,CAAC;IAED,6BAAI,GAAJ,UAAK,MAAe;QAChB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QACpC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,MAAM,CAAC,eAAe,GAAG,EAAE,CAAC;QACxD,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAG,MAAM,CAAC,EAAE,EAAE;YACV,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YAChD,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SACjE;aACI;YACD,GAAG,GAAG,KAAG,IAAI,CAAC,OAAS,CAAC;YACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,GAAG,EAAE,MAAM,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAClE;IACL,CAAC;IAGD,+BAAM,GAAN,UAAO,MAAe;QAClB,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC1E,IAAG,MAAM,CAAC,EAAE,EAAE;YACV,GAAG,GAAM,IAAI,CAAC,OAAO,SAAI,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAI,CAAC;YAChD,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,GAAG,EAAE,EAAC,OAAO,WAAE,MAAM,UAAC,CAAC,CAAC;SAC5D;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;;gBAjEyB,+DAAU;;IAH3B,cAAc;QAD1B,gEAAU,EAAE;yCAIiB,+DAAU;OAH3B,cAAc,CAqE1B;IAAD,qBAAC;CAAA;AArE0B;;;;;;;;;;;;;;;;;;ACP3B;IAAA;QAOI,UAAK,GAAW,EAAE,CAAC;QAEnB,oBAAe,GAAW,EAAE,CAAC;IAUjC,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBiD;AACO;AAIJ;AACrD,0CAA0C;AAG1C;IAWI,2BAEY,KAAqB,EACrB,MAAc,EACd,eAAgC;QAFhC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAb5C,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAGlB,aAAQ,GAAQ,EAAE,CAAC;IAWb,CAAC;IAEP,oCAAQ,GAAR;QAAA,iBAWC;QAVG,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAC,EAAE,EAAC,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAC,EAAE,EAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;QACtF,IAAI,CAAC,YAAY,GAAG,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC;QACzE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9C,kBAAQ;YACL,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAE/B,CAAC,CAEJ;IAEL,CAAC;IAED,4CAAgB,GAAhB,UAAiB,IAAI;QAArB,iBASC;QARG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAC/C,kBAAQ;YACJ,KAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACZ,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAE/B,CAAC,CAEJ,CAAC;IACN,CAAC;;gBA5BkB,8DAAc;gBACb,sDAAM;gBACG,iEAAe;;IAfnC,iBAAiB;QAD7B,+DAAS,CAAC,EAAC,sLAAsC,EAAC,CAAC;yCAc7B,8DAAc;YACb,sDAAM;YACG,iEAAe;OAfnC,iBAAiB,CA2C7B;IAAD,wBAAC;CAAA;AA3C6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACM;AACF;AACE;AACU;AACJ;AACD;AACD;AAenD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAb1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,gEAAe,CAAC;gBACtC,kEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,qEAAiB;aAClB;YACD,SAAS,EAAE,CAAC,iEAAe,CAAC;YAC5B,OAAO,EAAE,EAAE;SACZ,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACrB8B;AAGlD,IAAM,eAAe,GAAW;IACrC;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTyC;AACgC;AAK3E,IAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AAGpE;IAIE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlC,gBAAW,GAAe,EAAE,CAAC;QAC/B,QAAG,GAAG,yCAAyC,CAAC;IAGhD,CAAC;IAEC,wCAAc,GAAd,UAAe,WAAmB;QAC9B,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC;QACX,GAAG,GAAM,IAAI,CAAC,GAAG,cAAS,WAAa,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,EAAE,EAAC,MAAM,UAAE,OAAO,WAAC,CAAC,CAAC;IAE7D,CAAC;IAEH,gCAAM,GAAN;QACI,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;;gBAduB,+DAAU;;IAJzB,eAAe;QAD3B,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AAQxC;IAAA;IACA,CAAC;IADY,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,mLAAqC;SACtC,CAAC;OAEW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;;ACR7B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;;;;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["export default \"<div class=\\\"wrapper\\\">\\n  \\n  <ng-http-loader></ng-http-loader>\\n\\n  <div class=\\\"sidebar\\\" data-background-color=\\\"white\\\" data-active-color=\\\"danger\\\">\\n    <sidebar-cmp></sidebar-cmp>\\n  </div>\\n  <div class=\\\"main-panel\\\">\\n    <navbar-cmp></navbar-cmp>\\n    <div class=\\\"content\\\">\\n\\n      <router-outlet></router-outlet>\\n\\n      <router-outlet name=\\\"aux\\\"></router-outlet>\\n\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\\n\"","export default \"\\n<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n\\n<div class=\\\"page-title-box\\\">\\n        \\n    <ol class=\\\"breadcrumb float-right\\\">\\n                \\n        <li class=\\\"breadcrumb-item\\\">\\n            <a href=\\\"javascript:void(0);\\\">Project</a>\\n        </li>\\n                <li class=\\\"breadcrumb-item active\\\">Customers</li>\\n            \\n    </ol>\\n        <h4 class=\\\"page-title\\\">Customers Detail</h4>\\n    \\n</div>\\n<!-- End page title box -->\\n\\n<div class=\\\"row\\\">\\n        \\n    <div class=\\\"col-xl-12\\\">\\n                \\n        <div class=\\\"card-box\\\">\\n                        <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n                        \\n            <form #customerForm=\\\"ngForm\\\" *ngIf=\\\"customer\\\" class=\\\"form-horizontal\\\">\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{customer.id || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"name\\\">\\n                                                    Name <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"string\\\" required [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                        \\n                    <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"phone\\\">\\n                                                    Phone <span style=\\\"color:red\\\">*</span>\\n                                                \\n                    </label>\\n                                                                                                                   \\n                    <div class=\\\"col-sm-10\\\">\\n                                                                                        <input type=\\\"tel\\\" required [(ngModel)]=\\\"customer.phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n                    </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"accessToken\\\">                                    AccessToken                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{customer.accessToken || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                                           \\n                <div class=\\\"form-group row\\\">\\n                                                                            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isActivated\\\">                                    Is Activated                                </label>\\n                                                                                                                           <div class=\\\"col-sm-10\\\">                            {{customer.isActivated || 'n/a'}}                                                                                                        </div>\\n                                        \\n                </div>\\n                                                \\n                <div class=\\\"row\\\">\\n                                        \\n                    <div class=\\\"col-sm-6 text-left\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"customerForm.invalid\\\">Save</button>\\n                    </div>\\n                                        \\n                    <div class=\\\"col-sm-6 text-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n                    </div>\\n                                    \\n                </div>\\n                            \\n            </form>\\n                    \\n        </div>\\n        <!-- end card-->\\n            \\n    </div>\\n    <!-- end col -->\\n    \\n</div>\\n<!-- end row -->\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Customers</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Customers List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <!-- <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Phone:</label>\\n          <input [(ngModel)]=\\\"filter.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n        </div> -->\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../customer', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"customerList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Phone</th>\\n            <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">AccessToken</th> -->\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Is Activated</th>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of customerList | paginate: { itemsPerPage: 10, currentPage: p, totalItems: customerList.length } \\\" [class.active]=\\\"item === selectedCustomer\\\">\\n          \\n            <td>{{item.id}}</td>\\n                                    <td>{{item.name}}</td>\\n                                    <td>{{item.phone}}</td>\\n                                    <!-- <td>{{item.accessToken}}</td> -->\\n                                    <td>{{item.isActivated}}</td>\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../customer', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n\\n      </table>\\n\\n      <pagination-controls class=\\\"pagination-controls\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>    \\n        \\n    </div>\\n  </div>\\n  \\n  \"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Dashboard</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Welcome To Kello </h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      \\n      <p>Kello is an online fruit & vegetable delivery service.</p>\\n\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"dashboardList.feedbacks\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Stats </h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n    \\n    \\n    <section class=\\\"statistics\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"box\\\">\\n              <i class=\\\"fa fa-envelope fa-fw bg-primary\\\"></i>\\n              <div class=\\\"info\\\">\\n                <h3>{{dashboardList.feedbacks.count}}</h3> <span>Feedbacks</span>\\n                <p>Total feedback received</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"box\\\">\\n              <i class=\\\"fa fa-file fa-fw danger\\\"></i>\\n              <div class=\\\"info\\\">\\n                <h3>{{dashboardList.orders.count}}</h3> <span>orders</span>\\n                <p>Total order placed</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"box\\\">\\n              <i class=\\\"fa fa-users fa-fw success\\\"></i>\\n              <div class=\\\"info\\\">\\n                <h3>{{dashboardList.users.count}}</h3> <span>Users</span>\\n                <p>Total users in the system</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n\\n   </div>\\n\\n  </div>\\n  \"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Flight</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Flight Detail</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n    <form *ngIf=\\\"flight\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"id\\\">Id</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"flight.id\\\" id=\\\"id\\\" name=\\\"id\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"from\\\">From</label>\\n        <input [(ngModel)]=\\\"flight.from\\\" id=\\\"from\\\" name=\\\"from\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"to\\\">To</label>\\n        <input [(ngModel)]=\\\"flight.to\\\" id=\\\"to\\\" name=\\\"to\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"date\\\">Date</label>\\n        <input type=\\\"date\\\" [(ngModel)]=\\\"flight.date\\\" id=\\\"date\\\" name=\\\"date\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Flight</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Flight List</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <form #f=\\\"ngForm\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"from\\\">From:</label>\\n        <input [(ngModel)]=\\\"filter.from\\\" id=\\\"from\\\" name=\\\"from\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"to\\\">To:</label>\\n        <input [(ngModel)]=\\\"filter.to\\\" id=\\\"to\\\" name=\\\"to\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n      <a [routerLink]=\\\"['../flights', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"flightList.length > 0\\\">\\n  <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">From</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">To</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Date</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of flightList\\\" [class.active]=\\\"item === selectedFlight\\\">\\n        \\n          <td>{{item.id}}</td>\\n          <td>{{item.from}}</td>\\n          <td>{{item.to}}</td>\\n          <td>{{item.date | date}}</td>\\n          <td style=\\\"white-space: nowrap\\\">\\n            <a [routerLink]=\\\"['../flights', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n            <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h1 class=\\\"title\\\">Welcome {{userName}}</h1>\\n  </div>\\n  <div class=\\\"content\\\">\\n\\n    <div *ngIf=\\\"needsLogin\\\" class=\\\"alert alert-warning\\\">\\n      You have been redirected to this page because you don't have the necessary\\n      rights for the reqeusted action. Login with a respective user account!\\n    </div>\\n\\n    <button (click)=\\\"login()\\\" class=\\\"btn btn-default\\\">Login</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-default\\\">Logout</button>\\n\\n    <!--\\n    <tabbed-pane [activeId]=\\\"0\\\">\\n        <tab title=\\\"Booked\\\" [id]=\\\"0\\\">\\n            This page could display all booked passengers ...\\n        </tab>\\n        <tab title=\\\"Checked in\\\" [id]=\\\"1\\\">\\n            This page could display all checked in passengers ...\\n        </tab>\\n\\n        <tab title=\\\"Boarded\\\" [id]=\\\"2\\\">\\n            This page could display all boarded passengers ...\\n        </tab>\\n    </tabbed-pane>\\n    -->\\n  </div>\\n\\n</div>\\n\\n\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Hotel</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Hotel Detail</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n    <form *ngIf=\\\"hotel\\\" #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n    \\n      <div class=\\\"form-group\\\">\\n        <label>Id</label>\\n        {{hotel.id || 'n/a'}} \\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Name</label>\\n        <input [(ngModel)]=\\\"hotel.name\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"city\\\">City</label>\\n        <input [(ngModel)]=\\\"hotel.city\\\" id=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"stars\\\">Stars</label>\\n        <input [(ngModel)]=\\\"hotel.stars\\\" id=\\\"stars\\\" name=\\\"stars\\\" class=\\\"form-control\\\">\\n      </div>\\n    \\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n  <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n  <li class=\\\"breadcrumb-item active\\\">Hotel</li>\\n</ol>\\n<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h2 class=\\\"title\\\">Hotel List</h2>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <form #f=\\\"ngForm\\\">\\n      \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"city\\\">City:</label>\\n        <input [(ngModel)]=\\\"filter.city\\\" id=\\\"city\\\" name=\\\"city\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n      <a [routerLink]=\\\"['../hotels', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"card\\\" *ngIf=\\\"hotelList.length > 0\\\">\\n  <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">City</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Stars</th>\\n          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of hotelList\\\" [class.active]=\\\"item === selectedHotel\\\">\\n        \\n          <td>{{item.id}}</td>\\n          <td>{{item.name}}</td>\\n          <td>{{item.city}}</td>\\n          <td>{{item.stars}}</td>\\n          <td style=\\\"white-space: nowrap\\\">\\n            <a [routerLink]=\\\"['../hotels', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n            <button (click)=\\\"delete(item)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"<!-- <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Login</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Login</li>\\n  </ol> -->\\n  <!-- <div class=\\\"card \\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Login</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <div *ngIf=\\\"feedback\\\" class=\\\"alert alert-{{feedback.type}}\\\">{{ feedback.message }}</div>\\n      <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n      \\n      \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"phone\\\">Username</label>\\n          <input [(ngModel)]=\\\"login.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\" class=\\\"form-control\\\">\\n        </div>\\n      \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input [(ngModel)]=\\\"login.password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n        </div>\\n      \\n      \\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Login</button>\\n        \\n      </form>\\n    </div>\\n  </div> -->\\n \\n\\n  <div class=\\\"container login-container\\\" style=\\\"padding-left:25%\\\">\\n    <div class=\\\"logo\\\" style=\\\"padding-left: 115px;\\\">\\n            \\n      <a class=\\\"simple-text\\\">\\n                \\n          <div class=\\\"logo-img\\\">\\n                      <img src=\\\"../../assets/img/Kello_title_logo.png\\\" alt=\\\"\\\" style=\\\"width: 150px;\\n                      height: 200px;\\n                      padding-top: 50px;\\\">      \\n          </div>\\n                    \\n      </a>\\n        \\n  </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 login-form-1\\\">\\n            <!-- <h3>Kello </h3> -->\\n            <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"phone\\\">Username</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"login.username\\\" id=\\\"username\\\" name=\\\"username\\\"  class=\\\"form-control\\\" placeholder=\\\" Username *\\\" value=\\\"\\\" />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Password</label>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"login.password\\\" id=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Your Password *\\\" value=\\\"\\\" />\\n                </div>\\n                \\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editForm.form.valid\\\">Login</button>  \\n                  <a id=\\\"shopping_button\\\" [routerLink]=\\\"['../shopping', 'shopping' ]\\\" class=\\\"btn btn-primary\\\" >Shopping</a>  \\n                    \\n                </div>\\n                <!-- <div class=\\\"form-group\\\">\\n                    <a href=\\\"#\\\" class=\\\"ForgetPwd\\\">Forget Password?</a>\\n                </div> -->\\n            </form>\\n        </div>\\n       \\n    </div>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-default \\\">\\n  <div class=\\\"container-fluid \\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar bar1\\\"></span>\\n        <span class=\\\"icon-bar bar2\\\"></span>\\n        <span class=\\\"icon-bar bar3\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">Kello</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse \\\">\\n      <ul class=\\\"nav navbar-nav navbar-right \\\">\\n        <!-- <li>\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"ti-panel\\\"></i>\\n            <p>Stats</p>\\n          </a>\\n        </li> -->\\n        <li class=\\\"\\\">\\n          <a href=\\\"javascript:void(0)\\\" >\\n            <i class=\\\"ti-bell\\\"></i>\\n            <p class=\\\"notification\\\">5</p>\\n            <p>Notifications</p>\\n            <!-- <b class=\\\"caret\\\"></b> -->\\n          </a>\\n          \\n        </li>\\n        <li>\\n          <a href=\\\"javascript:void(0)\\\" >\\n            <i class=\\\"ti-user\\\"></i>\\n            <!-- <p>Profile</p> -->\\n            <select class=\\\"selectBox\\\" (change)=\\\"ProfileDropDownHandler($event.target.value)\\\" >\\n              <option >Profile</option>\\n              <option disabled>_________</option>\\n              <option >Settings</option>\\n              <option disabled>_________</option>\\n              <option>Logout</option>\\n            </select>\\n          </a>\\n        </li>\\n\\n         <!-- Dropdown -->\\n         <!-- <li class=\\\"nav-item dropdown\\\" dropdown>\\n          <a dropdownToggle mdbWavesEffect type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n          Basic dropdown<span class=\\\"caret\\\"></span></a>\\n          <div *dropdownMenu class=\\\"dropdown-menu dropdown dropdown-primary\\\" role=\\\"menu\\\">\\n              <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\">Action</a>\\n              <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\">Another action</a>\\n              <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\">Something else here</a>\\n              <div class=\\\"divider dropdown-divider\\\"></div>\\n              <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\">Separated link</a>\\n          </div>\\n      </li> -->\\n      \\n      \\n      </ul>\\n\\n    </div>\\n\\n   \\n\\n  </div>\\n</nav>\\n\"","export default \"<!-- Page title box -->\\n<div class=\\\"page-title-alt-bg\\\"></div>\\n<div class=\\\"page-title-box\\\">\\n   <ol class=\\\"breadcrumb float-right\\\">\\n      <li class=\\\"breadcrumb-item\\\">\\n         <a href=\\\"javascript:void(0);\\\">Project</a>\\n      </li>\\n      <li class=\\\"breadcrumb-item active\\\">Products</li>\\n   </ol>\\n   <h4 class=\\\"page-title\\\">Products Detail</h4>\\n</div>\\n<!-- End page title box -->\\n<div class=\\\"row\\\">\\n   <div class=\\\"col-xl-12\\\">\\n      <div class=\\\"card-box\\\">\\n         <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n         <form #productForm=\\\"ngForm\\\" *ngIf=\\\"product\\\" class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"id\\\">                                    Id                                </label>\\n               <div class=\\\"col-sm-10\\\">                            {{product.id || 'n/a'}}                                                                                                        </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"eng_title\\\">\\n               Eng Title <span style=\\\"color:red\\\">*</span>\\n               </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"string\\\" required [(ngModel)]=\\\"product.eng_title\\\" name=\\\"eng_title\\\" #eng_title=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"urdu_title\\\">\\n               Urdu Title <span style=\\\"color:red\\\">*</span>\\n               </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"string\\\" required [(ngModel)]=\\\"product.urdu_title\\\" name=\\\"urdu_title\\\" #urdu_title=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                                            \\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"quentityOnHand\\\">                            Quentity On Hand                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"number\\\" readonly [(ngModel)]=\\\"product.quentityOnHand\\\" name=\\\"quentityOnHand\\\" #quentityOnHand=\\\"ngModel\\\" class=\\\"form-control\\\">                            \\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">                            Buying Price Unit                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <select [(ngModel)]=\\\"product.buyingPriceUnitsId\\\" name=\\\"buyingPriceUnitsId\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                  </select>\\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"buyingPrice\\\">                            Buying Price                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"product.buyingPrice\\\" name=\\\"buyingPrice\\\" #buyingPrice=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                        \\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">                            Sale Price Unit                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <select [(ngModel)]=\\\"product.salePriceUnitsId\\\" name=\\\"salePriceUnitsId\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                  </select>\\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"salePrice\\\">                            Sale Price                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"product.salePrice\\\" name=\\\"buyingPrice\\\" #salePrice=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                        \\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"unitsId\\\">                            Retail Price Unit                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <select [(ngModel)]=\\\"product.retailPiceUnitsId\\\" name=\\\"retailPiceUnitsId\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let c of unitsId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.unitDisplayName }}</option>\\n                  </select>\\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"retailPrice\\\">                            Retail Price                         </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"number\\\" [(ngModel)]=\\\"product.retailPrice\\\" name=\\\"buyingPrice\\\" #retailPrice=\\\"ngModel\\\" class=\\\"form-control\\\">                                                                                        \\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"producttypesId\\\">\\n               Product Type <span style=\\\"color:red\\\">*</span>\\n               </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <select required [(ngModel)]=\\\"product.producttypesId\\\" name=\\\"producttypesId\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let c of producttypesId_list\\\" value=\\\"{{ c.id }}\\\">{{ c.typeName }}</option>\\n                  </select>\\n               </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"description\\\">        \\n                                       Description                         </label>\\n                <div class=\\\"col-sm-10\\\">\\n                   <textarea [(ngModel)]=\\\"product.description\\\" name=\\\"description\\\" #description=\\\"ngModel\\\" class=\\\"form-control\\\"> \\n                       </textarea>                                                                                       \\n                </div>\\n             </div>\\n\\n             <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"isAvailable\\\">        \\n                  Is Available      </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"product.isAvailable\\\" name=\\\"isAvailable\\\" #isAvailable=\\\"ngModel\\\" class=\\\"form-control\\\" /> \\n                                                                                                         \\n               </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"displayingPeriority\\\">\\n                  Displaying Periority <span style=\\\"color:red\\\">*</span>\\n               </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <select required [(ngModel)]=\\\"product.displayingPeriority\\\" name=\\\"displayingPeriority\\\" class=\\\"form-control\\\">\\n                  <option *ngFor=\\\"let c of displayingPeriority_list\\\" value=\\\"{{ c.value }}\\\">{{ c.id }}</option>\\n                  </select>\\n               </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n               <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"image\\\">\\n               Image <span style=\\\"color:red\\\">*</span>\\n               </label>\\n               <div class=\\\"col-sm-10\\\">\\n                  <input type=\\\"file\\\" required accept=\\\"image/*\\\" (change)=\\\"changeImageListener($event)\\\">\\n                  <img [src]=\\\"product.image\\\" style=\\\"width:100px; height:100px\\\"/>                                                                        \\n               </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n               <div class=\\\"col-sm-6 text-left\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success w-md\\\"  (click)=\\\"save()\\\" [disabled]=\\\"productForm.invalid\\\">Save</button>\\n               </div>\\n               <div class=\\\"col-sm-6 text-right\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary w-md\\\"  (click)=\\\"cancel()\\\">Cancel</button>\\n               </div>\\n            </div>\\n         </form>\\n      </div>\\n      <!-- end card-->\\n   </div>\\n   <!-- end col -->\\n</div>\\n<!-- end row -->\"","export default \"<ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Products</li>\\n  </ol>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <h2 class=\\\"title\\\">Products List</h2>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"eng_title\\\">Eng Title:</label>\\n          <input [(ngModel)]=\\\"filter.eng_title\\\" id=\\\"eng_title\\\" name=\\\"eng_title\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../product', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\"productList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Id</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Eng Title</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Urdu Title</th>\\n                                          <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product Type</th> -->\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Quentity On Hand</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Buying Price</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Sale Price</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Retail Price</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Image</th>\\n                                          <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of productList | paginate: { itemsPerPage: 10, currentPage: p, totalItems: productList.length } \\\" [class.active]=\\\"item === selectedProduct\\\">\\n          \\n            <td>{{item.id}}</td>\\n                                    <td>{{item.eng_title}}</td>\\n                                    <td>{{item.urdu_title}}</td>\\n                                    <!-- <td>{{item.producttypesId}}</td> -->\\n                                    <td>{{item.quentityOnHand}}</td>\\n                                    <td>{{item.buyingPrice}}</td>\\n                                    <td>{{item.salePrice}}</td>\\n                                    <td>{{item.retailPrice}}</td>\\n                                    <td>\\n                                        <img src=\\\"{{item.imageUrl}}\\\" required style=\\\"width:50px; height:50px\\\"/>\\n                                    </td>\\n            \\n            <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../product', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <pagination-controls class=\\\"pagination-controls\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>  \\n\\n    </div>\\n  </div>\\n  \"","export default \"<!-- <ol class=\\\"breadcrumb float-right\\\">\\n    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n    <li class=\\\"breadcrumb-item active\\\">Products</li>\\n  </ol> -->\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <!-- <h2 class=\\\"title\\\"> Fruits</h2> -->\\n      <input type=\\\"radio\\\" (click)=\\\"getProductByType(2)\\\" checked=\\\"true\\\" id=\\\"fruits\\\" name=\\\"productType\\\" value=\\\"2\\\">\\n      <label style=\\\"margin: 10px;\\\" for=\\\"fruits\\\" class=\\\"title\\\">Fruits</label>\\n      <input type=\\\"radio\\\" (click)=\\\"getProductByType(1)\\\" id=\\\"vegetables\\\" name=\\\"productType\\\" value=\\\"1\\\">\\n      <label style=\\\"margin: 10px;\\\" for=\\\"vegetables\\\" class=\\\"title\\\">Vegetables</label>\\n\\n    </div>\\n    <!-- <div class=\\\"content\\\">\\n      <form #f=\\\"ngForm\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"eng_title\\\">Eng Title:</label>\\n          <input [(ngModel)]=\\\"filter.eng_title\\\" id=\\\"eng_title\\\" name=\\\"eng_title\\\" class=\\\"form-control\\\">\\n        </div>\\n        \\n        <button (click)=\\\"search()\\\" [disabled]=\\\"!f?.valid\\\" class=\\\"btn btn-primary\\\">Search</button>\\n        <a [routerLink]=\\\"['../product', 'new' ]\\\" class=\\\"btn btn-default\\\">New</a>\\n      </form>\\n    </div> -->\\n  </div>\\n  \\n  <div class=\\\"card\\\" *ngIf=\\\" productList != undefined && productList.length > 0\\\">\\n    <p *ngIf=\\\"errors\\\">{{ errors }}</p>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-centered table-hover mb-0\\\" id=\\\"datatable\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Product</th>\\n            <!-- <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Name</th> -->\\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\">Price</th> \\n                                          \\n            <th class=\\\"border-top-0\\\" scope=\\\"col\\\" style=\\\"width:120px\\\"></th>\\n\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let item of productList | paginate: { itemsPerPage: 10, currentPage: p, totalItems: productList.length } \\\" [class.active]=\\\"item === selectedProduct\\\">\\n          \\n            <td>\\n              <img src=\\\"{{item.imageUrl}}\\\" required style=\\\"width:50px; height:50px\\\"/>\\n              {{item.displayName}} \\n          </td>\\n           <!-- <td>{{item.displayName}}</td>   -->                     \\n            <td>{{item.retailPrice}} / {{unitsId_list[item.retailPiceUnitsId]}} </td> \\n                                   \\n            \\n            <!-- <td style=\\\"white-space: nowrap\\\">\\n              <a [routerLink]=\\\"['../product', item.id ]\\\" class=\\\"btn btn-secondary\\\">Edit</a>&nbsp;\\n              <button (click)=\\\"delete(item)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\n            </td> -->\\n          </tr>\\n        </tbody>\\n      </table>\\n\\n      <pagination-controls class=\\\"pagination-controls\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>  \\n\\n    </div>\\n  </div>\\n  \"","export default \"\\n<div class=\\\"sidebar-wrapper\\\">\\n      \\n    <div class=\\\"logo\\\">\\n            \\n        <a class=\\\"simple-text\\\">\\n                  \\n            <div class=\\\"logo-img\\\" >\\n                        <img src=\\\"../../assets/img/Kello_title_logo.png\\\" alt=\\\"\\\">      \\n            </div>\\n                  Kello    \\n        </a>\\n          \\n    </div>\\n      \\n    <ul class=\\\"nav\\\">\\n            \\n        <li>\\n                  \\n            <a routerLink=\\\"dashboard\\\">\\n                        <i class=\\\"ti-home\\\"></i>\\n                        <p>Dashboard</p>\\n                      \\n            </a>\\n                \\n        </li>\\n            \\n        <!-- <li>      <a routerLink=\\\"flight\\\">        <i class=\\\"ti-arrow-top-right\\\"></i>        <p>Flights</p>      </a>    </li> -->\\n        \\n        <li>\\n              \\n          <a routerLink=\\\"activation\\\">\\n                  <i class=\\\"ti-lock\\\"></i>\\n                  <p>Activations</p>\\n                \\n          </a>\\n          \\n      </li>\\n\\n        <li>\\n              \\n            <a routerLink=\\\"customer\\\">\\n                    <i class=\\\"ti-user\\\"></i>\\n                    <p>Customers</p>\\n                  \\n            </a>\\n            \\n        </li>\\n        \\n        <li>\\n              \\n            <a routerLink=\\\"partner\\\">\\n                    <i class=\\\"ti-wheelchair\\\"></i>\\n                    <p>Partners</p>\\n                  \\n            </a>\\n            \\n        </li>\\n\\n        <li>\\n              \\n          <a routerLink=\\\"orderses\\\">\\n                  <i class=\\\"ti-receipt\\\"></i>\\n                  <p>Orders</p>\\n                \\n          </a>\\n          \\n      </li>\\n        \\n        <li>\\n              \\n            <a routerLink=\\\"product\\\">\\n                    <i class=\\\"ti-apple\\\"></i>\\n                    <p>Products</p>\\n                  \\n            </a>\\n            \\n        </li>\\n\\n        <li>\\n            <a routerLink=\\\"priceplans\\\">\\n                    <i class=\\\"ti-gift\\\"></i>\\n                    <p>Price Plan</p>      \\n            </a>\\n        </li>\\n\\n                        \\n        <!-- <li>\\n              \\n            <a routerLink=\\\"offer\\\">\\n                    <i class=\\\"ti-panel\\\"></i>\\n                    <p>Offers</p>\\n                  \\n            </a>\\n            \\n        </li> -->\\n        \\n        <li>\\n            <a routerLink=\\\"supply\\\">\\n                    <i class=\\\"ti-truck\\\"></i>\\n                    <p>Supplies</p>      \\n            </a>\\n        </li>\\n\\n        <li>\\n            <a routerLink=\\\"customerfeedbacks\\\">\\n                    <i class=\\\"ti-comments\\\"></i>\\n                    <p>FeedBack</p>  \\n            </a>\\n        </li>\\n\\n        <li>\\n            <a routerLink=\\\"orderratings\\\">\\n                    <i class=\\\"ti-bar-chart\\\"></i>\\n                    <p>Order Ratings</p>      \\n            </a>\\n        </li>\\n\\n        <li>\\n            <a routerLink=\\\"promotions\\\">\\n                    <i class=\\\"ti-alarm-clock\\\"></i>\\n                    <p>Offers/Promotions</p>      \\n            </a>\\n        </li>\\n\\n        <li>\\n            <a routerLink=\\\"configurations\\\">\\n                    <i class=\\\"ti-settings\\\"></i>\\n                    <p>Configurations</p>      \\n            </a>\\n        </li>\\n\\n        <!-- <li>\\n              \\n          <a routerLink=\\\"rateplan\\\">\\n                  <i class=\\\"ti-money\\\"></i>\\n                  <p>Rate plans</p>  \\n          </a>\\n      </li> -->\\n            \\n        <!--    <li>        <a routerLink=\\\"passenger-search\\\">            <i class=\\\"ti-user\\\"></i>            <p>Passengers</p>        </a>    </li>-->\\n            \\n        <!--        <li routerLinkActive=\\\"active\\\">        <a>            <i class=\\\"ti-close\\\"></i>            <p>Hide Basket</p>        </a>        </li>    -->\\n          \\n    </ul>\\n    \\n</div>\\n\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n/**\n * Add AuthInterceptor that will intercept all your http requests and add the token to its headers:\n * \n */\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, from, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map, catchError, take, tap } from 'rxjs/operators';\n\n//import { CustomDialogComponent} from './modals/custom-dialog.component';\nimport { ModalService} from '../modals/modal.service';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  messageResult: boolean;\n\n  constructor(private router: Router, private modalService: ModalService){}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n  //  const token = localStorage.token; // you probably want to store it in localStorage or something\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    \n\n    if (!currentUser || !currentUser.access_token) {\n      return next.handle(req)\n      .pipe(\n        tap(event => this.checkAnyError(event)),\n        catchError((err: HttpErrorResponse) => {\n          this.showErrorDialog(err)\n          this.handleError(err)\n          return throwError (err)\n        })\n        )\n        \n    }\n\n    const req1 = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${currentUser.access_token}`),\n    });\n\n    return next.handle(req1)\n    .pipe(\n      tap(event => this.checkAnyError(event)),\n       catchError((err: HttpErrorResponse)  =>  {\n        this.showErrorDialog(err)\n        this.handleError(err)\n        return throwError (`${err.message} [${err.name}]`)\n      })\n      )\n  }\n\n  checkAnyError(event: any){\n    //console.log('checkAnyError', event);\n    if(event.body && event.body.error){\n      let error = event.body.error;\n      //throwError (`${error.message} [${error.name}]`);\n      this.showErrorDialog({error});\n      \n    }\n\n  }\n\n  handleError(err){\n    if (err.status == 401) {\n      console.log(err.statusText);   \n      localStorage.removeItem('currentUser');\n      this.router.navigate(['/login'])     \n    }\n    return err\n  }\n\n  showErrorDialog(err: any){\n    console.error(err);\n    let error = err;\n    if(err && err.error && err.error.error){\n      error = err.error.error;\n    }else if(err.error){\n      error = err.error;\n    }\n\n    return alert(`${err.message || ''} [${err.name || ''}] \\n ${error.message || ''} [${error.code || '' }] `)\n\n   \n  }\n\n\n\n}","export default \".loading-indicator {\\n  position: fixed;\\n  left: 0px;\\n  top: 0px;\\n  width: 100%;\\n  height: 100%;\\n  background-color: black;\\n  opacity: 0.3;\\n}\\n\\n.spinner {\\n  width: 40px;\\n  height: 40px;\\n\\n  position: relative;\\n  margin: 100px auto;\\n}\\n\\n.double-bounce1, .double-bounce2 {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 50%;\\n  background-color: #FFF;\\n  opacity: 0.6;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n\\n  -webkit-animation: sk-bounce 2.0s infinite ease-in-out;\\n  animation: sk-bounce 2.0s infinite ease-in-out;\\n}\\n\\n.double-bounce2 {\\n  -webkit-animation-delay: -1.0s;\\n  animation-delay: -1.0s;\\n}\\n\\n@-webkit-keyframes sk-bounce {\\n  0%, 100% {\\n    -webkit-transform: scale(0.0)\\n  }\\n  50% {\\n    -webkit-transform: scale(1.0)\\n  }\\n}\\n\\n@keyframes sk-bounce {\\n  0%, 100% {\\n    transform: scale(0.0);\\n    -webkit-transform: scale(0.0);\\n  }\\n  50% {\\n    transform: scale(1.0);\\n    -webkit-transform: scale(1.0);\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsU0FBUztFQUNULFFBQVE7RUFDUixXQUFXO0VBQ1gsWUFBWTtFQUNaLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTs7RUFFWixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87O0VBRVAsc0RBQXNEO0VBQ3RELDhDQUE4QztBQUNoRDs7QUFFQTtFQUNFLDhCQUE4QjtFQUM5QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRTtJQUNFO0VBQ0Y7RUFDQTtJQUNFO0VBQ0Y7QUFDRjs7QUFFQTtFQUNFO0lBQ0UscUJBQXFCO0lBQ3JCLDZCQUE2QjtFQUMvQjtFQUNBO0lBQ0UscUJBQXFCO0lBQ3JCLDZCQUE2QjtFQUMvQjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9hZGluZy1pbmRpY2F0b3Ige1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDBweDtcbiAgdG9wOiAwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBvcGFjaXR5OiAwLjM7XG59XG5cbi5zcGlubmVyIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcblxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMTAwcHggYXV0bztcbn1cblxuLmRvdWJsZS1ib3VuY2UxLCAuZG91YmxlLWJvdW5jZTIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7XG4gIG9wYWNpdHk6IDAuNjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG5cbiAgLXdlYmtpdC1hbmltYXRpb246IHNrLWJvdW5jZSAyLjBzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xuICBhbmltYXRpb246IHNrLWJvdW5jZSAyLjBzIGluZmluaXRlIGVhc2UtaW4tb3V0O1xufVxuXG4uZG91YmxlLWJvdW5jZTIge1xuICAtd2Via2l0LWFuaW1hdGlvbi1kZWxheTogLTEuMHM7XG4gIGFuaW1hdGlvbi1kZWxheTogLTEuMHM7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzay1ib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuMClcbiAgfVxuICA1MCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjApXG4gIH1cbn1cblxuQGtleWZyYW1lcyBzay1ib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwLjApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjApO1xuICB9XG59XG4iXX0= */\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'flight-app',\n  //templateUrl: './app.component.html',\n  template: `\n  <router-outlet></router-outlet>\n`,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n","import { FlightModule } from './flight/flight.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {AuthInterceptor} from './AuthInterceptor/AuthInterceptor'\nimport { NgHttpLoaderModule } from 'ng-http-loader';\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { APP_EXTRA_OPTIONS, APP_ROUTES } from './app.routes';\nimport { HomeComponent } from './home/home.component';\nimport {HomeLayoutComponent} from './layouts/home-layout.component';\nimport {LoginLayoutComponent} from './layouts/login-layout.component';\nimport {ShoppingLayoutComponent} from './layouts/shopping-layout.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { HotelModule } from './hotel/hotel.module';\n\nimport { CustomerModule } from './customer/customer.module';\n\nimport { ProductModule } from './product/product.module';\n\n\n\nimport { LoginModule } from './login/login.module';\nimport { ShoppingModule } from './shopping/shopping.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n//import { CustomDialogComponent} from './modal/custom-dialog.component';\n//import {ConfirmDialogComponent} from './modals/confirm-dialog.component';\n//import { InputDialogComponent} from './modals/input-dialog.component';\nimport { MessageDialogComponent} from './modals/message-dialog.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n\n@NgModule({\n  imports: [\n\n    BrowserModule,\n    HttpClientModule,\n    NgHttpLoaderModule.forRoot(),\n    NgbModule.forRoot(),\n    NgxPaginationModule,\n    FlightModule,\n    RouterModule.forRoot([...APP_ROUTES], {...APP_EXTRA_OPTIONS}),\n\n    HotelModule,\n    CustomerModule,\n    ProductModule,\n    LoginModule,\n    ShoppingModule,\n\n    DashboardModule,\n\n    \n    \n  ],\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginLayoutComponent,\n    HomeLayoutComponent,\n    ShoppingLayoutComponent,\n    MessageDialogComponent,\n\n  ],\n  entryComponents: [\n    //ConfirmDialogComponent,\n    //InputDialogComponent,\n    MessageDialogComponent,\n  ],\n  providers: [\n    \n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  //entryComponents: [AlertDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ExtraOptions, Routes, PreloadAllModules} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {LoginComponent} from './login/login.component';\nimport {HomeLayoutComponent} from './layouts/home-layout.component';\nimport {LoginLayoutComponent} from './layouts/login-layout.component';\nimport {ShoppingLayoutComponent} from './layouts/shopping-layout.component';\nimport {ShoppingComponent} from './shopping/shopping.component';\nimport {DashboardListComponent} from './dashboard/dashboard-list/dashboard-list.component';\n\nexport const APP_ROUTES: Routes = [\n  // {\n  //   path: '',\n  //   redirectTo: 'login',\n  //   pathMatch: 'full'\n  // },\n  // {\n  //   path: 'home',\n  //   component: HomeLayoutComponent,\n  //   children: [\n  //     {\n  //       path: 'dashboard',\n  //       component: DashboardListComponent\n  //     }\n  //   ]\n  // },\n  // {\n  //   path: 'login',\n  //   component: LoginLayoutComponent,\n  //   //component: LoginComponent,\n  //   children: [\n  //     {\n  //       path: 'login',\n  //       component: LoginComponent\n  //     }\n  //   ]\n  // },\n  {\n    path: 'shopping',\n    component: ShoppingLayoutComponent,\n    children: [\n      {\n        path: 'shopping',\n        component: ShoppingComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'shopping'\n  }\n]\n\nexport const APP_EXTRA_OPTIONS: ExtraOptions = {\n  preloadingStrategy: PreloadAllModules\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'customer-edit',\n  templateUrl: './customer-edit.component.html'\n})\nexport class CustomerEditComponent implements OnInit {\n\n    id: string;\n    customer: Customer;\n    errors: string;\n    \n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private customerService: CustomerService) { \n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Customer());\n                    return this.customerService.findById(id)\n                })\n            )\n            .subscribe(\n                customer => { \n                    this.customer = customer; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n    }\n\n    save() {\n        this.customerService.save(this.customer).subscribe(\n            customer => { \n                this.customer = customer; \n                this.errors = 'Save was successful!'; \n                setTimeout(() => {\n                    this.router.navigate(['/home/customer']);\n                }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/home/customer']);\n    }    \n}","export class CustomerFilter {\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { CustomerFilter } from '../customer-filter';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\n\n@Component({\n    selector: 'customer',\n    templateUrl: 'customer-list.component.html'\n})\nexport class CustomerListComponent {\n\n    filter = new CustomerFilter();\n    selectedCustomer: Customer;\n    errors = '';\n        \n    //config: any;\n    \n\n    get customerList(): Customer[] {\n        return this.customerService.customerList;\n    }\n\n    constructor(private customerService: CustomerService) {\n        // this.config = {\n        //     itemsPerPage: 5,\n        //     currentPage: 1,\n        //    // totalItems: this.collection.count\n        //   };\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    // pageChanged(event){\n    //     this.config.currentPage = event;\n    //   }\n\n    search(): void {\n        this.customerService.load(this.filter);\n    }\n\n    select(selected: Customer): void {\n        this.selectedCustomer = selected;\n    }\n\n    delete(customer: Customer): void {\n        if (confirm(\"Are you sure?\")) {\n            this.customerService.delete(customer).subscribe(\n                customer => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule, NO_ERRORS_SCHEMA,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\nimport { CustomerService } from './customer.service';\nimport { CUSTOMER_ROUTES } from './customer.routes';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(CUSTOMER_ROUTES),\n    NgxPaginationModule,\n  ],\n  declarations: [\n    CustomerListComponent,\n    CustomerEditComponent\n  ],\n  providers: [\n    CustomerService\n  ],\n  exports: [\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class CustomerModule { }\n","import { Routes } from '@angular/router';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerEditComponent } from './customer-edit/customer-edit.component';\nimport {HomeLayoutComponent} from '../layouts/home-layout.component';\n\nexport const CUSTOMER_ROUTES: Routes = [\n  {\n    path: 'home',\n    component: HomeLayoutComponent,\n    children: [\n      {\n        path: 'customer',\n        component: CustomerListComponent\n      }\n    ]\n  },\n  {\n    path: 'home',\n    component: HomeLayoutComponent,\n    children: [\n      {\n        path: 'customer/:id',\n        component: CustomerEditComponent\n      }\n    ]\n  }\n]\n","import { Customer } from './customer';\nimport { CustomerFilter } from './customer-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class CustomerService {\n    \n    baseUrl = `http://127.0.0.1:3000/customers`;\n    constructor(private http: HttpClient) {\n    }\n\n    customerList: Customer[] = [];\n  \n    findById(id: string): Observable<Customer> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Customer>(url, {params, headers});\n    }\n    \n    load(filter: CustomerFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.customerList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: CustomerFilter): Observable<Customer[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n        };\n\n        return this.http.get<Customer[]>(url, {params, headers});\n    }\n\n    save(entity: Customer): Observable<Customer> {        \n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n\n        url = `${this.baseUrl}/authenticate`;\n        return this.http.post<Customer>(url, entity, {headers, params});\n\n        // if(entity.id) {\n        //     url = `${this.baseUrl}/${entity.id.toString()}`;\n        //     params = new HttpParams().set('ID', entity.id.toString());  \n        //     return this.http.put<Customer>(url, entity, {headers, params});\n        // }\n        // else {\n        //     url = `${this.baseUrl}/authenticate`;\n        //     return this.http.post<Customer>(url, entity, {headers, params});\n        // }        \n    }\n\n\n    delete(entity: Customer): Observable<Customer> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Customer>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Customer {\n    id: string;\n    name: string;\n    phone: string;\n    accessToken: string;\n    isActivated: string;    \n}","export class DashboardFilter {\n    phone: string = '';\n}","export default \"\\n/* Start statistics */\\n.statistics {\\n    margin-top: 25px;\\n    color: #CCC;\\n  }\\n.statistics .box {\\n    background-color: #313348;\\n    padding: 15px;\\n    overflow: hidden;\\n  }\\n.statistics .box > i {\\n    float: left;\\n    color: #FFF;\\n    border-radius: 50%;\\n    width: 60px;\\n    height: 60px;\\n    line-height: 60px;\\n    font-size: 22px;\\n  }\\n.statistics .box .info {\\n    float: left;\\n    width: auto;\\n    margin-left: 10px;\\n  }\\n.statistics .box .info h3 {\\n    margin: 5px 0 5px;\\n    display: inline-block;\\n  }\\n.statistics .box .info p {color:#BBB}\\n/* End statistics */\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC1saXN0L2Rhc2hib2FyZC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHFCQUFxQjtBQUNyQjtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7QUFDQTtJQUNFLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsZ0JBQWdCO0VBQ2xCO0FBQ0E7SUFDRSxXQUFXO0lBQ1gsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixlQUFlO0VBQ2pCO0FBQ0E7SUFDRSxXQUFXO0lBQ1gsV0FBVztJQUNYLGlCQUFpQjtFQUNuQjtBQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLHFCQUFxQjtFQUN2QjtBQUNBLDBCQUEwQixVQUFVO0FBRXBDLG1CQUFtQiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQtbGlzdC9kYXNoYm9hcmQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKiBTdGFydCBzdGF0aXN0aWNzICovXG4uc3RhdGlzdGljcyB7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICBjb2xvcjogI0NDQztcbiAgfVxuICAuc3RhdGlzdGljcyAuYm94IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzEzMzQ4O1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAuc3RhdGlzdGljcyAuYm94ID4gaSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBsaW5lLWhlaWdodDogNjBweDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbiAgLnN0YXRpc3RpY3MgLmJveCAuaW5mbyB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIH1cbiAgLnN0YXRpc3RpY3MgLmJveCAuaW5mbyBoMyB7XG4gICAgbWFyZ2luOiA1cHggMCA1cHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIC5zdGF0aXN0aWNzIC5ib3ggLmluZm8gcCB7Y29sb3I6I0JCQn1cbiAgXG4gIC8qIEVuZCBzdGF0aXN0aWNzICovXG4gICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { DashboardFilter } from '../dashboard-filter';\nimport { DashboardService } from '../dashboard.service';\nimport { Dashboard } from '../dashboard';\n\n\n@Component({\n    selector: 'dashboard',\n    templateUrl: 'dashboard-list.component.html',\n    styleUrls: ['dashboard-list.component.css']\n})\nexport class DashboardListComponent {\n\n    filter = new DashboardFilter();\n\n    errors = '';\n\n    get dashboardList(): Dashboard[] {\n        return this.dashboardService.dashboardList;\n    }\n\n    constructor(private dashboardService: DashboardService,\n        \n        ) {\n        \n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.dashboardService.load(this.filter);\n    }\n\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DashboardListComponent } from './dashboard-list/dashboard-list.component';\n\nimport { DashboardService } from './dashboard.service';\nimport { DASHBOARD_ROUTES } from './dashboard.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(DASHBOARD_ROUTES)\n  ],\n  declarations: [\n    DashboardListComponent,\n    \n  ],\n  providers: [\n    DashboardService\n  ],\n  exports: [\n  ]\n})\nexport class DashboardModule { }\n","import { Routes } from '@angular/router';\nimport { DashboardListComponent } from './dashboard-list/dashboard-list.component';\n\nimport {HomeLayoutComponent} from '../layouts/home-layout.component';\n\nexport const DASHBOARD_ROUTES: Routes = [\n  {\n    path: 'home',\n    component: HomeLayoutComponent,\n    children: [\n      {\n        path: 'dashboard',\n        component: DashboardListComponent\n      }\n    ]\n  },\n]\n","import { Dashboard } from './dashboard';\nimport { DashboardFilter } from './dashboard-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n//import {HttpHeaderService} from '../services/index'\n\n@Injectable()\nexport class DashboardService {\n    \n    baseUrl = `http://127.0.0.1:3000/dashboards`;\n    constructor(private http: HttpClient) {\n    }\n\n    dashboardList: Dashboard[] = [];\n  \n    findById(id: string): Observable<Dashboard> {\n        \n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n         let headers = new HttpHeaders()\n                             .set('Accept', 'application/json')\n                                    \n        return this.http.get<Dashboard>(url, {params, headers});\n    }\n    \n    load(filter: DashboardFilter): void {\n        \n        this.find(filter).subscribe(\n            result => {\n                this.dashboardList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: DashboardFilter): Observable<Dashboard[]> {\n        let url = `${this.baseUrl}/stats`;      \n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n          //  \"phone\": filter.phone,\n        };\n\n        return this.http.get<Dashboard[]>(url, {params, headers});\n    }\n    \n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../flight';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-flight-edit',\n  templateUrl: './flight-edit.component.html'\n})\nexport class FlightEditComponent implements OnInit {\n\n  id: string;\n  flight: Flight;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private flightService: FlightService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Flight()); }\n          return this.flightService.findById(id);\n        })\n      )\n      .subscribe(flight => {\n          this.flight = flight;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error loading'};\n        }\n      );\n  }\n\n  save() {\n    this.flightService.save(this.flight).subscribe(\n      flight => {\n        this.flight = flight;\n        this.feedback = {type: 'success', message: 'Save was successful!'};\n        setTimeout(() => {\n          this.router.navigate(['/flights']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: 'Error saving'};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/flights']);\n  }\n}\n","export class FlightFilter {\n    from = '';\n    to = '';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FlightFilter } from '../flight-filter';\nimport { FlightService } from '../flight.service';\nimport { Flight } from '../flight';\n\n@Component({\n  selector: 'app-flight',\n  templateUrl: 'flight-list.component.html'\n})\nexport class FlightListComponent implements OnInit {\n\n  filter = new FlightFilter();\n  selectedFlight: Flight;\n  feedback: any = {};\n\n  get flightList(): Flight[] {\n    return this.flightService.flightList;\n  }\n\n  constructor(private flightService: FlightService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.flightService.load(this.filter);\n  }\n\n  select(selected: Flight): void {\n    this.selectedFlight = selected;\n  }\n\n  delete(flight: Flight): void {\n    if (confirm('Are you sure?')) {\n      this.flightService.delete(flight).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Delete was successful!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error deleting.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FlightListComponent } from './flight-list/flight-list.component';\nimport { FlightEditComponent } from './flight-edit/flight-edit.component';\nimport { FlightService } from './flight.service';\nimport { FLIGHT_ROUTES } from './flight.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(FLIGHT_ROUTES)\n  ],\n  declarations: [\n    FlightListComponent,\n    FlightEditComponent\n  ],\n  providers: [FlightService],\n  exports: []\n})\nexport class FlightModule { }\n","import { Routes } from '@angular/router';\nimport { FlightListComponent } from './flight-list/flight-list.component';\nimport { FlightEditComponent } from './flight-edit/flight-edit.component';\n\nexport const FLIGHT_ROUTES: Routes = [\n  {\n    path: 'flights',\n    component: FlightListComponent\n  },\n  {\n    path: 'flights/:id',\n    component: FlightEditComponent\n  }\n];\n","import { Flight } from './flight';\nimport { FlightFilter } from './flight-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class FlightService {\n  flightList: Flight[] = [];\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Flight> {\n    const url = `http://www.angular.at/api/flight/${id}`;\n    const params = { 'id': id };\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n    return this.http.get<Flight>(url, {params, headers});\n  }\n\n  load(filter: FlightFilter): void {\n    this.find(filter).subscribe(result => {\n        this.flightList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: FlightFilter): Observable<Flight[]> {\n    const url = `http://www.angular.at/api/flight`;\n    const headers = new HttpHeaders().set('Accept', 'application/json');\n\n    const params = {\n      'from': filter.from,\n      'to': filter.to,\n    };\n\n    return this.http.get<Flight[]>(url, {params, headers});\n  }\n\n  save(entity: Flight): Observable<Flight> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Flight>(url, entity, {headers, params});\n    } else {\n      url = `http://www.angular.at/api/flight`;\n      return this.http.post<Flight>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Flight): Observable<Flight> {\n    let params = new HttpParams();\n    let url = '';\n    const headers = new HttpHeaders().set('content-type', 'application/json');\n    if (entity.id) {\n      url = `http://www.angular.at/api/flight/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Flight>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Flight {\n  id: number;\n  from: string;\n  to: string;\n  date: Date;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { LoginService } from '../login/login.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private loginService: LoginService,\n    ) {\n      // this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      // if(!this.currentUser || !this.currentUser.id || !this.currentUser.access_token){\n      //   this.router.navigate(['/login']);\n      // }\n\n      let url = this.loginService.getCurrentUser();\n      console.log('url: ', url);\n      \n      this.router.navigate([url || '/login'])    \n\n  }\n\n  needsLogin: boolean;\n  _userName: string = '';\n\n  ngOnInit() {\n    //this.needsLogin = !!this.route.snapshot.params['needsLogin'];\n   \n  }\n\n  get userName(): string {\n    return this._userName;\n  }\n\n  login(): void {\n    this._userName = 'Max';\n  }\n\n  logout(): void {\n    this._userName = '';\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HotelService } from '../hotel.service';\nimport { Hotel } from '../hotel';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-hotel-edit',\n  templateUrl: './hotel-edit.component.html'\n})\nexport class HotelEditComponent implements OnInit {\n\n  id: string;\n  hotel: Hotel;\n  feedback: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private hotelService: HotelService) {\n  }\n\n  ngOnInit() {\n    this\n      .route\n      .params\n      .pipe(\n        map(p => p.id),\n        switchMap(id => {\n          if (id === 'new') { return of(new Hotel()); }\n          return this.hotelService.findById(id);\n        })\n      )\n      .subscribe(hotel => {\n          this.hotel = hotel;\n          this.feedback = {};\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error loading'};\n        }\n      );\n  }\n\n  save() {\n    this.hotelService.save(this.hotel).subscribe(\n      hotel => {\n        this.hotel = hotel;\n        this.feedback = {type: 'success', message: 'Save was successful!'};\n        setTimeout(() => {\n          this.router.navigate(['/hotels']);\n        }, 1000);\n      },\n      err => {\n        this.feedback = {type: 'warning', message: 'Error saving'};\n      }\n    );\n  }\n\n  cancel() {\n    this.router.navigate(['/hotels']);\n  }\n}\n","export class HotelFilter {\n    city = '';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HotelFilter } from '../hotel-filter';\nimport { HotelService } from '../hotel.service';\nimport { Hotel } from '../hotel';\n\n@Component({\n  selector: 'app-hotel',\n  templateUrl: 'hotel-list.component.html'\n})\nexport class HotelListComponent implements OnInit {\n\n  filter = new HotelFilter();\n  selectedHotel: Hotel;\n  feedback: any = {};\n\n  get hotelList(): Hotel[] {\n    return this.hotelService.hotelList;\n  }\n\n  constructor(private hotelService: HotelService) {\n  }\n\n  ngOnInit() {\n    this.search();\n  }\n\n  search(): void {\n    this.hotelService.load(this.filter);\n  }\n\n  select(selected: Hotel): void {\n    this.selectedHotel = selected;\n  }\n\n  delete(hotel: Hotel): void {\n    if (confirm('Are you sure?')) {\n      this.hotelService.delete(hotel).subscribe(() => {\n          this.feedback = {type: 'success', message: 'Delete was successful!'};\n          setTimeout(() => {\n            this.search();\n          }, 1000);\n        },\n        err => {\n          this.feedback = {type: 'warning', message: 'Error deleting.'};\n        }\n      );\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HotelListComponent } from './hotel-list/hotel-list.component';\nimport { HotelEditComponent } from './hotel-edit/hotel-edit.component';\nimport { HotelService } from './hotel.service';\nimport { HOTEL_ROUTES } from './hotel.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(HOTEL_ROUTES)\n  ],\n  declarations: [\n    HotelListComponent,\n    HotelEditComponent\n  ],\n  providers: [HotelService],\n  exports: []\n})\nexport class HotelModule { }\n","import { Routes } from '@angular/router';\nimport { HotelListComponent } from './hotel-list/hotel-list.component';\nimport { HotelEditComponent } from './hotel-edit/hotel-edit.component';\n\nexport const HOTEL_ROUTES: Routes = [\n  {\n    path: 'hotels',\n    component: HotelListComponent\n  },\n  {\n    path: 'hotels/:id',\n    component: HotelEditComponent\n  }\n];\n","import { Hotel } from './hotel';\nimport { HotelFilter } from './hotel-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class HotelService {\n  hotelList: Hotel[] = [];\n  api = 'http://www.angular.at/api/hotel';\n\n  constructor(private http: HttpClient) {\n  }\n\n  findById(id: string): Observable<Hotel> {\n    const url = `${this.api}/${id}`;\n    const params = { id: id };\n    return this.http.get<Hotel>(url, {params, headers});\n  }\n\n  load(filter: HotelFilter): void {\n    this.find(filter).subscribe(result => {\n        this.hotelList = result;\n      },\n      err => {\n        console.error('error loading', err);\n      }\n    );\n  }\n\n  find(filter: HotelFilter): Observable<Hotel[]> {\n    const params = {\n      'city': filter.city,\n    };\n\n    return this.http.get<Hotel[]>(this.api, {params, headers});\n  }\n\n  save(entity: Hotel): Observable<Hotel> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.put<Hotel>(url, entity, {headers, params});\n    } else {\n      url = `${this.api}`;\n      return this.http.post<Hotel>(url, entity, {headers, params});\n    }\n  }\n\n  delete(entity: Hotel): Observable<Hotel> {\n    let params = new HttpParams();\n    let url = '';\n    if (entity.id) {\n      url = `${this.api}/${entity.id.toString()}`;\n      params = new HttpParams().set('ID', entity.id.toString());\n      return this.http.delete<Hotel>(url, {headers, params});\n    }\n    return null;\n  }\n}\n\n","export class Hotel {\n  id: number;\n  name: string;\n  city: string;\n  stars: string;\n}\n","import { Component } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { LoginService } from '../login/login.service';\n\n\n\n@Component({\n  selector: 'app-home-layout',\n  // template: `\n  //   <app-header></app-header>\n  //   <router-outlet></router-outlet>\n  // `,\n  templateUrl: '../app.component.html',\n  styles: []\n})\nexport class HomeLayoutComponent {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private loginService: LoginService,\n    ) {\n      // this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n      // if(!this.currentUser || !this.currentUser.id || !this.currentUser.access_token){\n      //   this.router.navigate(['/login']);\n      // }\n\n    //  this.router.navigate([this.loginService.getCurrentUser() || '/home'])\n      \n    let url = this.loginService.getCurrentUser();\n    console.log('HomeLayoutComponent url', url);\n    console.log('HomeLayoutComponent router url', this.router.url);\n    \n    // if(this.router.url === 'shopping' || this.router.url === '/shopping'){\n    //   this.router.navigate(['/shopping'])\n    //   return;\n    // }\n    \n  //   if(url === '/login'){\n  //    this.router.navigate(['/login'])\n  //    return;\n  //  }\n  //  else if(this.router.url === 'home' || this.router.url === '/home' ){\n  //     this.router.navigate(['/home/dashboard'])  \n  //     return;\n  //   }\n\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-layout',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n  styles: []\n})\nexport class LoginLayoutComponent {}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shopping-layout',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n  styles: []\n})\nexport class ShoppingLayoutComponent {}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Login } from './login';\nimport { LoginService } from './login.service';\n//import {AlertService} from '../services'\n\n@Component({templateUrl: 'login.component.html'})\nexport class LoginComponent implements OnInit {\n   \n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    login: Login = {};\n    feedback: any = {};\n\n    constructor(\n       \n        private route: ActivatedRoute,\n        private router: Router,\n        private loginService: LoginService,\n        \n        ){}\n\n    ngOnInit() {\n       let url = this.loginService.getCurrentUser();\n       console.log('login com. url', url);\n      if(url === '/login'){\n        this.router.navigate(['/login'])\n      }else{\n        this.router.navigate(['/home'])\n      }\n      \n        // reset login status\n        //this.loginService.logout();\n\n        // get return url from route parameters or default to '/'\n       // this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n  \n\n    save() {\n        this.loginService.login(this.login).subscribe(\n          user => {\n           // this.login = login;\n            this.feedback = {type: 'success', message: 'login was successful!'};\n            if (user && user.access_token) {\n                                 // store user details and jwt token in local storage to keep user logged in between page refreshes\n                                 localStorage.setItem('currentUser', JSON.stringify(user));\n                             }\n            setTimeout(() => {\n              this.router.navigate(['/home']);\n            }, 100);\n          },\n          err => {\n            this.feedback = {type: 'warning', message: 'Error Login'};\n          }\n        );\n      }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\nimport { LoginService } from './login.service';\nimport { LOGIN_ROUTES } from './login.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(LOGIN_ROUTES)\n  ],\n  declarations: [\n    LoginComponent\n  ],\n  providers: [LoginService],\n  exports: []\n})\nexport class LoginModule { }\n","import { Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\n\nexport const LOGIN_ROUTES: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n//import { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Login } from './login';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class LoginService {\n    loginList: Login[] = [];\n  api = 'http://127.0.0.1:3000/users/login';\n\n  constructor(private http: HttpClient) {\n  }\n\n    // oldlogin(username: string, password: string) {\n    //     return this.http.post<any>(`/users/authenticate`, { username: username, password: password })\n    //         .pipe(map(user => {\n    //             // login successful if there's a jwt token in the response\n    //             if (user && user.access_token) {\n    //                 // store user details and jwt token in local storage to keep user logged in between page refreshes\n    //                 localStorage.setItem('currentUser', JSON.stringify(user));\n    //             }\n\n    //             return user;\n    //         }));\n    // }\n\n    login(entity: Login): Observable<Login> {\n        let params = new HttpParams();\n        let url = '';\n          url = `${this.api}`;\n          return this.http.post<Login>(url, entity, {headers, params});\n      \n      }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n    }\n\n    getCurrentUser (): string{\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if(!currentUser || !currentUser.id || !currentUser.access_token){\n          //this.router.navigate(['/login']);\n          return '/login'\n        }else {\n          return ''\n        }\n        \n    }\n}","import {\n    ChangeDetectionStrategy,\n    Component\n  } from '@angular/core';\n  import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n  \n  @Component({\n    selector: 'app-confirm-dialog',\n    template: `\n  <div>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{title}}</h4>\n    </div>\n    <div class=\"modal-body\">\n      <p>{{prompt}}</p>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\"\n        class=\"btn btn-outline-dark\"\n        (click)=\"activeModal.close(false)\">Cancel</button>\n      <button type=\"button\"\n        class=\"btn btn-outline-dark\"\n        (click)=\"activeModal.close(true)\">OK</button>\n    </div>\n  </div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  })\n  export class ConfirmDialogComponent {\n    title: string;\n    prompt: string;\n  \n    constructor(public activeModal: NgbActiveModal) {\n    }\n  }\n  ","import {\n    ChangeDetectionStrategy,\n    Component\n  } from '@angular/core';\n  import { FormControl, Validators } from '@angular/forms';\n  import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n  \n  @Component({\n    selector: 'app-input-dialog',\n    template: `\n  <div>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{title}}</h4>\n    </div>\n    <div class=\"modal-body\">\n      <p>{{message}}</p>\n      <input [formControl]=\"input\" type=\"text\">\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\"\n        class=\"btn btn-outline-dark\"\n        (click)=\"activeModal.close()\">Cancel</button>\n      <button type=\"button\"\n        class=\"btn btn-outline-dark\"\n        [class.disabled]=\"input.invalid\"\n        [disabled]=\"input.invalid\"\n        (click)=\"activeModal.close(input.value)\">OK</button>\n    </div>\n  </div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  })\n  export class InputDialogComponent {\n    title: string;\n    set initialValue(value: string) {\n      this.input.setValue(value);\n    }\n    message: string;\n    input = new FormControl('', Validators.required);\n  \n    constructor(public activeModal: NgbActiveModal) {\n    }\n  }\n  ","import {\n    ChangeDetectionStrategy,\n    Component\n  } from '@angular/core';\n  import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n  \n  @Component({\n    selector: 'app-message-dialog',\n    template: `\n  <div>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{title}}</h4>\n    </div>\n    <div class=\"modal-body\">\n      <p>{{message}}</p>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\"\n        class=\"btn btn-outline-dark\"\n        (click)=\"activeModal.close(true)\">OK</button>\n    </div>\n  </div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n  })\n  export class MessageDialogComponent {\n    title: string;\n    message: string;\n  \n    constructor(public activeModal: NgbActiveModal) {\n    }\n  }\n  ","import { Injectable } from '@angular/core';\nimport {\n  NgbModal,\n  NgbModalOptions\n} from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, from, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ConfirmDialogComponent} from './confirm-dialog.component';\nimport {  InputDialogComponent} from './input-dialog.component';\nimport {  MessageDialogComponent} from './message-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(private ngbModal: NgbModal) { }\n\n  confirm(\n    prompt = 'Really?', title = 'Confirm'\n  ): Observable<boolean> {\n    const modal = this.ngbModal.open(\n      ConfirmDialogComponent, { backdrop: 'static' });\n\n    modal.componentInstance.prompt = prompt;\n    modal.componentInstance.title = title;\n\n    return from(modal.result).pipe(\n      catchError(error => {\n        console.warn(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  input(\n    message: string, initialValue: string, title = 'Input'\n  ): Observable<string> {\n    const modal = this.ngbModal.open(\n      InputDialogComponent, { backdrop: 'static' });\n\n    modal.componentInstance.message = message;\n    modal.componentInstance.initialValue = initialValue;\n    modal.componentInstance.title = title;\n\n    return from(modal.result).pipe(\n      catchError(error => {\n        console.warn(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  message(\n    message: string, title = 'Message'\n  ): Observable<boolean> {\n    const modal = this.ngbModal.open(\n      MessageDialogComponent, { backdrop: 'static' });\n\n    modal.componentInstance.message = message;\n    modal.componentInstance.title = title;\n\n    return from(modal.result).pipe(\n      catchError(error => {\n        console.warn(error);\n        return of(undefined);\n      })\n    );\n  }\n\n  custom<R>(\n    content: any,\n    config?: { [index: string]: any; },\n    options?: NgbModalOptions\n  ): Observable<R> {\n    // we use a static backdrop by default,\n    // but allow the user to set anything in the options\n    const modal = this.ngbModal.open(\n      content,\n      { backdrop: 'static', ...options }\n    );\n\n    // copy the config values (if any) into the component\n    Object.assign(modal.componentInstance, config);\n\n    return from(modal.result).pipe(\n      catchError(error => {\n        console.warn(error);\n        return of(undefined);\n      })\n    );\n  }\n}\n","export default \"\\n  .selectBox {\\n    width: 14px;\\n    height: 17px;\\n    background-color: whitesmoke;\\n    color: #777777;\\n    border: 0px;\\n    padding-bottom: 20px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7RUFDRTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osNEJBQTRCO0lBQzVCLGNBQWM7SUFDZCxXQUFXO0lBQ1gsb0JBQW9CO0VBQ3RCIiwiZmlsZSI6InNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4gIC5zZWxlY3RCb3gge1xuICAgIHdpZHRoOiAxNHB4O1xuICAgIGhlaWdodDogMTdweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xuICAgIGNvbG9yOiAjNzc3Nzc3O1xuICAgIGJvcmRlcjogMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICB9Il19 */\"","import {Component} from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'navbar-cmp',\n  templateUrl: 'navbar.component.html',\n  styleUrls:['navbar.component.css']\n})\nexport class NavbarComponent {\n  \n  profile: any;\n\n  private sidebarVisible: boolean = false;\n\n  constructor(\n    private router: Router,\n  ) {\n  }\n\n  sidebarToggle() {\n    var body = document.getElementsByTagName('body')[0];\nconsole.log(body)\n    console.log('nav bar',this.sidebarVisible)\n    if (this.sidebarVisible == false) {\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    } else {\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n  }\n\n  ProfileDropDownHandler(value){\n    console.log(value)\n    if(value === 'Logout'){\n      this.logOutHandler();\n    }\n  }\n\n  logOutHandler(){\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login'])\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ProductService } from '../product.service';\n//import { ProductService } from '../../';\nimport { Product } from '../product';\nimport { map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { FileDetector } from 'selenium-webdriver/remote';\n\n@Component({\n  selector: 'product-edit',\n  templateUrl: './product-edit.component.html'\n})\nexport class ProductEditComponent implements OnInit {\n\n    id: string;\n    product: Product;\n    errors: string;\n    producttypesId_list: any;\n    unitsId_list: any;\n    displayingPeriority_list : any;\n    \n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private productService: ProductService) { \n\n            this.displayingPeriority_list = [{id:'Top', value: 1}, {id:'Middle', value: 2},{id:'Bottom', value: 3}];\n    }\n\n    ngOnInit() {\n        this\n            .route\n            .params\n            .pipe(\n                map(p => p['id']),\n                switchMap(id => {\n                    if (id === 'new') return of(new Product());\n                    return this.productService.findById(id)\n                })\n            )\n            .subscribe(\n                product => { \n                    this.product = product; \n                    this.errors = ''; \n                },\n                err => { \n                    this.errors = err; \n                }\n            );\n\n            this.producttypesId_list = [{id:1, typeName: \"Vegitables\" }, {id:2, typeName: \"Fruites\" }]\n            this.unitsId_list = [{id:1, unitDisplayName: \"kg\" },{id:2, unitDisplayName: \"dozen\" },{id:3, unitDisplayName: \"250 GM\" },{id:4, unitDisplayName: \"Bundle\" } ]\n    }\n\n    save() {\n        this.product.displayName = this.product.eng_title + \" \"+ this.product.urdu_title;\n        if(!this.product.quentityOnHand){\n            this.product.quentityOnHand = 0;\n        }\n        this.product.displayingPeriority = +this.product.displayingPeriority;\n        this.productService.save(this.product).subscribe(\n            product => { \n                //this.product = product; \n               // this.errors = 'Save was successful!'; \n                // setTimeout(() => {\n                //     this.router.navigate(['/home/product']);\n                // }, 1000);                   \n            },\n            err => { \n                this.errors = err; \n            }\n        );\n    }\n\n    cancel() {\n        this.router.navigate(['/home/product']);\n    }    \n\n\n    changeImageListener($event) : void {\n        this.readImage($event.target);\n      }\n      \n      readImage(inputValue: any): void {\n        var file:File = inputValue.files[0];\n        var myReader:FileReader = new FileReader();\n      \n        myReader.onloadend = (e) => {\n            this.product.image = myReader.result.toString();\n        }\n            myReader.readAsDataURL(file)\n      }\n\n}","export class ProductFilter {\n    eng_title: string = '';\n}","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ProductFilter } from '../product-filter';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\n\n@Component({\n    selector: 'product',\n    templateUrl: 'product-list.component.html'\n})\nexport class ProductListComponent {\n\n    filter = new ProductFilter();\n    selectedProduct: Product;\n    errors = '';\n\n    get productList(): Product[] {\n        return this.productService.productList;\n    }\n\n    constructor(private productService: ProductService) {\n    }\n\n    ngOnInit() {\n        this.search();\n    }\n\n    search(): void {\n        this.productService.load(this.filter);\n    }\n\n    select(selected: Product): void {\n        this.selectedProduct = selected;\n    }\n\n    delete(product: Product): void {\n        if (confirm(\"Are you sure?\")) {\n            this.productService.delete(product).subscribe(\n                product => {\n                    this.errors = 'Delete was successful!';\n                    setTimeout(() => {\n                        this.search();\n                    },1000);                   \n                },\n                err => {\n                    this.errors = err;\n                }\n            );\n        }        \n        \n    }    \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nimport { ProductService } from './product.service';\nimport { PRODUCT_ROUTES } from './product.routes';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(PRODUCT_ROUTES),\n    NgxPaginationModule\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductEditComponent\n  ],\n  providers: [\n    ProductService\n  ],\n  exports: [\n  ]\n})\nexport class ProductModule { }\n","import { Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nimport {HomeLayoutComponent} from '../layouts/home-layout.component';\n\n\nexport const PRODUCT_ROUTES: Routes = [\n  {\n    path: 'home',\n    component: HomeLayoutComponent,\n    children: [\n      {\n        path: 'product',\n        component: ProductListComponent\n      }\n    ]\n  },\n  {\n    path: 'home',\n    component: HomeLayoutComponent,\n    children: [\n      {\n        path: 'product/:id',\n        component: ProductEditComponent\n      }\n    ]\n  },\n  {\n    path: 'products',\n    component: HomeLayoutComponent,\n    // children: [\n    //   {\n    //     path: 'product/:id',\n    //     component: ProductEditComponent\n    //   }\n    // ]\n  }\n\n]\n","import { Product } from './product';\nimport { ProductFilter } from './product-filter';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class ProductService {\n    \n    baseUrl = `http://127.0.0.1:3000/products`;\n    constructor(private http: HttpClient) {\n    }\n\n    productList: Product[] = [];\n  \n    findById(id: string): Observable<Product> {\n        let url = `${this.baseUrl}/${id}`; \n        let params = { \"id\": id };\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n        return this.http.get<Product>(url, {params, headers});\n    }\n    \n    load(filter: ProductFilter): void {\n        this.find(filter).subscribe(\n            result => {\n                this.productList = result;\n            },\n            err => {\n                console.error('error loading', err);\n            }\n        )\n    }\n\n    find(filter: ProductFilter): Observable<Product[]> {\n        let url = `${this.baseUrl}`;\n        let headers = new HttpHeaders()\n                            .set('Accept', 'application/json');\n\n        let params = {\n            \"eng_title\": filter.eng_title,\n        };\n\n        return this.http.get<Product[]>(url, {params, headers});\n    }\n\n    save(entity: Product): Observable<Product> {        \n        var params = new HttpParams();\n        var url = \"\";\n        entity.image ? 0: entity.image = '';\n        entity.quentityUnitsId ? 0: entity.quentityUnitsId = '';\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.put<Product>(url, entity, {headers, params});\n        }\n        else {\n            url = `${this.baseUrl}`;\n            return this.http.post<Product>(url, entity, {headers, params});\n        }        \n    }\n\n\n    delete(entity: Product): Observable<Product> {\n        var params = new HttpParams();\n        var url = \"\";\n        const headers = new HttpHeaders().set('content-type', 'application/json');  \n        if(entity.id) {\n            url = `${this.baseUrl}/${entity.id.toString()}`;\n            params = new HttpParams().set('ID', entity.id.toString());  \n            return this.http.delete<Product>(url, {headers, params});\n        }\n\n        return null;\n    }       \n}\n\n","export class Product {\n    id: string;\n    eng_title: string;\n    urdu_title: string;\n    displayName: string;\n    producttypesId: string;\n    unitsId: string;    \n    image: string = '';    \n    quentityOnHand: number;   \n    quentityUnitsId: string = ''; \n    buyingPrice: number;    \n    salePrice: number ;    \n    retailPrice: number;    \n    buyingPriceUnitsId: string;    \n    salePriceUnitsId: string;    \n    retailPiceUnitsId: string;   \n    description: string; \n    isAvailable: boolean;\n    displayingPeriority: number;\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Shopping } from './shopping';\nimport { ShoppingService } from './shopping.service';\n//import {AlertService} from '../services'\n\n@Component({templateUrl: 'shopping.component.html'})\nexport class ShoppingComponent implements OnInit {\n   \n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    productList: Shopping[];\n    feedback: any = {};\n    producttypesId_list: any;\n    unitsId_list: any;\n    public p: number;\n\n    constructor(\n       \n        private route: ActivatedRoute,\n        private router: Router,\n        private shoppingService: ShoppingService,\n        \n        ){}\n\n    ngOnInit() {\n        this.producttypesId_list = [{id:1, typeName: \"Vegitables\" }, {id:2, typeName: \"Fruites\" }]\n            this.unitsId_list = {1: \"kg\", 2: \"dozen\", 3: \"250 GM\", 4: \"Bundle\" };\n        this.shoppingService.productsByType('2').subscribe(\n            products => {\n               this.productList = products;\n                \n            },\n            \n        )\n       \n    }\n\n    getProductByType(type){\n        this.shoppingService.productsByType(type).subscribe(\n            products => {\n                this.p = 1;\n               this.productList = products;\n                \n            },\n            \n        );\n    }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ShoppingComponent } from './shopping.component';\nimport { ShoppingService } from './shopping.service';\nimport { Shopping_ROUTES } from './shopping.routes';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(Shopping_ROUTES),\n    NgxPaginationModule\n  ],\n  declarations: [\n    ShoppingComponent\n  ],\n  providers: [ShoppingService],\n  exports: []\n})\nexport class ShoppingModule { }\n","import { Routes } from '@angular/router';\nimport { ShoppingComponent } from './shopping.component';\n\n\nexport const Shopping_ROUTES: Routes = [\n  {\n    path: 'shopping',\n    component: ShoppingComponent\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n//import { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Shopping } from './shopping';\n\nconst headers = new HttpHeaders().set('Accept', 'application/json');\n\n@Injectable()\nexport class ShoppingService {\n    productList: Shopping[] = [];\n  api = 'http://127.0.0.1:3000/shopping/protucts';\n\n  constructor(private http: HttpClient) {\n  }\n\n    productsByType(productType: string): Observable<Shopping[]> {\n        let params = new HttpParams();\n        let url = '';\n          url = `${this.api}/type/${productType}`;\n          return this.http.get<Shopping[]>(url, {params, headers});\n      \n      }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n    }\n\n}","import {Component} from '@angular/core';\n\n\n@Component({\n  selector: 'sidebar-cmp',\n  templateUrl: 'sidebar.component.html',\n})\n\nexport class SidebarComponent {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}